{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\13093\\\\codestuff\\\\portfolio\\\\src\\\\components\\\\TabHeaderMinimal.js\",\n  _s = $RefreshSig$();\nimport { View, Text } from \"react-native\";\nimport React from \"react\";\nimport { Button, HStack, Pressable, useColorMode } from \"native-base\";\nimport { Dimensions } from \"react-native\";\nimport { useSpring, animated, useSpringValue } from \"@react-spring/web\";\nimport TabBarMinimal from \"./TabBarMinimal\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst width = Dimensions.get(\"window\").width;\nconst height = Dimensions.get(\"window\").height;\nconst TabHeaderMinimal = () => {\n  _s();\n  const {\n    colorMode,\n    toggleColorMode\n  } = useColorMode();\n  const bg = useSpring({\n    background: colorMode === \"light\" ? \"white\" : \"#202023\"\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Pressable, {\n      w: \"10\",\n      h: \"10\",\n      bg: \"gray.300\",\n      onPress: toggleColorMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(TabHeaderMinimal, \"0pyD933a7Jy+5IYAxk+6mh6lV3Q=\", false, function () {\n  return [useColorMode, useSpring];\n});\n_c = TabHeaderMinimal;\nexport default TabBarMinimal;\nvar _c;\n$RefreshReg$(_c, \"TabHeaderMinimal\");","map":{"version":3,"names":["View","Text","React","Button","HStack","Pressable","useColorMode","Dimensions","useSpring","animated","useSpringValue","TabBarMinimal","width","get","height","TabHeaderMinimal","colorMode","toggleColorMode","bg","background"],"sources":["C:/Users/13093/codestuff/portfolio/src/components/TabHeaderMinimal.js"],"sourcesContent":["import { View, Text } from \"react-native\";\r\nimport React from \"react\";\r\nimport { Button, HStack, Pressable, useColorMode } from \"native-base\";\r\nimport { Dimensions } from \"react-native\";\r\n\r\nimport { useSpring, animated, useSpringValue } from \"@react-spring/web\";\r\nimport TabBarMinimal from \"./TabBarMinimal\";\r\nconst width = Dimensions.get(\"window\").width;\r\nconst height = Dimensions.get(\"window\").height;\r\n\r\nconst TabHeaderMinimal = () => {\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n  const bg = useSpring({\r\n    background: colorMode === \"light\" ? \"white\" : \"#202023\",\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Pressable w=\"10\" h=\"10\" bg={\"gray.300\"} onPress={toggleColorMode} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TabBarMinimal;\r\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,IAAI,QAAQ,cAAc;AACzC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,MAAM,EAAEC,SAAS,EAAEC,YAAY,QAAQ,aAAa;AACrE,SAASC,UAAU,QAAQ,cAAc;AAEzC,SAASC,SAAS,EAAEC,QAAQ,EAAEC,cAAc,QAAQ,mBAAmB;AACvE,OAAOC,aAAa,MAAM,iBAAiB;AAAC;AAAA;AAC5C,MAAMC,KAAK,GAAGL,UAAU,CAACM,GAAG,CAAC,QAAQ,CAAC,CAACD,KAAK;AAC5C,MAAME,MAAM,GAAGP,UAAU,CAACM,GAAG,CAAC,QAAQ,CAAC,CAACC,MAAM;AAE9C,MAAMC,gBAAgB,GAAG,MAAM;EAAA;EAC7B,MAAM;IAAEC,SAAS;IAAEC;EAAgB,CAAC,GAAGX,YAAY,EAAE;EAErD,MAAMY,EAAE,GAAGV,SAAS,CAAC;IACnBW,UAAU,EAAEH,SAAS,KAAK,OAAO,GAAG,OAAO,GAAG;EAChD,CAAC,CAAC;EAEF,oBACE;IAAA,uBACE,QAAC,SAAS;MAAC,CAAC,EAAC,IAAI;MAAC,CAAC,EAAC,IAAI;MAAC,EAAE,EAAE,UAAW;MAAC,OAAO,EAAEC;IAAgB;MAAA;MAAA;MAAA;IAAA;EAAG,iBACpE;AAEP,CAAC;AAAC,GAZIF,gBAAgB;EAAA,QACmBT,YAAY,EAExCE,SAAS;AAAA;AAAA,KAHhBO,gBAAgB;AActB,eAAeJ,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}