{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\13093\\\\codestuff\\\\portfolio\\\\src\\\\components\\\\AnimatedBackground.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { View } from \"react-native\";\nimport { useColorMode } from \"native-base\";\nimport { useSpring, animated } from \"@react-spring/web\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnimatedBackground = () => {\n  _s();\n  const {\n    colorMode\n  } = useColorMode();\n  const [backgroundColor, setBackgroundColor] = useState(0);\n  const backgroundProps = useSpring({\n    backgroundColor: colorMode === \"light\" ? 1 : 0,\n    from: {\n      backgroundColor\n    },\n    config: {\n      duration: 500\n    },\n    onRest: () => setBackgroundColor(backgroundColor)\n  });\n  const backgroundColorInterpolate = backgroundProps.backgroundColor.interpolate(color => color === 0 ? \"#333\" : \"#fff\");\n  return /*#__PURE__*/_jsxDEV(animated.View, {\n    style: {\n      backgroundColor: backgroundColorInterpolate,\n      flex: 1\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(AnimatedBackground, \"FdVvkTJ6U2t66alWhOMllbrH/wU=\", false, function () {\n  return [useColorMode, useSpring];\n});\n_c = AnimatedBackground;\nexport default AnimatedBackground;\nvar _c;\n$RefreshReg$(_c, \"AnimatedBackground\");","map":{"version":3,"names":["React","useState","useEffect","View","useColorMode","useSpring","animated","AnimatedBackground","colorMode","backgroundColor","setBackgroundColor","backgroundProps","from","config","duration","onRest","backgroundColorInterpolate","interpolate","color","flex"],"sources":["C:/Users/13093/codestuff/portfolio/src/components/AnimatedBackground.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { useColorMode } from \"native-base\";\r\nimport { useSpring, animated } from \"@react-spring/web\";\r\n\r\n\r\nconst AnimatedBackground = () => {\r\n  const { colorMode } = useColorMode();\r\n  const [backgroundColor, setBackgroundColor] = useState(0);\r\n\r\n  const backgroundProps = useSpring({\r\n    backgroundColor: colorMode === \"light\" ? 1 : 0,\r\n    from: { backgroundColor },\r\n    config: { duration: 500 },\r\n    onRest: () => setBackgroundColor(backgroundColor),\r\n  });\r\n\r\n  const backgroundColorInterpolate =\r\n    backgroundProps.backgroundColor.interpolate((color) =>\r\n      color === 0 ? \"#333\" : \"#fff\"\r\n    );\r\n\r\n  return (\r\n    <animated.View\r\n      style={{\r\n        backgroundColor: backgroundColorInterpolate,\r\n        flex: 1,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AnimatedBackground;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,cAAc;AACnC,SAASC,YAAY,QAAQ,aAAa;AAC1C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,mBAAmB;AAAC;AAGxD,MAAMC,kBAAkB,GAAG,MAAM;EAAA;EAC/B,MAAM;IAAEC;EAAU,CAAC,GAAGJ,YAAY,EAAE;EACpC,MAAM,CAACK,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAEzD,MAAMU,eAAe,GAAGN,SAAS,CAAC;IAChCI,eAAe,EAAED,SAAS,KAAK,OAAO,GAAG,CAAC,GAAG,CAAC;IAC9CI,IAAI,EAAE;MAAEH;IAAgB,CAAC;IACzBI,MAAM,EAAE;MAAEC,QAAQ,EAAE;IAAI,CAAC;IACzBC,MAAM,EAAE,MAAML,kBAAkB,CAACD,eAAe;EAClD,CAAC,CAAC;EAEF,MAAMO,0BAA0B,GAC9BL,eAAe,CAACF,eAAe,CAACQ,WAAW,CAAEC,KAAK,IAChDA,KAAK,KAAK,CAAC,GAAG,MAAM,GAAG,MAAM,CAC9B;EAEH,oBACE,QAAC,QAAQ,CAAC,IAAI;IACZ,KAAK,EAAE;MACLT,eAAe,EAAEO,0BAA0B;MAC3CG,IAAI,EAAE;IACR;EAAE;IAAA;IAAA;IAAA;EAAA,QACF;AAEN,CAAC;AAAC,GAxBIZ,kBAAkB;EAAA,QACAH,YAAY,EAGVC,SAAS;AAAA;AAAA,KAJ7BE,kBAAkB;AA0BxB,eAAeA,kBAAkB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}