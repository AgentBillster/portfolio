{"ast":null,"code":"import { MissingIcon } from '@react-navigation/elements';\nimport { CommonActions, NavigationContext, NavigationRouteContext, useLinkBuilder, useTheme } from '@react-navigation/native';\nimport React from 'react';\nimport { Animated, Platform, StyleSheet, View } from 'react-native';\nimport { useSafeAreaFrame } from 'react-native-safe-area-context';\nimport BottomTabBarHeightCallbackContext from '../utils/BottomTabBarHeightCallbackContext';\nimport useIsKeyboardShown from '../utils/useIsKeyboardShown';\nimport BottomTabItem from './BottomTabItem';\nconst DEFAULT_TABBAR_HEIGHT = 49;\nconst COMPACT_TABBAR_HEIGHT = 32;\nconst DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\nconst useNativeDriver = Platform.OS !== 'web';\nconst shouldUseHorizontalLabels = _ref => {\n  let {\n    state,\n    descriptors,\n    layout,\n    dimensions\n  } = _ref;\n  const {\n    tabBarLabelPosition\n  } = descriptors[state.routes[state.index].key].options;\n  if (tabBarLabelPosition) {\n    switch (tabBarLabelPosition) {\n      case 'beside-icon':\n        return true;\n      case 'below-icon':\n        return false;\n    }\n  }\n  if (layout.width >= 768) {\n    // Screen size matches a tablet\n    const maxTabWidth = state.routes.reduce((acc, route) => {\n      const {\n        tabBarItemStyle\n      } = descriptors[route.key].options;\n      const flattenedStyle = StyleSheet.flatten(tabBarItemStyle);\n      if (flattenedStyle) {\n        if (typeof flattenedStyle.width === 'number') {\n          return acc + flattenedStyle.width;\n        } else if (typeof flattenedStyle.maxWidth === 'number') {\n          return acc + flattenedStyle.maxWidth;\n        }\n      }\n      return acc + DEFAULT_MAX_TAB_ITEM_WIDTH;\n    }, 0);\n    return maxTabWidth <= layout.width;\n  } else {\n    return dimensions.width > dimensions.height;\n  }\n};\nconst getPaddingBottom = insets => Math.max(insets.bottom - Platform.select({\n  ios: 4,\n  default: 0\n}), 0);\nexport const getTabBarHeight = _ref2 => {\n  var _StyleSheet$flatten;\n  let {\n    state,\n    descriptors,\n    dimensions,\n    insets,\n    style,\n    ...rest\n  } = _ref2;\n  // @ts-ignore\n  const customHeight = (_StyleSheet$flatten = StyleSheet.flatten(style)) === null || _StyleSheet$flatten === void 0 ? void 0 : _StyleSheet$flatten.height;\n  if (typeof customHeight === 'number') {\n    return customHeight;\n  }\n  const isLandscape = dimensions.width > dimensions.height;\n  const horizontalLabels = shouldUseHorizontalLabels({\n    state,\n    descriptors,\n    dimensions,\n    ...rest\n  });\n  const paddingBottom = getPaddingBottom(insets);\n  if (Platform.OS === 'ios' && !Platform.isPad && isLandscape && horizontalLabels) {\n    return COMPACT_TABBAR_HEIGHT + paddingBottom;\n  }\n  return DEFAULT_TABBAR_HEIGHT + paddingBottom;\n};\nexport default function BottomTabBar(_ref3) {\n  let {\n    state,\n    navigation,\n    descriptors,\n    insets,\n    style\n  } = _ref3;\n  const {\n    colors\n  } = useTheme();\n  const buildLink = useLinkBuilder();\n  const focusedRoute = state.routes[state.index];\n  const focusedDescriptor = descriptors[focusedRoute.key];\n  const focusedOptions = focusedDescriptor.options;\n  const {\n    tabBarShowLabel,\n    tabBarHideOnKeyboard = false,\n    tabBarVisibilityAnimationConfig,\n    tabBarStyle,\n    tabBarBackground,\n    tabBarActiveTintColor,\n    tabBarInactiveTintColor,\n    tabBarActiveBackgroundColor,\n    tabBarInactiveBackgroundColor\n  } = focusedOptions;\n  const dimensions = useSafeAreaFrame();\n  const isKeyboardShown = useIsKeyboardShown();\n  const onHeightChange = React.useContext(BottomTabBarHeightCallbackContext);\n  const shouldShowTabBar = !(tabBarHideOnKeyboard && isKeyboardShown);\n  const visibilityAnimationConfigRef = React.useRef(tabBarVisibilityAnimationConfig);\n  React.useEffect(() => {\n    visibilityAnimationConfigRef.current = tabBarVisibilityAnimationConfig;\n  });\n  const [isTabBarHidden, setIsTabBarHidden] = React.useState(!shouldShowTabBar);\n  const [visible] = React.useState(() => new Animated.Value(shouldShowTabBar ? 1 : 0));\n  React.useEffect(() => {\n    const visibilityAnimationConfig = visibilityAnimationConfigRef.current;\n    if (shouldShowTabBar) {\n      var _visibilityAnimationC, _visibilityAnimationC2;\n      const animation = (visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC = visibilityAnimationConfig.show) === null || _visibilityAnimationC === void 0 ? void 0 : _visibilityAnimationC.animation) === 'spring' ? Animated.spring : Animated.timing;\n      animation(visible, {\n        toValue: 1,\n        useNativeDriver,\n        duration: 250,\n        ...(visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC2 = visibilityAnimationConfig.show) === null || _visibilityAnimationC2 === void 0 ? void 0 : _visibilityAnimationC2.config)\n      }).start(_ref4 => {\n        let {\n          finished\n        } = _ref4;\n        if (finished) {\n          setIsTabBarHidden(false);\n        }\n      });\n    } else {\n      var _visibilityAnimationC3, _visibilityAnimationC4;\n      setIsTabBarHidden(true);\n      const animation = (visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC3 = visibilityAnimationConfig.hide) === null || _visibilityAnimationC3 === void 0 ? void 0 : _visibilityAnimationC3.animation) === 'spring' ? Animated.spring : Animated.timing;\n      animation(visible, {\n        toValue: 0,\n        useNativeDriver,\n        duration: 200,\n        ...(visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC4 = visibilityAnimationConfig.hide) === null || _visibilityAnimationC4 === void 0 ? void 0 : _visibilityAnimationC4.config)\n      }).start();\n    }\n    return () => visible.stopAnimation();\n  }, [visible, shouldShowTabBar]);\n  const [layout, setLayout] = React.useState({\n    height: 0,\n    width: dimensions.width\n  });\n  const handleLayout = e => {\n    const {\n      height,\n      width\n    } = e.nativeEvent.layout;\n    onHeightChange === null || onHeightChange === void 0 ? void 0 : onHeightChange(height);\n    setLayout(layout => {\n      if (height === layout.height && width === layout.width) {\n        return layout;\n      } else {\n        return {\n          height,\n          width\n        };\n      }\n    });\n  };\n  const {\n    routes\n  } = state;\n  const paddingBottom = getPaddingBottom(insets);\n  const tabBarHeight = getTabBarHeight({\n    state,\n    descriptors,\n    insets,\n    dimensions,\n    layout,\n    style: [tabBarStyle, style]\n  });\n  const hasHorizontalLabels = shouldUseHorizontalLabels({\n    state,\n    descriptors,\n    dimensions,\n    layout\n  });\n  const tabBarBackgroundElement = tabBarBackground === null || tabBarBackground === void 0 ? void 0 : tabBarBackground();\n  return /*#__PURE__*/React.createElement(Animated.View, {\n    style: [styles.tabBar, {\n      backgroundColor: tabBarBackgroundElement != null ? 'transparent' : colors.card,\n      borderTopColor: colors.border\n    }, {\n      transform: [{\n        translateY: visible.interpolate({\n          inputRange: [0, 1],\n          outputRange: [layout.height + paddingBottom + StyleSheet.hairlineWidth, 0]\n        })\n      }],\n      // Absolutely position the tab bar so that the content is below it\n      // This is needed to avoid gap at bottom when the tab bar is hidden\n      position: isTabBarHidden ? 'absolute' : null\n    }, {\n      height: tabBarHeight,\n      paddingBottom,\n      paddingHorizontal: Math.max(insets.left, insets.right)\n    }, tabBarStyle],\n    pointerEvents: isTabBarHidden ? 'none' : 'auto',\n    onLayout: handleLayout\n  }, /*#__PURE__*/React.createElement(View, {\n    pointerEvents: \"none\",\n    style: StyleSheet.absoluteFill\n  }, tabBarBackgroundElement), /*#__PURE__*/React.createElement(View, {\n    accessibilityRole: \"tablist\",\n    style: styles.content\n  }, routes.map((route, index) => {\n    const focused = index === state.index;\n    const {\n      options\n    } = descriptors[route.key];\n    const onPress = () => {\n      const event = navigation.emit({\n        type: 'tabPress',\n        target: route.key,\n        canPreventDefault: true\n      });\n      if (!focused && !event.defaultPrevented) {\n        navigation.dispatch({\n          ...CommonActions.navigate({\n            name: route.name,\n            merge: true\n          }),\n          target: state.key\n        });\n      }\n    };\n    const onLongPress = () => {\n      navigation.emit({\n        type: 'tabLongPress',\n        target: route.key\n      });\n    };\n    const label = options.tabBarLabel !== undefined ? options.tabBarLabel : options.title !== undefined ? options.title : route.name;\n    const accessibilityLabel = options.tabBarAccessibilityLabel !== undefined ? options.tabBarAccessibilityLabel : typeof label === 'string' && Platform.OS === 'ios' ? `${label}, tab, ${index + 1} of ${routes.length}` : undefined;\n    return /*#__PURE__*/React.createElement(NavigationContext.Provider, {\n      key: route.key,\n      value: descriptors[route.key].navigation\n    }, /*#__PURE__*/React.createElement(NavigationRouteContext.Provider, {\n      value: route\n    }, /*#__PURE__*/React.createElement(BottomTabItem, {\n      route: route,\n      descriptor: descriptors[route.key],\n      focused: focused,\n      horizontal: hasHorizontalLabels,\n      onPress: onPress,\n      onLongPress: onLongPress,\n      accessibilityLabel: accessibilityLabel,\n      to: buildLink(route.name, route.params),\n      testID: options.tabBarTestID,\n      allowFontScaling: options.tabBarAllowFontScaling,\n      activeTintColor: tabBarActiveTintColor,\n      inactiveTintColor: tabBarInactiveTintColor,\n      activeBackgroundColor: tabBarActiveBackgroundColor,\n      inactiveBackgroundColor: tabBarInactiveBackgroundColor,\n      button: options.tabBarButton,\n      icon: options.tabBarIcon ?? (_ref5 => {\n        let {\n          color,\n          size\n        } = _ref5;\n        return /*#__PURE__*/React.createElement(MissingIcon, {\n          color: color,\n          size: size\n        });\n      }),\n      badge: options.tabBarBadge,\n      badgeStyle: options.tabBarBadgeStyle,\n      label: label,\n      showLabel: tabBarShowLabel,\n      labelStyle: options.tabBarLabelStyle,\n      iconStyle: options.tabBarIconStyle,\n      style: options.tabBarItemStyle\n    })));\n  })));\n}\nconst styles = StyleSheet.create({\n  tabBar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    elevation: 8\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"mappings":"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","names":["MissingIcon","CommonActions","NavigationContext","NavigationRouteContext","useLinkBuilder","useTheme","React","Animated","Platform","StyleSheet","View","useSafeAreaFrame","BottomTabBarHeightCallbackContext","useIsKeyboardShown","BottomTabItem","DEFAULT_TABBAR_HEIGHT","COMPACT_TABBAR_HEIGHT","DEFAULT_MAX_TAB_ITEM_WIDTH","useNativeDriver","OS","shouldUseHorizontalLabels","_ref","state","descriptors","layout","dimensions","tabBarLabelPosition","routes","index","key","options","width","maxTabWidth","reduce","acc","route","tabBarItemStyle","flattenedStyle","flatten","maxWidth","height","getPaddingBottom","insets","Math","max","bottom","select","ios","default","getTabBarHeight","_ref2","style","rest","customHeight","_StyleSheet$flatten","isLandscape","horizontalLabels","paddingBottom","isPad","BottomTabBar","navigation","colors","buildLink","focusedRoute","focusedDescriptor","focusedOptions","tabBarShowLabel","tabBarHideOnKeyboard","tabBarVisibilityAnimationConfig","tabBarStyle","tabBarBackground","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarActiveBackgroundColor","tabBarInactiveBackgroundColor","isKeyboardShown","onHeightChange","useContext","shouldShowTabBar","visibilityAnimationConfigRef","useRef","useEffect","current","isTabBarHidden","setIsTabBarHidden","useState","visible","Value","visibilityAnimationConfig","animation","show","_visibilityAnimationC","spring","timing","toValue","duration","_visibilityAnimationC2","config","start","_ref4","finished","hide","_visibilityAnimationC3","_visibilityAnimationC4","stopAnimation","setLayout","handleLayout","e","nativeEvent","tabBarHeight","hasHorizontalLabels","tabBarBackgroundElement","styles","tabBar","backgroundColor","card","borderTopColor","border","transform","translateY","interpolate","inputRange","outputRange","hairlineWidth","position","paddingHorizontal","left","right","pointerEvents","onLayout","absoluteFill","accessibilityRole","content","map","focused","onPress","event","emit","type","target","canPreventDefault","defaultPrevented","dispatch","navigate","name","merge","onLongPress","label","tabBarLabel","undefined","title","accessibilityLabel","tabBarAccessibilityLabel","length","Provider","value","descriptor","horizontal","to","params","testID","tabBarTestID","allowFontScaling","tabBarAllowFontScaling","activeTintColor","inactiveTintColor","activeBackgroundColor","inactiveBackgroundColor","button","tabBarButton","icon","tabBarIcon","_ref5","color","size","badge","tabBarBadge","badgeStyle","tabBarBadgeStyle","showLabel","labelStyle","tabBarLabelStyle","iconStyle","tabBarIconStyle","create","borderTopWidth","elevation","flex","flexDirection"],"sources":["BottomTabBar.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}