{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport { Link, useTheme } from '@react-navigation/native';\nimport Color from 'color';\nimport React from 'react';\nimport { Platform, Pressable, StyleSheet, Text } from 'react-native';\nimport TabBarIcon from './TabBarIcon';\nexport default function BottomTabBarItem(_ref) {\n  let {\n    focused,\n    route,\n    descriptor,\n    label,\n    icon,\n    badge,\n    badgeStyle,\n    to,\n    button = _ref2 => {\n      let {\n        children,\n        style,\n        onPress,\n        to,\n        accessibilityRole,\n        ...rest\n      } = _ref2;\n      if (Platform.OS === 'web' && to) {\n        // React Native Web doesn't forward `onClick` if we use `TouchableWithoutFeedback`.\n        // We need to use `onClick` to be able to prevent default browser handling of links.\n        return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n          to: to,\n          style: [styles.button, style],\n          onPress: e => {\n            if (!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) && (\n            // ignore clicks with modifier keys\n            e.button == null || e.button === 0) // ignore everything but left clicks\n            ) {\n              e.preventDefault();\n              onPress === null || onPress === void 0 ? void 0 : onPress(e);\n            }\n          }\n        }), children);\n      } else {\n        return /*#__PURE__*/React.createElement(Pressable, _extends({}, rest, {\n          accessibilityRole: accessibilityRole,\n          onPress: onPress,\n          style: style\n        }), children);\n      }\n    },\n    accessibilityLabel,\n    testID,\n    onPress,\n    onLongPress,\n    horizontal,\n    activeTintColor: customActiveTintColor,\n    inactiveTintColor: customInactiveTintColor,\n    activeBackgroundColor = 'transparent',\n    inactiveBackgroundColor = 'transparent',\n    showLabel = true,\n    allowFontScaling,\n    labelStyle,\n    iconStyle,\n    style\n  } = _ref;\n  const {\n    colors\n  } = useTheme();\n  const activeTintColor = customActiveTintColor === undefined ? colors.primary : customActiveTintColor;\n  const inactiveTintColor = customInactiveTintColor === undefined ? Color(colors.text).mix(Color(colors.card), 0.5).hex() : customInactiveTintColor;\n  const renderLabel = _ref3 => {\n    let {\n      focused\n    } = _ref3;\n    if (showLabel === false) {\n      return null;\n    }\n    const color = focused ? activeTintColor : inactiveTintColor;\n    if (typeof label === 'string') {\n      return /*#__PURE__*/React.createElement(Text, {\n        numberOfLines: 1,\n        style: [styles.label, {\n          color\n        }, horizontal ? styles.labelBeside : styles.labelBeneath, labelStyle],\n        allowFontScaling: allowFontScaling\n      }, label);\n    }\n    const {\n      options\n    } = descriptor;\n    const children = typeof options.tabBarLabel === 'string' ? options.tabBarLabel : options.title !== undefined ? options.title : route.name;\n    return label({\n      focused,\n      color,\n      position: horizontal ? 'beside-icon' : 'below-icon',\n      children\n    });\n  };\n  const renderIcon = _ref4 => {\n    let {\n      focused\n    } = _ref4;\n    if (icon === undefined) {\n      return null;\n    }\n    const activeOpacity = focused ? 1 : 0;\n    const inactiveOpacity = focused ? 0 : 1;\n    return /*#__PURE__*/React.createElement(TabBarIcon, {\n      route: route,\n      horizontal: horizontal,\n      badge: badge,\n      badgeStyle: badgeStyle,\n      activeOpacity: activeOpacity,\n      inactiveOpacity: inactiveOpacity,\n      activeTintColor: activeTintColor,\n      inactiveTintColor: inactiveTintColor,\n      renderIcon: icon,\n      style: iconStyle\n    });\n  };\n  const scene = {\n    route,\n    focused\n  };\n  const backgroundColor = focused ? activeBackgroundColor : inactiveBackgroundColor;\n  return button({\n    to,\n    onPress,\n    onLongPress,\n    testID,\n    accessibilityLabel,\n    // FIXME: accessibilityRole: 'tab' doesn't seem to work as expected on iOS\n    accessibilityRole: Platform.select({\n      ios: 'button',\n      default: 'tab'\n    }),\n    accessibilityState: {\n      selected: focused\n    },\n    // @ts-expect-error: keep for compatibility with older React Native versions\n    accessibilityStates: focused ? ['selected'] : [],\n    style: [styles.tab, {\n      backgroundColor\n    }, horizontal ? styles.tabLandscape : styles.tabPortrait, style],\n    children: /*#__PURE__*/React.createElement(React.Fragment, null, renderIcon(scene), renderLabel(scene))\n  });\n}\nconst styles = StyleSheet.create({\n  tab: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  tabPortrait: {\n    justifyContent: 'flex-end',\n    flexDirection: 'column'\n  },\n  tabLandscape: {\n    justifyContent: 'center',\n    flexDirection: 'row'\n  },\n  label: {\n    textAlign: 'center',\n    backgroundColor: 'transparent'\n  },\n  labelBeneath: {\n    fontSize: 10\n  },\n  labelBeside: {\n    fontSize: 13,\n    marginLeft: 20,\n    marginTop: 3\n  },\n  button: {\n    display: 'flex'\n  }\n});","map":{"version":3,"mappings":"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","names":["Link","useTheme","Color","React","Platform","Pressable","StyleSheet","Text","TabBarIcon","BottomTabBarItem","focused","route","descriptor","label","icon","badge","badgeStyle","to","button","_ref2","children","style","onPress","accessibilityRole","rest","OS","styles","e","metaKey","altKey","ctrlKey","shiftKey","preventDefault","accessibilityLabel","testID","onLongPress","horizontal","activeTintColor","customActiveTintColor","inactiveTintColor","customInactiveTintColor","activeBackgroundColor","inactiveBackgroundColor","showLabel","allowFontScaling","labelStyle","iconStyle","colors","undefined","primary","text","mix","card","hex","renderLabel","_ref3","color","numberOfLines","labelBeside","labelBeneath","options","tabBarLabel","title","name","position","renderIcon","_ref4","activeOpacity","inactiveOpacity","scene","backgroundColor","select","ios","default","accessibilityState","selected","accessibilityStates","tab","tabLandscape","tabPortrait","Fragment","create","flex","alignItems","justifyContent","flexDirection","textAlign","fontSize","marginLeft","marginTop","display"],"sources":["BottomTabItem.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}