{"ast":null,"code":"import MapperRegistry from './MapperRegistry';\nimport Mapper from './Mapper';\nimport MutableValue from './MutableValue';\nimport { NativeReanimated } from '../NativeReanimated/NativeReanimated';\nimport { isJest } from '../PlatformChecker';\nexport default class JSReanimated extends NativeReanimated {\n  constructor() {\n    super(false);\n    this._valueSetter = undefined;\n    this._renderRequested = false;\n    this._mapperRegistry = new MapperRegistry(this);\n    this._frames = [];\n    if (isJest()) {\n      this.timeProvider = {\n        now: () => global.ReanimatedDataMock.now()\n      };\n    } else {\n      this.timeProvider = {\n        now: () => window.performance.now()\n      };\n    }\n  }\n  pushFrame(frame) {\n    this._frames.push(frame);\n    this.maybeRequestRender();\n  }\n  getTimestamp() {\n    return this.timeProvider.now();\n  }\n  maybeRequestRender() {\n    if (!this._renderRequested) {\n      this._renderRequested = true;\n      requestAnimationFrame(_timestampMs => {\n        this._renderRequested = false;\n        this._onRender(this.getTimestamp());\n      });\n    }\n  }\n  _onRender(timestampMs) {\n    this._mapperRegistry.execute();\n    const frames = [...this._frames];\n    this._frames = [];\n    for (let i = 0, len = frames.length; i < len; ++i) {\n      frames[i](timestampMs);\n    }\n    if (this._mapperRegistry.needRunOnRender) {\n      this._mapperRegistry.execute();\n    }\n  }\n  installCoreFunctions(valueSetter) {\n    this._valueSetter = valueSetter;\n  }\n  makeShareable(value) {\n    return value;\n  }\n  makeMutable(value) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return new MutableValue(value, this._valueSetter);\n  }\n  makeRemote() {\n    let object = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return object;\n  }\n  startMapper(mapper) {\n    let inputs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    let outputs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    const instance = new Mapper(this, mapper, inputs, outputs);\n    const mapperId = this._mapperRegistry.startMapper(instance);\n    this.maybeRequestRender();\n    return mapperId;\n  }\n  stopMapper(mapperId) {\n    this._mapperRegistry.stopMapper(mapperId);\n  }\n  registerEventHandler(_, __) {\n    // noop\n    return '';\n  }\n  unregisterEventHandler(_) {\n    // noop\n  }\n  enableLayoutAnimations() {\n    console.warn('[Reanimated] enableLayoutAnimations is not available for WEB yet');\n  }\n  registerSensor() {\n    console.warn('[Reanimated] useAnimatedSensor is not available on web yet.');\n    return -1;\n  }\n  unregisterSensor() {\n    // noop\n  }\n  jestResetModule() {\n    if (isJest()) {\n      /**\n       * If someone used timers to stop animation before the end,\n       * then _renderRequested was set as true\n       * and any new update from another test wasn't applied.\n       */\n      this._renderRequested = false;\n    } else {\n      throw Error('This method can be only use in Jest testing.');\n    }\n  }\n  subscribeForKeyboardEvents(_) {\n    console.warn('[Reanimated] useAnimatedKeyboard is not available on web yet.');\n    return -1;\n  }\n  unsubscribeFromKeyboardEvents(_) {\n    // noop\n  }\n}","map":{"version":3,"names":["MapperRegistry","Mapper","MutableValue","NativeReanimated","isJest","JSReanimated","constructor","_valueSetter","undefined","_renderRequested","_mapperRegistry","_frames","timeProvider","now","global","ReanimatedDataMock","window","performance","pushFrame","frame","push","maybeRequestRender","getTimestamp","requestAnimationFrame","_timestampMs","_onRender","timestampMs","execute","frames","i","len","length","needRunOnRender","installCoreFunctions","valueSetter","makeShareable","value","makeMutable","makeRemote","object","startMapper","mapper","inputs","outputs","instance","mapperId","stopMapper","registerEventHandler","_","__","unregisterEventHandler","enableLayoutAnimations","console","warn","registerSensor","unregisterSensor","jestResetModule","Error","subscribeForKeyboardEvents","unsubscribeFromKeyboardEvents"],"sources":["C:/Users/13093/codestuff/portfolio/node_modules/react-native-reanimated/lib/reanimated2/js-reanimated/JSReanimated.js"],"sourcesContent":["import MapperRegistry from './MapperRegistry';\nimport Mapper from './Mapper';\nimport MutableValue from './MutableValue';\nimport { NativeReanimated } from '../NativeReanimated/NativeReanimated';\nimport { isJest } from '../PlatformChecker';\nexport default class JSReanimated extends NativeReanimated {\n    constructor() {\n        super(false);\n        this._valueSetter = undefined;\n        this._renderRequested = false;\n        this._mapperRegistry = new MapperRegistry(this);\n        this._frames = [];\n        if (isJest()) {\n            this.timeProvider = { now: () => global.ReanimatedDataMock.now() };\n        }\n        else {\n            this.timeProvider = { now: () => window.performance.now() };\n        }\n    }\n    pushFrame(frame) {\n        this._frames.push(frame);\n        this.maybeRequestRender();\n    }\n    getTimestamp() {\n        return this.timeProvider.now();\n    }\n    maybeRequestRender() {\n        if (!this._renderRequested) {\n            this._renderRequested = true;\n            requestAnimationFrame((_timestampMs) => {\n                this._renderRequested = false;\n                this._onRender(this.getTimestamp());\n            });\n        }\n    }\n    _onRender(timestampMs) {\n        this._mapperRegistry.execute();\n        const frames = [...this._frames];\n        this._frames = [];\n        for (let i = 0, len = frames.length; i < len; ++i) {\n            frames[i](timestampMs);\n        }\n        if (this._mapperRegistry.needRunOnRender) {\n            this._mapperRegistry.execute();\n        }\n    }\n    installCoreFunctions(valueSetter) {\n        this._valueSetter = valueSetter;\n    }\n    makeShareable(value) {\n        return value;\n    }\n    makeMutable(value) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return new MutableValue(value, this._valueSetter);\n    }\n    makeRemote(object = {}) {\n        return object;\n    }\n    startMapper(mapper, inputs = [], outputs = []) {\n        const instance = new Mapper(this, mapper, inputs, outputs);\n        const mapperId = this._mapperRegistry.startMapper(instance);\n        this.maybeRequestRender();\n        return mapperId;\n    }\n    stopMapper(mapperId) {\n        this._mapperRegistry.stopMapper(mapperId);\n    }\n    registerEventHandler(_, __) {\n        // noop\n        return '';\n    }\n    unregisterEventHandler(_) {\n        // noop\n    }\n    enableLayoutAnimations() {\n        console.warn('[Reanimated] enableLayoutAnimations is not available for WEB yet');\n    }\n    registerSensor() {\n        console.warn('[Reanimated] useAnimatedSensor is not available on web yet.');\n        return -1;\n    }\n    unregisterSensor() {\n        // noop\n    }\n    jestResetModule() {\n        if (isJest()) {\n            /**\n             * If someone used timers to stop animation before the end,\n             * then _renderRequested was set as true\n             * and any new update from another test wasn't applied.\n             */\n            this._renderRequested = false;\n        }\n        else {\n            throw Error('This method can be only use in Jest testing.');\n        }\n    }\n    subscribeForKeyboardEvents(_) {\n        console.warn('[Reanimated] useAnimatedKeyboard is not available on web yet.');\n        return -1;\n    }\n    unsubscribeFromKeyboardEvents(_) {\n        // noop\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}