{"ast":null,"code":"import { ComplexAnimationBuilder } from '../animationBuilder';\nexport class PinwheelIn extends ComplexAnimationBuilder {\n  constructor() {\n    super(...arguments);\n    this.build = () => {\n      const delayFunction = this.getDelayFunction();\n      const [animation, config] = this.getAnimationAndConfig();\n      const delay = this.getDelay();\n      const callback = this.callbackV;\n      const initialValues = this.initialValues;\n      return _values => {\n        'worklet';\n\n        return {\n          animations: {\n            opacity: delayFunction(delay, animation(1, config)),\n            transform: [{\n              scale: delayFunction(delay, animation(1, config))\n            }, {\n              rotate: delayFunction(delay, animation('0', config))\n            }]\n          },\n          initialValues: Object.assign({\n            opacity: 0,\n            transform: [{\n              scale: 0\n            }, {\n              rotate: '5'\n            }]\n          }, initialValues),\n          callback: callback\n        };\n      };\n    };\n  }\n  static createInstance() {\n    return new PinwheelIn();\n  }\n}\nexport class PinwheelOut extends ComplexAnimationBuilder {\n  constructor() {\n    super(...arguments);\n    this.build = () => {\n      const delayFunction = this.getDelayFunction();\n      const [animation, config] = this.getAnimationAndConfig();\n      const delay = this.getDelay();\n      const callback = this.callbackV;\n      const initialValues = this.initialValues;\n      return _values => {\n        'worklet';\n\n        return {\n          animations: {\n            opacity: delayFunction(delay, animation(0, config)),\n            transform: [{\n              scale: delayFunction(delay, animation(0, config))\n            }, {\n              rotate: delayFunction(delay, animation('5', config))\n            }]\n          },\n          initialValues: Object.assign({\n            opacity: 1,\n            transform: [{\n              scale: 1\n            }, {\n              rotate: '0'\n            }]\n          }, initialValues),\n          callback: callback\n        };\n      };\n    };\n  }\n  static createInstance() {\n    return new PinwheelOut();\n  }\n}","map":{"version":3,"names":["ComplexAnimationBuilder","PinwheelIn","constructor","arguments","build","delayFunction","getDelayFunction","animation","config","getAnimationAndConfig","delay","getDelay","callback","callbackV","initialValues","_values","animations","opacity","transform","scale","rotate","Object","assign","createInstance","PinwheelOut"],"sources":["C:/Users/13093/codestuff/portfolio/node_modules/react-native-reanimated/lib/reanimated2/layoutReanimation/defaultAnimations/Pinwheel.js"],"sourcesContent":["import { ComplexAnimationBuilder } from '../animationBuilder';\nexport class PinwheelIn extends ComplexAnimationBuilder {\n    constructor() {\n        super(...arguments);\n        this.build = () => {\n            const delayFunction = this.getDelayFunction();\n            const [animation, config] = this.getAnimationAndConfig();\n            const delay = this.getDelay();\n            const callback = this.callbackV;\n            const initialValues = this.initialValues;\n            return (_values) => {\n                'worklet';\n                return {\n                    animations: {\n                        opacity: delayFunction(delay, animation(1, config)),\n                        transform: [\n                            {\n                                scale: delayFunction(delay, animation(1, config)),\n                            },\n                            {\n                                rotate: delayFunction(delay, animation('0', config)),\n                            },\n                        ],\n                    },\n                    initialValues: Object.assign({ opacity: 0, transform: [\n                            {\n                                scale: 0,\n                            },\n                            {\n                                rotate: '5',\n                            },\n                        ] }, initialValues),\n                    callback: callback,\n                };\n            };\n        };\n    }\n    static createInstance() {\n        return new PinwheelIn();\n    }\n}\nexport class PinwheelOut extends ComplexAnimationBuilder {\n    constructor() {\n        super(...arguments);\n        this.build = () => {\n            const delayFunction = this.getDelayFunction();\n            const [animation, config] = this.getAnimationAndConfig();\n            const delay = this.getDelay();\n            const callback = this.callbackV;\n            const initialValues = this.initialValues;\n            return (_values) => {\n                'worklet';\n                return {\n                    animations: {\n                        opacity: delayFunction(delay, animation(0, config)),\n                        transform: [\n                            {\n                                scale: delayFunction(delay, animation(0, config)),\n                            },\n                            {\n                                rotate: delayFunction(delay, animation('5', config)),\n                            },\n                        ],\n                    },\n                    initialValues: Object.assign({ opacity: 1, transform: [\n                            {\n                                scale: 1,\n                            },\n                            {\n                                rotate: '0',\n                            },\n                        ] }, initialValues),\n                    callback: callback,\n                };\n            };\n        };\n    }\n    static createInstance() {\n        return new PinwheelOut();\n    }\n}\n"],"mappings":"AAAA,SAASA,uBAAuB,QAAQ,qBAAqB;AAC7D,OAAO,MAAMC,UAAU,SAASD,uBAAuB,CAAC;EACpDE,WAAW,GAAG;IACV,KAAK,CAAC,GAAGC,SAAS,CAAC;IACnB,IAAI,CAACC,KAAK,GAAG,MAAM;MACf,MAAMC,aAAa,GAAG,IAAI,CAACC,gBAAgB,EAAE;MAC7C,MAAM,CAACC,SAAS,EAAEC,MAAM,CAAC,GAAG,IAAI,CAACC,qBAAqB,EAAE;MACxD,MAAMC,KAAK,GAAG,IAAI,CAACC,QAAQ,EAAE;MAC7B,MAAMC,QAAQ,GAAG,IAAI,CAACC,SAAS;MAC/B,MAAMC,aAAa,GAAG,IAAI,CAACA,aAAa;MACxC,OAAQC,OAAO,IAAK;QAChB,SAAS;;QACT,OAAO;UACHC,UAAU,EAAE;YACRC,OAAO,EAAEZ,aAAa,CAACK,KAAK,EAAEH,SAAS,CAAC,CAAC,EAAEC,MAAM,CAAC,CAAC;YACnDU,SAAS,EAAE,CACP;cACIC,KAAK,EAAEd,aAAa,CAACK,KAAK,EAAEH,SAAS,CAAC,CAAC,EAAEC,MAAM,CAAC;YACpD,CAAC,EACD;cACIY,MAAM,EAAEf,aAAa,CAACK,KAAK,EAAEH,SAAS,CAAC,GAAG,EAAEC,MAAM,CAAC;YACvD,CAAC;UAET,CAAC;UACDM,aAAa,EAAEO,MAAM,CAACC,MAAM,CAAC;YAAEL,OAAO,EAAE,CAAC;YAAEC,SAAS,EAAE,CAC9C;cACIC,KAAK,EAAE;YACX,CAAC,EACD;cACIC,MAAM,EAAE;YACZ,CAAC;UACH,CAAC,EAAEN,aAAa,CAAC;UACvBF,QAAQ,EAAEA;QACd,CAAC;MACL,CAAC;IACL,CAAC;EACL;EACA,OAAOW,cAAc,GAAG;IACpB,OAAO,IAAItB,UAAU,EAAE;EAC3B;AACJ;AACA,OAAO,MAAMuB,WAAW,SAASxB,uBAAuB,CAAC;EACrDE,WAAW,GAAG;IACV,KAAK,CAAC,GAAGC,SAAS,CAAC;IACnB,IAAI,CAACC,KAAK,GAAG,MAAM;MACf,MAAMC,aAAa,GAAG,IAAI,CAACC,gBAAgB,EAAE;MAC7C,MAAM,CAACC,SAAS,EAAEC,MAAM,CAAC,GAAG,IAAI,CAACC,qBAAqB,EAAE;MACxD,MAAMC,KAAK,GAAG,IAAI,CAACC,QAAQ,EAAE;MAC7B,MAAMC,QAAQ,GAAG,IAAI,CAACC,SAAS;MAC/B,MAAMC,aAAa,GAAG,IAAI,CAACA,aAAa;MACxC,OAAQC,OAAO,IAAK;QAChB,SAAS;;QACT,OAAO;UACHC,UAAU,EAAE;YACRC,OAAO,EAAEZ,aAAa,CAACK,KAAK,EAAEH,SAAS,CAAC,CAAC,EAAEC,MAAM,CAAC,CAAC;YACnDU,SAAS,EAAE,CACP;cACIC,KAAK,EAAEd,aAAa,CAACK,KAAK,EAAEH,SAAS,CAAC,CAAC,EAAEC,MAAM,CAAC;YACpD,CAAC,EACD;cACIY,MAAM,EAAEf,aAAa,CAACK,KAAK,EAAEH,SAAS,CAAC,GAAG,EAAEC,MAAM,CAAC;YACvD,CAAC;UAET,CAAC;UACDM,aAAa,EAAEO,MAAM,CAACC,MAAM,CAAC;YAAEL,OAAO,EAAE,CAAC;YAAEC,SAAS,EAAE,CAC9C;cACIC,KAAK,EAAE;YACX,CAAC,EACD;cACIC,MAAM,EAAE;YACZ,CAAC;UACH,CAAC,EAAEN,aAAa,CAAC;UACvBF,QAAQ,EAAEA;QACd,CAAC;MACL,CAAC;IACL,CAAC;EACL;EACA,OAAOW,cAAc,GAAG;IACpB,OAAO,IAAIC,WAAW,EAAE;EAC5B;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}