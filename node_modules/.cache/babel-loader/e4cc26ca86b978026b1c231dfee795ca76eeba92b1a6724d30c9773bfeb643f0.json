{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\13093\\\\codestuff\\\\portfolio\\\\src\\\\components\\\\AnimatedBackground.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { View, Animated } from \"react-native\";\nimport { useColorMode } from \"native-base\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnimatedBackground = () => {\n  _s();\n  const {\n    colorMode\n  } = useColorMode();\n  const [backgroundColor, setBackgroundColor] = useState(new Animated.Value(0));\n  useEffect(() => {\n    Animated.timing(backgroundColor, {\n      toValue: colorMode === \"light\" ? 1 : 0,\n      duration: 500\n    }).start();\n  }, [colorMode]);\n  const backgroundColorInterpolate = backgroundColor.interpolate({\n    inputRange: [0, 1],\n    outputRange: [\"#333\", \"#fff\"]\n  });\n  return /*#__PURE__*/_jsxDEV(Animated.View, {\n    style: {\n      backgroundColor: backgroundColorInterpolate,\n      flex: 1\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(AnimatedBackground, \"caq7dUtRqdIKTkJyQNCZJKrRi0A=\", false, function () {\n  return [useColorMode];\n});\n_c = AnimatedBackground;\nexport default AnimatedBackground;\nvar _c;\n$RefreshReg$(_c, \"AnimatedBackground\");","map":{"version":3,"names":["React","useState","useEffect","View","Animated","useColorMode","AnimatedBackground","colorMode","backgroundColor","setBackgroundColor","Value","timing","toValue","duration","start","backgroundColorInterpolate","interpolate","inputRange","outputRange","flex"],"sources":["C:/Users/13093/codestuff/portfolio/src/components/AnimatedBackground.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { View, Animated } from \"react-native\";\r\nimport { useColorMode } from \"native-base\";\r\n\r\nconst AnimatedBackground = () => {\r\n  const { colorMode } = useColorMode();\r\n  const [backgroundColor, setBackgroundColor] = useState(new Animated.Value(0));\r\n\r\n  useEffect(() => {\r\n    Animated.timing(backgroundColor, {\r\n      toValue: colorMode === \"light\" ? 1 : 0,\r\n      duration: 500,\r\n    }).start();\r\n  }, [colorMode]);\r\n\r\n  const backgroundColorInterpolate = backgroundColor.interpolate({\r\n    inputRange: [0, 1],\r\n    outputRange: [\"#333\", \"#fff\"],\r\n  });\r\n\r\n  return (\r\n    <Animated.View\r\n      style={{\r\n        backgroundColor: backgroundColorInterpolate,\r\n        flex: 1,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AnimatedBackground;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,QAAQ,QAAQ,cAAc;AAC7C,SAASC,YAAY,QAAQ,aAAa;AAAC;AAE3C,MAAMC,kBAAkB,GAAG,MAAM;EAAA;EAC/B,MAAM;IAAEC;EAAU,CAAC,GAAGF,YAAY,EAAE;EACpC,MAAM,CAACG,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,IAAIG,QAAQ,CAACM,KAAK,CAAC,CAAC,CAAC,CAAC;EAE7ER,SAAS,CAAC,MAAM;IACdE,QAAQ,CAACO,MAAM,CAACH,eAAe,EAAE;MAC/BI,OAAO,EAAEL,SAAS,KAAK,OAAO,GAAG,CAAC,GAAG,CAAC;MACtCM,QAAQ,EAAE;IACZ,CAAC,CAAC,CAACC,KAAK,EAAE;EACZ,CAAC,EAAE,CAACP,SAAS,CAAC,CAAC;EAEf,MAAMQ,0BAA0B,GAAGP,eAAe,CAACQ,WAAW,CAAC;IAC7DC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAClBC,WAAW,EAAE,CAAC,MAAM,EAAE,MAAM;EAC9B,CAAC,CAAC;EAEF,oBACE,QAAC,QAAQ,CAAC,IAAI;IACZ,KAAK,EAAE;MACLV,eAAe,EAAEO,0BAA0B;MAC3CI,IAAI,EAAE;IACR;EAAE;IAAA;IAAA;IAAA;EAAA,QACF;AAEN,CAAC;AAAC,GAxBIb,kBAAkB;EAAA,QACAD,YAAY;AAAA;AAAA,KAD9BC,kBAAkB;AA0BxB,eAAeA,kBAAkB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}