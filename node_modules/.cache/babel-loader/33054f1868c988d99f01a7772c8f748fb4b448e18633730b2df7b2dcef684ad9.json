{"ast":null,"code":"import invariant from 'invariant';\nimport AnimatedNode, { getCallID, setCallID } from './AnimatedNode';\nimport AnimatedClock from './AnimatedClock';\nimport { val } from '../val';\nexport class AnimatedParam extends AnimatedNode {\n  argsStack = [];\n  _prevCallID;\n  constructor() {\n    super({\n      type: 'param'\n    }, []);\n    this.__attach();\n  }\n  beginContext(ref, prevCallID) {\n    this._prevCallID = prevCallID;\n    this.argsStack.push(ref);\n  }\n  endContext() {\n    this.argsStack.pop();\n  }\n  _getTopNode() {\n    if (this.argsStack.length === 0) throw new Error(`param: Invocation failed because argsStack is empty`);\n    const top = this.argsStack[this.argsStack.length - 1];\n    return top;\n  }\n  setValue(value) {\n    const top = this._getTopNode();\n    if (top.setValue) {\n      const callID = getCallID();\n      setCallID(this._prevCallID);\n      top.setValue(value);\n      setCallID(callID);\n    } else {\n      throw new Error(`param: setValue(${value}) failed because the top element has no known method for updating it's current value.`);\n    }\n  }\n  __onEvaluate() {\n    const callID = getCallID();\n    setCallID(this._prevCallID);\n    const top = this._getTopNode();\n    const value = val(top);\n    setCallID(callID);\n    return value;\n  }\n  start() {\n    const node = this._getTopNode();\n    invariant(node instanceof AnimatedClock || node instanceof AnimatedParam, `param: top node should be of type AnimatedClock but got ${node}`);\n    node.start();\n  }\n  stop() {\n    const node = this._getTopNode();\n    invariant(node instanceof AnimatedClock || node instanceof AnimatedParam, `param: top node should be of type AnimatedClock but got ${node}`);\n    node.stop();\n  }\n  isRunning() {\n    const node = this._getTopNode();\n    if (node instanceof AnimatedParam) {\n      return node.isRunning();\n    }\n    invariant(node instanceof AnimatedClock, `param: top node should be of type AnimatedClock but got ${node}`);\n    return node.isStarted();\n  }\n}\nexport function createAnimatedParam() {\n  return new AnimatedParam();\n}","map":{"version":3,"names":["invariant","AnimatedNode","getCallID","setCallID","AnimatedClock","val","AnimatedParam","argsStack","_prevCallID","constructor","type","__attach","beginContext","ref","prevCallID","push","endContext","pop","_getTopNode","length","Error","top","setValue","value","callID","__onEvaluate","start","node","stop","isRunning","isStarted","createAnimatedParam"],"sources":["C:/Users/13093/codestuff/portfolio/node_modules/react-native-reanimated/lib/reanimated1/core/AnimatedParam.js"],"sourcesContent":["import invariant from 'invariant';\nimport AnimatedNode, { getCallID, setCallID } from './AnimatedNode';\nimport AnimatedClock from './AnimatedClock';\nimport { val } from '../val';\n\nexport class AnimatedParam extends AnimatedNode {\n  argsStack = [];\n  _prevCallID;\n\n  constructor() {\n    super({ type: 'param' }, []);\n    this.__attach();\n  }\n\n  beginContext(ref, prevCallID) {\n    this._prevCallID = prevCallID;\n    this.argsStack.push(ref);\n  }\n\n  endContext() {\n    this.argsStack.pop();\n  }\n\n  _getTopNode() {\n    if (this.argsStack.length === 0)\n      throw new Error(`param: Invocation failed because argsStack is empty`);\n    const top = this.argsStack[this.argsStack.length - 1];\n    return top;\n  }\n\n  setValue(value) {\n    const top = this._getTopNode();\n    if (top.setValue) {\n      const callID = getCallID();\n      setCallID(this._prevCallID);\n      top.setValue(value);\n      setCallID(callID);\n    } else {\n      throw new Error(\n        `param: setValue(${value}) failed because the top element has no known method for updating it's current value.`\n      );\n    }\n  }\n\n  __onEvaluate() {\n    const callID = getCallID();\n    setCallID(this._prevCallID);\n    const top = this._getTopNode();\n    const value = val(top);\n    setCallID(callID);\n    return value;\n  }\n\n  start() {\n    const node = this._getTopNode();\n    invariant(\n      node instanceof AnimatedClock || node instanceof AnimatedParam,\n      `param: top node should be of type AnimatedClock but got ${node}`\n    );\n    node.start();\n  }\n\n  stop() {\n    const node = this._getTopNode();\n    invariant(\n      node instanceof AnimatedClock || node instanceof AnimatedParam,\n      `param: top node should be of type AnimatedClock but got ${node}`\n    );\n    node.stop();\n  }\n\n  isRunning() {\n    const node = this._getTopNode();\n\n    if (node instanceof AnimatedParam) {\n      return node.isRunning();\n    }\n    invariant(\n      node instanceof AnimatedClock,\n      `param: top node should be of type AnimatedClock but got ${node}`\n    );\n    return node.isStarted();\n  }\n}\n\nexport function createAnimatedParam() {\n  return new AnimatedParam();\n}\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,WAAW;AACjC,OAAOC,YAAY,IAAIC,SAAS,EAAEC,SAAS,QAAQ,gBAAgB;AACnE,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,SAASC,GAAG,QAAQ,QAAQ;AAE5B,OAAO,MAAMC,aAAa,SAASL,YAAY,CAAC;EAC9CM,SAAS,GAAG,EAAE;EACdC,WAAW;EAEXC,WAAW,GAAG;IACZ,KAAK,CAAC;MAAEC,IAAI,EAAE;IAAQ,CAAC,EAAE,EAAE,CAAC;IAC5B,IAAI,CAACC,QAAQ,EAAE;EACjB;EAEAC,YAAY,CAACC,GAAG,EAAEC,UAAU,EAAE;IAC5B,IAAI,CAACN,WAAW,GAAGM,UAAU;IAC7B,IAAI,CAACP,SAAS,CAACQ,IAAI,CAACF,GAAG,CAAC;EAC1B;EAEAG,UAAU,GAAG;IACX,IAAI,CAACT,SAAS,CAACU,GAAG,EAAE;EACtB;EAEAC,WAAW,GAAG;IACZ,IAAI,IAAI,CAACX,SAAS,CAACY,MAAM,KAAK,CAAC,EAC7B,MAAM,IAAIC,KAAK,CAAE,qDAAoD,CAAC;IACxE,MAAMC,GAAG,GAAG,IAAI,CAACd,SAAS,CAAC,IAAI,CAACA,SAAS,CAACY,MAAM,GAAG,CAAC,CAAC;IACrD,OAAOE,GAAG;EACZ;EAEAC,QAAQ,CAACC,KAAK,EAAE;IACd,MAAMF,GAAG,GAAG,IAAI,CAACH,WAAW,EAAE;IAC9B,IAAIG,GAAG,CAACC,QAAQ,EAAE;MAChB,MAAME,MAAM,GAAGtB,SAAS,EAAE;MAC1BC,SAAS,CAAC,IAAI,CAACK,WAAW,CAAC;MAC3Ba,GAAG,CAACC,QAAQ,CAACC,KAAK,CAAC;MACnBpB,SAAS,CAACqB,MAAM,CAAC;IACnB,CAAC,MAAM;MACL,MAAM,IAAIJ,KAAK,CACZ,mBAAkBG,KAAM,uFAAsF,CAChH;IACH;EACF;EAEAE,YAAY,GAAG;IACb,MAAMD,MAAM,GAAGtB,SAAS,EAAE;IAC1BC,SAAS,CAAC,IAAI,CAACK,WAAW,CAAC;IAC3B,MAAMa,GAAG,GAAG,IAAI,CAACH,WAAW,EAAE;IAC9B,MAAMK,KAAK,GAAGlB,GAAG,CAACgB,GAAG,CAAC;IACtBlB,SAAS,CAACqB,MAAM,CAAC;IACjB,OAAOD,KAAK;EACd;EAEAG,KAAK,GAAG;IACN,MAAMC,IAAI,GAAG,IAAI,CAACT,WAAW,EAAE;IAC/BlB,SAAS,CACP2B,IAAI,YAAYvB,aAAa,IAAIuB,IAAI,YAAYrB,aAAa,EAC7D,2DAA0DqB,IAAK,EAAC,CAClE;IACDA,IAAI,CAACD,KAAK,EAAE;EACd;EAEAE,IAAI,GAAG;IACL,MAAMD,IAAI,GAAG,IAAI,CAACT,WAAW,EAAE;IAC/BlB,SAAS,CACP2B,IAAI,YAAYvB,aAAa,IAAIuB,IAAI,YAAYrB,aAAa,EAC7D,2DAA0DqB,IAAK,EAAC,CAClE;IACDA,IAAI,CAACC,IAAI,EAAE;EACb;EAEAC,SAAS,GAAG;IACV,MAAMF,IAAI,GAAG,IAAI,CAACT,WAAW,EAAE;IAE/B,IAAIS,IAAI,YAAYrB,aAAa,EAAE;MACjC,OAAOqB,IAAI,CAACE,SAAS,EAAE;IACzB;IACA7B,SAAS,CACP2B,IAAI,YAAYvB,aAAa,EAC5B,2DAA0DuB,IAAK,EAAC,CAClE;IACD,OAAOA,IAAI,CAACG,SAAS,EAAE;EACzB;AACF;AAEA,OAAO,SAASC,mBAAmB,GAAG;EACpC,OAAO,IAAIzB,aAAa,EAAE;AAC5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}