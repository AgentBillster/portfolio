{"ast":null,"code":"import invariant from 'invariant';\nimport { adapt } from '../core/AnimatedBlock';\nimport AnimatedNode from './AnimatedNode';\nimport { val } from '../val';\nclass AnimatedConcat extends AnimatedNode {\n  constructor(input) {\n    invariant(input.every(el => el instanceof AnimatedNode || typeof el === 'number' || typeof el === 'string'), `Reanimated: Animated.concat node arguments should be of type AnimatedNode or String or Number. One or more of them are not of that type. Node: ${input}`);\n    super({\n      type: 'concat',\n      input\n    }, input);\n    this._input = input;\n  }\n  __onEvaluate() {\n    return this._input.reduce((prev, current) => prev + val(current), '');\n  }\n  toString() {\n    return `AnimatedConcat, id: ${this.__nodeID}`;\n  }\n}\nexport function createAnimatedConcat() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  return new AnimatedConcat(args.map(adapt));\n}","map":{"version":3,"names":["invariant","adapt","AnimatedNode","val","AnimatedConcat","constructor","input","every","el","type","_input","__onEvaluate","reduce","prev","current","toString","__nodeID","createAnimatedConcat","args","map"],"sources":["C:/Users/13093/codestuff/portfolio/node_modules/react-native-reanimated/lib/reanimated1/core/AnimatedConcat.js"],"sourcesContent":["import invariant from 'invariant';\nimport { adapt } from '../core/AnimatedBlock';\nimport AnimatedNode from './AnimatedNode';\nimport { val } from '../val';\n\nclass AnimatedConcat extends AnimatedNode {\n  constructor(input) {\n    invariant(\n      input.every(\n        (el) =>\n          el instanceof AnimatedNode ||\n          typeof el === 'number' ||\n          typeof el === 'string'\n      ),\n      `Reanimated: Animated.concat node arguments should be of type AnimatedNode or String or Number. One or more of them are not of that type. Node: ${input}`\n    );\n    super({ type: 'concat', input }, input);\n    this._input = input;\n  }\n\n  __onEvaluate() {\n    return this._input.reduce((prev, current) => prev + val(current), '');\n  }\n\n  toString() {\n    return `AnimatedConcat, id: ${this.__nodeID}`;\n  }\n}\n\nexport function createAnimatedConcat(...args) {\n  return new AnimatedConcat(args.map(adapt));\n}\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,WAAW;AACjC,SAASC,KAAK,QAAQ,uBAAuB;AAC7C,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAASC,GAAG,QAAQ,QAAQ;AAE5B,MAAMC,cAAc,SAASF,YAAY,CAAC;EACxCG,WAAW,CAACC,KAAK,EAAE;IACjBN,SAAS,CACPM,KAAK,CAACC,KAAK,CACRC,EAAE,IACDA,EAAE,YAAYN,YAAY,IAC1B,OAAOM,EAAE,KAAK,QAAQ,IACtB,OAAOA,EAAE,KAAK,QAAQ,CACzB,EACA,kJAAiJF,KAAM,EAAC,CAC1J;IACD,KAAK,CAAC;MAAEG,IAAI,EAAE,QAAQ;MAAEH;IAAM,CAAC,EAAEA,KAAK,CAAC;IACvC,IAAI,CAACI,MAAM,GAAGJ,KAAK;EACrB;EAEAK,YAAY,GAAG;IACb,OAAO,IAAI,CAACD,MAAM,CAACE,MAAM,CAAC,CAACC,IAAI,EAAEC,OAAO,KAAKD,IAAI,GAAGV,GAAG,CAACW,OAAO,CAAC,EAAE,EAAE,CAAC;EACvE;EAEAC,QAAQ,GAAG;IACT,OAAQ,uBAAsB,IAAI,CAACC,QAAS,EAAC;EAC/C;AACF;AAEA,OAAO,SAASC,oBAAoB,GAAU;EAAA,kCAANC,IAAI;IAAJA,IAAI;EAAA;EAC1C,OAAO,IAAId,cAAc,CAACc,IAAI,CAACC,GAAG,CAAClB,KAAK,CAAC,CAAC;AAC5C"},"metadata":{},"sourceType":"module","externalDependencies":[]}