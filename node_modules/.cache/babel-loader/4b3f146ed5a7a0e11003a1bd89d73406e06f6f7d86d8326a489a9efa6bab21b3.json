{"ast":null,"code":"import $tyW6A$react, { useMemo as $tyW6A$useMemo, useRef as $tyW6A$useRef } from \"react\";\nimport $tyW6A$swchelperssrc_define_propertymjs from \"@swc/helpers/src/_define_property.mjs\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ /*\n    * Copyright 2020 Adobe. All rights reserved.\n    * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License. You may obtain a copy\n    * of the License at http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software distributed under\n    * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n    * OF ANY KIND, either express or implied. See the License for the specific language\n    * governing permissions and limitations under the License.\n    */\nfunction $c1d7fb2ec91bae71$var$Item(props) {\n  return null;\n}\n$c1d7fb2ec91bae71$var$Item.getCollectionNode = function* getCollectionNode(props, context) {\n  let {\n    childItems: childItems,\n    title: title,\n    children: children\n  } = props;\n  let rendered = props.title || props.children;\n  let textValue = props.textValue || (typeof rendered === \"string\" ? rendered : \"\") || props[\"aria-label\"] || \"\";\n  // suppressTextValueWarning is used in components like Tabs, which don't have type to select support.\n  if (!textValue && !(context === null || context === void 0 ? void 0 : context.suppressTextValueWarning)) console.warn(\"<Item> with non-plain text contents is unsupported by type to select for accessibility. Please add a `textValue` prop.\");\n  yield {\n    type: \"item\",\n    props: props,\n    rendered: rendered,\n    textValue: textValue,\n    \"aria-label\": props[\"aria-label\"],\n    hasChildNodes: $c1d7fb2ec91bae71$var$hasChildItems(props),\n    *childNodes() {\n      if (childItems) for (let child of childItems) yield {\n        type: \"item\",\n        value: child\n      };else if (title) {\n        let items = [];\n        (0, $tyW6A$react).Children.forEach(children, child => {\n          items.push({\n            type: \"item\",\n            element: child\n          });\n        });\n        yield* items;\n      }\n    }\n  };\n};\nfunction $c1d7fb2ec91bae71$var$hasChildItems(props) {\n  if (props.hasChildItems != null) return props.hasChildItems;\n  if (props.childItems) return true;\n  if (props.title && (0, $tyW6A$react).Children.count(props.children) > 0) return true;\n  return false;\n}\n// We don't want getCollectionNode to show up in the type definition\nlet $c1d7fb2ec91bae71$export$6d08773d2e66f8f2 = $c1d7fb2ec91bae71$var$Item;\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nfunction $9fc4852771d079eb$var$Section(props) {\n  return null;\n}\n$9fc4852771d079eb$var$Section.getCollectionNode = function* getCollectionNode(props) {\n  let {\n    children: children,\n    title: title,\n    items: items\n  } = props;\n  yield {\n    type: \"section\",\n    props: props,\n    hasChildNodes: true,\n    rendered: title,\n    \"aria-label\": props[\"aria-label\"],\n    *childNodes() {\n      if (typeof children === \"function\") {\n        if (!items) throw new Error(\"props.children was a function but props.items is missing\");\n        for (let item of items) yield {\n          type: \"item\",\n          value: item,\n          renderer: children\n        };\n      } else {\n        let items1 = [];\n        (0, $tyW6A$react).Children.forEach(children, child => {\n          items1.push({\n            type: \"item\",\n            element: child\n          });\n        });\n        yield* items1;\n      }\n    }\n  };\n};\n// We don't want getCollectionNode to show up in the type definition\nlet $9fc4852771d079eb$export$6e2c8f0811a474ce = $9fc4852771d079eb$var$Section;\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ /*\n    * Copyright 2020 Adobe. All rights reserved.\n    * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License. You may obtain a copy\n    * of the License at http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software distributed under\n    * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n    * OF ANY KIND, either express or implied. See the License for the specific language\n    * governing permissions and limitations under the License.\n    */\n\nclass $eb2240fc39a57fa5$export$bf788dd355e3a401 {\n  build(props, context) {\n    this.context = context;\n    return $eb2240fc39a57fa5$var$iterable(() => this.iterateCollection(props));\n  }\n  *iterateCollection(props) {\n    let {\n      children: children,\n      items: items\n    } = props;\n    if (typeof children === \"function\") {\n      if (!items) throw new Error(\"props.children was a function but props.items is missing\");\n      for (let item of props.items) yield* this.getFullNode({\n        value: item\n      }, {\n        renderer: children\n      });\n    } else {\n      let items1 = [];\n      (0, $tyW6A$react).Children.forEach(children, child => {\n        items1.push(child);\n      });\n      let index = 0;\n      for (let item1 of items1) {\n        let nodes = this.getFullNode({\n          element: item1,\n          index: index\n        }, {});\n        for (let node of nodes) {\n          index++;\n          yield node;\n        }\n      }\n    }\n  }\n  getKey(item, partialNode, state, parentKey) {\n    if (item.key != null) return item.key;\n    if (partialNode.type === \"cell\" && partialNode.key != null) return `${parentKey}${partialNode.key}`;\n    let v = partialNode.value;\n    if (v != null) {\n      var _v_key;\n      let key = (_v_key = v.key) !== null && _v_key !== void 0 ? _v_key : v.id;\n      if (key == null) throw new Error(\"No key found for item\");\n      return key;\n    }\n    return parentKey ? `${parentKey}.${partialNode.index}` : `$.${partialNode.index}`;\n  }\n  getChildState(state, partialNode) {\n    return {\n      renderer: partialNode.renderer || state.renderer\n    };\n  }\n  *getFullNode(partialNode, state, parentKey, parentNode) {\n    // If there's a value instead of an element on the node, and a parent renderer function is available,\n    // use it to render an element for the value.\n    let element = partialNode.element;\n    if (!element && partialNode.value && state && state.renderer) {\n      let cached = this.cache.get(partialNode.value);\n      if (cached && (!cached.shouldInvalidate || !cached.shouldInvalidate(this.context))) {\n        cached.index = partialNode.index;\n        cached.parentKey = parentNode ? parentNode.key : null;\n        yield cached;\n        return;\n      }\n      element = state.renderer(partialNode.value);\n    }\n    // If there's an element with a getCollectionNode function on its type, then it's a supported component.\n    // Call this function to get a partial node, and recursively build a full node from there.\n    if ((0, $tyW6A$react).isValidElement(element)) {\n      let type = element.type;\n      if (typeof type !== \"function\" && typeof type.getCollectionNode !== \"function\") {\n        let name = typeof element.type === \"function\" ? element.type.name : element.type;\n        throw new Error(`Unknown element <${name}> in collection.`);\n      }\n      let childNodes = type.getCollectionNode(element.props, this.context);\n      let index = partialNode.index;\n      let result = childNodes.next();\n      while (!result.done && result.value) {\n        let childNode = result.value;\n        partialNode.index = index;\n        let nodeKey = childNode.key;\n        if (!nodeKey) nodeKey = childNode.element ? null : this.getKey(element, partialNode, state, parentKey);\n        let nodes = this.getFullNode({\n          ...childNode,\n          key: nodeKey,\n          index: index,\n          wrapper: $eb2240fc39a57fa5$var$compose(partialNode.wrapper, childNode.wrapper)\n        }, this.getChildState(state, childNode), parentKey ? `${parentKey}${element.key}` : element.key, parentNode);\n        let children = [...nodes];\n        for (let node of children) {\n          // Cache the node based on its value\n          node.value = childNode.value || partialNode.value;\n          if (node.value) this.cache.set(node.value, node);\n          // The partial node may have specified a type for the child in order to specify a constraint.\n          // Verify that the full node that was built recursively matches this type.\n          if (partialNode.type && node.type !== partialNode.type) throw new Error(`Unsupported type <${$eb2240fc39a57fa5$var$capitalize(node.type)}> in <${$eb2240fc39a57fa5$var$capitalize(parentNode.type)}>. Only <${$eb2240fc39a57fa5$var$capitalize(partialNode.type)}> is supported.`);\n          index++;\n          yield node;\n        }\n        result = childNodes.next(children);\n      }\n      return;\n    }\n    // Ignore invalid elements\n    if (partialNode.key == null) return;\n    // Create full node\n    let builder = this;\n    let node1 = {\n      type: partialNode.type,\n      props: partialNode.props,\n      key: partialNode.key,\n      parentKey: parentNode ? parentNode.key : null,\n      value: partialNode.value,\n      level: parentNode ? parentNode.level + 1 : 0,\n      index: partialNode.index,\n      rendered: partialNode.rendered,\n      textValue: partialNode.textValue,\n      \"aria-label\": partialNode[\"aria-label\"],\n      wrapper: partialNode.wrapper,\n      shouldInvalidate: partialNode.shouldInvalidate,\n      hasChildNodes: partialNode.hasChildNodes,\n      childNodes: $eb2240fc39a57fa5$var$iterable(function* () {\n        if (!partialNode.hasChildNodes) return;\n        let index = 0;\n        for (let child of partialNode.childNodes()) {\n          // Ensure child keys are globally unique by prepending the parent node's key\n          if (child.key != null)\n            // TODO: Remove this line entirely and enforce that users always provide unique keys.\n            // Currently this line will have issues when a parent has a key `a` and a child with key `bc`\n            // but another parent has key `ab` and its child has a key `c`. The combined keys would result in both\n            // children having a key of `abc`.\n            child.key = `${node1.key}${child.key}`;\n          child.index = index;\n          let nodes = builder.getFullNode(child, builder.getChildState(state, child), node1.key, node1);\n          for (let node of nodes) {\n            index++;\n            yield node;\n          }\n        }\n      })\n    };\n    yield node1;\n  }\n  constructor() {\n    (0, $tyW6A$swchelperssrc_define_propertymjs)(this, \"cache\", new WeakMap());\n  }\n}\n// Wraps an iterator function as an iterable object, and caches the results.\nfunction $eb2240fc39a57fa5$var$iterable(iterator) {\n  let cache = [];\n  let iterable = null;\n  return {\n    *[Symbol.iterator]() {\n      for (let item of cache) yield item;\n      if (!iterable) iterable = iterator();\n      for (let item1 of iterable) {\n        cache.push(item1);\n        yield item1;\n      }\n    }\n  };\n}\nfunction $eb2240fc39a57fa5$var$compose(outer, inner) {\n  if (outer && inner) return element => outer(inner(element));\n  if (outer) return outer;\n  if (inner) return inner;\n}\nfunction $eb2240fc39a57fa5$var$capitalize(str) {\n  return str[0].toUpperCase() + str.slice(1);\n}\nfunction $7613b1592d41b092$export$6cd28814d92fa9c9(props, factory, context) {\n  let invalidators = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  let builder = (0, $tyW6A$useMemo)(() => new (0, $eb2240fc39a57fa5$export$bf788dd355e3a401)(), []);\n  let prev = (0, $tyW6A$useRef)(null);\n  return (0, $tyW6A$useMemo)(() => {\n    let nodes = builder.build(props, context);\n    prev.current = factory(nodes, prev.current);\n    return prev.current;\n    // Don't invalidate when any prop changes, just the two we care about.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [builder, props.children, props.items, context, ...invalidators]);\n}\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nconst $453cc9f0df89c0a5$var$cache = new WeakMap();\nfunction $453cc9f0df89c0a5$export$77d5aafae4e095b2(collection) {\n  let count = $453cc9f0df89c0a5$var$cache.get(collection);\n  if (count != null) return count;\n  count = 0;\n  for (let item of collection) if (item.type === \"section\") count += $453cc9f0df89c0a5$export$77d5aafae4e095b2(item.childNodes);else count++;\n  $453cc9f0df89c0a5$var$cache.set(collection, count);\n  return count;\n}\nexport { $c1d7fb2ec91bae71$export$6d08773d2e66f8f2 as Item, $9fc4852771d079eb$export$6e2c8f0811a474ce as Section, $7613b1592d41b092$export$6cd28814d92fa9c9 as useCollection, $453cc9f0df89c0a5$export$77d5aafae4e095b2 as getItemCount };","map":{"version":3,"mappings":";;;AAAA;;;;;;;;;;ACAA,GDAA,CCAA;;;;;;;;;;;AAgBA,SAASA,2BAAQC,KAAmB,EAAgB;EAClD,OAAO,IAAI;AACb;AAEAD,2BAAKE,iBAAiB,GAAG,UAAUA,kBAAqBD,KAAmB,EAAEE,OAAY,EAA6B;EACpH,IAAI;IAAAC,YAACA;IAAUC,OAAEA;IAAKC,UAAEA;EAAQ,CAAC,GAAGL;EAEpC,IAAIM,WAAWN,MAAMI,KAAK,IAAIJ,MAAMK,QAAQ;EAC5C,IAAIE,YAAYP,MAAMO,SAAS,KAAK,OAAOD,aAAa,WAAWA,WAAW,EAAE,CAAD,IAAMN,KAAK,CAAC,aAAa,IAAI;EAE5G;EACA,IAAI,CAACO,aAAa,EAACL,0DAASM,wBAAwB,CAAD,EACjDC,QAAQC,IAAI,CAAC;EAGf,MAAM;IACJC,MAAM;IACNX,OAAOA;cACPM;eACAC;IACA,cAAcP,KAAK,CAAC,aAAa;IACjCY,eAAeC,oCAAcb;IAC7B,CAACc,aAAa;MACZ,IAAIX,YACF,KAAK,IAAIY,SAASZ,YAChB,MAAM;QACJQ,MAAM;QACNK,OAAOD;MACT,OAEG,IAAIX,OAAO;QAChB,IAAIa,QAA0B,EAAE;QAChC,gBAAK,EAACC,QAAQ,CAACC,OAAO,CAACd,UAAUU,SAAS;UACxCE,MAAMG,IAAI,CAAC;YACTT,MAAM;YACNU,SAASN;UACX;QACF;QAEA,OAAOE;MACT;IACF;EACF;AACF;AAEA,SAASJ,oCAAiBb,KAAmB,EAAE;EAC7C,IAAIA,MAAMsB,aAAa,IAAI,IAAI,EAC7B,OAAOtB,MAAMsB,aAAa;EAG5B,IAAItB,MAAMG,UAAU,EAClB,OAAO,IAAI;EAGb,IAAIH,MAAMI,KAAK,IAAI,gBAAI,EAAEc,QAAQ,CAACK,KAAK,CAACvB,MAAMK,QAAQ,IAAI,GACxD,OAAO,IAAI;EAGb,OAAO,KAAK;AACd;AAEA;AACA,IAAImB,4CAAQzB;;AC9EZ;;;;;;;;;;;AAgBA,SAAS0B,8BAAWzB,KAAsB,EAAgB;EACxD,OAAO,IAAI;AACb;AAEAyB,8BAAQxB,iBAAiB,GAAG,UAAUA,kBAAqBD,KAAsB,EAA6B;EAC5G,IAAI;IAAAK,UAACA;IAAQD,OAAEA;IAAKa,OAAEA;EAAK,CAAC,GAAGjB;EAC/B,MAAM;IACJW,MAAM;IACNX,OAAOA;IACPY,eAAe,IAAI;IACnBN,UAAUF;IACV,cAAcJ,KAAK,CAAC,aAAa;IACjC,CAACc,aAAa;MACZ,IAAI,OAAOT,aAAa,YAAY;QAClC,IAAI,CAACY,OACH,MAAM,IAAIS,MAAM;QAGlB,KAAK,IAAIC,QAAQV,OACf,MAAM;UACJN,MAAM;UACNK,OAAOW;UACPC,UAAUvB;QACZ;MAEJ,OAAO;QACL,IAAIwB,SAA0B,EAAE;QAChC,gBAAK,EAACX,QAAQ,CAACC,OAAO,CAACd,UAAUU,SAAS;UACxCc,OAAMT,IAAI,CAAC;YACTT,MAAM;YACNU,SAASN;UACX;QACF;QAEA,OAAOc;MACT;IACF;EACF;AACF;AAEA;AACA,IAAIC,4CAAWL;;ACzDf;;;;;;;;;;ACAA,GDAA,CCAA;;;;;;;;;;;;AAoBO,MAAMM;EAIXC,MAAMhC,KAAwB,EAAEE,OAAiB,EAAE;IACjD,IAAI,CAACA,OAAO,GAAGA;IACf,OAAO+B,+BAAS,MAAM,IAAI,CAACC,iBAAiB,CAAClC;EAC/C;EAEA,CAASkC,kBAAkBlC,KAAwB,EAAE;IACnD,IAAI;MAAAK,UAACA;MAAQY,OAAEA;IAAK,CAAC,GAAGjB;IAExB,IAAI,OAAOK,aAAa,YAAY;MAClC,IAAI,CAACY,OACH,MAAM,IAAIS,MAAM;MAGlB,KAAK,IAAIC,QAAQ3B,MAAMiB,KAAK,EAC1B,OAAO,IAAI,CAACkB,WAAW,CAAC;QACtBnB,OAAOW;MACT,GAAG;QAACC,UAAUvB;MAAQ;IAE1B,OAAO;MACL,IAAIwB,SAAgC,EAAE;MACtC,gBAAK,EAACX,QAAQ,CAACC,OAAO,CAACd,UAAUU,SAAS;QACxCc,OAAMT,IAAI,CAACL;MACb;MAEA,IAAIqB,QAAQ;MACZ,KAAK,IAAIC,SAAQR,QAAO;QACtB,IAAIS,QAAQ,IAAI,CAACH,WAAW,CAAC;UAC3Bd,SAASgB;UACTD,OAAOA;QACT,GAAG,CAAC;QAEJ,KAAK,IAAIG,QAAQD,OAAO;UACtBF;UACA,MAAMG;QACR;MACF;IACF;EACF;EAEQC,OAAOb,IAA0B,EAAEc,WAA2B,EAAEC,KAA6B,EAAEC,SAAe,EAAO;IAC3H,IAAIhB,KAAKiB,GAAG,IAAI,IAAI,EAClB,OAAOjB,KAAKiB,GAAG;IAGjB,IAAIH,YAAY9B,IAAI,KAAK,UAAU8B,YAAYG,GAAG,IAAI,IAAI,EACxD,OAAQ,GAAED,SAAU,GAAEF,YAAYG,GAAI,EAAC;IAGzC,IAAIC,IAAIJ,YAAYzB,KAAK;IACzB,IAAI6B,KAAK,IAAI,EAAE;UACHC;MAAV,IAAIF,MAAM,YAAEA,GAAG,cAALE,6BAASD,EAAEE,EAAE;MACvB,IAAIH,OAAO,IAAI,EACb,MAAM,IAAIlB,MAAM;MAGlB,OAAOkB;IACT;IAEA,OAAOD,YAAa,GAAEA,SAAU,IAAGF,YAAYL,KAAM,EAAC,GAAI,KAAIK,YAAYL,KAAM,EAAC;EACnF;EAEQY,cAAcN,KAA6B,EAAED,WAA2B,EAAE;IAChF,OAAO;MACLb,UAAUa,YAAYb,QAAQ,IAAIc,MAAMd;IAC1C;EACF;EAEA,CAASO,YAAYM,WAA2B,EAAEC,KAA6B,EAAEC,SAAe,EAAEM,UAAoB,EAAsB;IAC1I;IACA;IACA,IAAI5B,UAAUoB,YAAYpB,OAAO;IACjC,IAAI,CAACA,WAAWoB,YAAYzB,KAAK,IAAI0B,SAASA,MAAMd,QAAQ,EAAE;MAC5D,IAAIsB,SAAS,IAAI,CAACC,KAAK,CAACC,GAAG,CAACX,YAAYzB,KAAK;MAC7C,IAAIkC,WAAW,CAACA,OAAOG,gBAAgB,IAAI,CAACH,OAAOG,gBAAgB,CAAC,IAAI,CAACnD,OAAO,IAAI;QAClFgD,OAAOd,KAAK,GAAGK,YAAYL,KAAK;QAChCc,OAAOP,SAAS,GAAGM,aAAaA,WAAWL,GAAG,GAAG,IAAI;QACrD,MAAMM;QACN;MACF;MAEA7B,UAAUqB,MAAMd,QAAQ,CAACa,YAAYzB,KAAK;IAC5C;IAEA;IACA;IACA,IAAI,gBAAI,EAAEsC,cAAc,CAACjC,UAAU;MACjC,IAAIV,OAAOU,QAAQV,IAAI;MACvB,IAAI,OAAOA,SAAS,cAAc,OAAOA,KAAKV,iBAAiB,KAAK,YAAY;QAC9E,IAAIsD,OAAO,OAAOlC,QAAQV,IAAI,KAAK,aAAaU,QAAQV,IAAI,CAAC4C,IAAI,GAAGlC,QAAQV,IAAI;QAChF,MAAM,IAAIe,MAAO,oBAAmB6B,IAAK,kBAAiB;MAC5D;MAEA,IAAIzC,aAAaH,KAAKV,iBAAiB,CAACoB,QAAQrB,KAAK,EAAE,IAAI,CAACE,OAAO;MACnE,IAAIkC,QAAQK,YAAYL,KAAK;MAC7B,IAAIoB,SAAS1C,WAAW2C,IAAI;MAC5B,OAAO,CAACD,OAAOE,IAAI,IAAIF,OAAOxC,KAAK,EAAE;QACnC,IAAI2C,YAAYH,OAAOxC,KAAK;QAE5ByB,YAAYL,KAAK,GAAGA;QAEpB,IAAIwB,UAAUD,UAAUf,GAAG;QAC3B,IAAI,CAACgB,SACHA,UAAUD,UAAUtC,OAAO,GAAG,IAAI,GAAG,IAAI,CAACmB,MAAM,CAACnB,SAAiCoB,aAAaC,OAAOC,UAAU;QAGlH,IAAIL,QAAQ,IAAI,CAACH,WAAW,CAAC;UAC3B,GAAGwB,SAAS;UACZf,KAAKgB;iBACLxB;UACAyB,SAASC,8BAAQrB,YAAYoB,OAAO,EAAEF,UAAUE,OAAO;QACzD,GAAG,IAAI,CAACb,aAAa,CAACN,OAAOiB,YAAYhB,YAAa,GAAEA,SAAU,GAAEtB,QAAQuB,GAAI,EAAC,GAAGvB,QAAQuB,GAAG,EAAEK;QAEjG,IAAI5C,WAAW,IAAIiC,MAAM;QACzB,KAAK,IAAIC,QAAQlC,UAAU;UACzB;UACAkC,KAAKvB,KAAK,GAAG2C,UAAU3C,KAAK,IAAIyB,YAAYzB,KAAK;UACjD,IAAIuB,KAAKvB,KAAK,EACZ,IAAI,CAACmC,KAAK,CAACY,GAAG,CAACxB,KAAKvB,KAAK,EAAEuB;UAG7B;UACA;UACA,IAAIE,YAAY9B,IAAI,IAAI4B,KAAK5B,IAAI,KAAK8B,YAAY9B,IAAI,EACpD,MAAM,IAAIe,MAAO,qBAAoBsC,iCAAWzB,KAAK5B,IAAI,CAAE,SAAQqD,iCAAWf,WAAWtC,IAAI,CAAE,YAAWqD,iCAAWvB,YAAY9B,IAAI,CAAE,iBAAgB;UAGzJyB;UACA,MAAMG;QACR;QAEAiB,SAAS1C,WAAW2C,IAAI,CAACpD;MAC3B;MAEA;IACF;IAEA;IACA,IAAIoC,YAAYG,GAAG,IAAI,IAAI,EACzB;IAGF;IACA,IAAIqB,UAAU,IAAI;IAClB,IAAIC,QAAgB;MAClBvD,MAAM8B,YAAY9B,IAAI;MACtBX,OAAOyC,YAAYzC,KAAK;MACxB4C,KAAKH,YAAYG,GAAG;MACpBD,WAAWM,aAAaA,WAAWL,GAAG,GAAG,IAAI;MAC7C5B,OAAOyB,YAAYzB,KAAK;MACxBmD,OAAOlB,aAAaA,WAAWkB,KAAK,GAAG,IAAI,CAAC;MAC5C/B,OAAOK,YAAYL,KAAK;MACxB9B,UAAUmC,YAAYnC,QAAQ;MAC9BC,WAAWkC,YAAYlC,SAAS;MAChC,cAAckC,WAAW,CAAC,aAAa;MACvCoB,SAASpB,YAAYoB,OAAO;MAC5BR,kBAAkBZ,YAAYY,gBAAgB;MAC9CzC,eAAe6B,YAAY7B,aAAa;MACxCE,YAAYmB,+BAAS,aAAa;QAChC,IAAI,CAACQ,YAAY7B,aAAa,EAC5B;QAGF,IAAIwB,QAAQ;QACZ,KAAK,IAAIrB,SAAS0B,YAAY3B,UAAU,IAAI;UAC1C;UACA,IAAIC,MAAM6B,GAAG,IAAI,IAAI;YACnB;YACA;YACA;YACA;YACA7B,MAAM6B,GAAG,GAAI,GAAEsB,MAAKtB,GAAI,GAAE7B,MAAM6B,GAAI,EAAC;UAGvC7B,MAAMqB,KAAK,GAAGA;UACd,IAAIE,QAAQ2B,QAAQ9B,WAAW,CAACpB,OAAOkD,QAAQjB,aAAa,CAACN,OAAO3B,QAAQmD,MAAKtB,GAAG,EAAEsB;UACtF,KAAK,IAAI3B,QAAQD,OAAO;YACtBF;YACA,MAAMG;UACR;QACF;MACF;IACF;IAEA,MAAM2B;EACR;;IA1LA,mDAAQ,SAA6B,IAAIE;;AA2L3C;AAEA;AACA,SAASnC,+BAAYoC,QAAyC,EAAqB;EACjF,IAAIlB,QAAQ,EAAE;EACd,IAAImB,WAAW,IAAI;EACnB,OAAO;IACL,EAAEC,OAAOF,QAAQ,IAAI;MACnB,KAAK,IAAI1C,QAAQwB,OACf,MAAMxB;MAGR,IAAI,CAAC2C,UACHA,WAAWD;MAGb,KAAK,IAAIhC,SAAQiC,UAAU;QACzBnB,MAAM/B,IAAI,CAACiB;QACX,MAAMA;MACR;IACF;EACF;AACF;AAGA,SAASyB,8BAAQU,KAAqB,EAAEC,KAAqB,EAAW;EACtE,IAAID,SAASC,OACX,OAAQpD,WAAYmD,MAAMC,MAAMpD;EAGlC,IAAImD,OACF,OAAOA;EAGT,IAAIC,OACF,OAAOA;AAEX;AAEA,SAAST,iCAAWU,GAAW,EAAE;EAC/B,OAAOA,GAAG,CAAC,EAAE,CAACC,WAAW,KAAKD,IAAIE,KAAK,CAAC;AAC1C;ADxOO,SAASC,0CAAqF7E,KAAwB,EAAE8E,OAAgC,EAAE5E,OAAiB,EAAoC;EAAA,IAAlC6E,mFAA2B,EAAE;EAC/M,IAAId,UAAU,kBAAM,EAAE,MAAM,KAAI,4CAAiB,GAAD,EAAQ,EAAE;EAE1D,IAAIe,OAAO,iBAAK,EAAK,IAAI;EACzB,OAAO,kBAAO,EAAC,MAAM;IACnB,IAAI1C,QAAQ2B,QAAQjC,KAAK,CAAChC,OAAOE;IACjC8E,KAAKC,OAAO,GAAGH,QAAQxC,OAAO0C,KAAKC,OAAO;IAC1C,OAAOD,KAAKC,OAAO;IACrB;IACA;EACA,GAAG,CAAChB,SAASjE,MAAMK,QAAQ,EAAEL,MAAMiB,KAAK,EAAEf,YAAY6E,aAAa;AACrE;;AE7BA;;;;;;;;;;;AAYA,MAEMG,8BAAQ,IAAId;AAEX,SAASe,0CAAgBC,UAA6B,EAAU;EACrE,IAAI7D,QAAQ2D,4BAAM9B,GAAG,CAACgC;EACtB,IAAI7D,SAAS,IAAI,EACf,OAAOA;EAGTA,QAAQ;EACR,KAAK,IAAII,QAAQyD,YACf,IAAIzD,KAAKhB,IAAI,KAAK,WAChBY,SAAS4D,0CAAaxD,KAAKb,UAAU,OAErCS;EAIJ2D,4BAAMnB,GAAG,CAACqB,YAAY7D;EACtB,OAAOA;AACT","names":["$c1d7fb2ec91bae71$var$Item","props","getCollectionNode","context","childItems","title","children","rendered","textValue","suppressTextValueWarning","console","warn","type","hasChildNodes","$c1d7fb2ec91bae71$var$hasChildItems","childNodes","child","value","items","Children","forEach","push","element","hasChildItems","count","$c1d7fb2ec91bae71$export$6d08773d2e66f8f2","$9fc4852771d079eb$var$Section","Error","item","renderer","items1","$9fc4852771d079eb$export$6e2c8f0811a474ce","$eb2240fc39a57fa5$export$bf788dd355e3a401","build","$eb2240fc39a57fa5$var$iterable","iterateCollection","getFullNode","index","item1","nodes","node","getKey","partialNode","state","parentKey","key","v","_v_key","id","getChildState","parentNode","cached","cache","get","shouldInvalidate","isValidElement","name","result","next","done","childNode","nodeKey","wrapper","$eb2240fc39a57fa5$var$compose","set","$eb2240fc39a57fa5$var$capitalize","builder","node1","level","WeakMap","iterator","iterable","Symbol","outer","inner","str","toUpperCase","slice","$7613b1592d41b092$export$6cd28814d92fa9c9","factory","invalidators","prev","current","$453cc9f0df89c0a5$var$cache","$453cc9f0df89c0a5$export$77d5aafae4e095b2","collection"],"sources":["C:\\Users\\13093\\codestuff\\portfolio\\node_modules\\@react-aria\\listbox\\node_modules\\@react-stately\\collections\\dist\\packages\\@react-stately\\collections\\src\\index.ts","C:\\Users\\13093\\codestuff\\portfolio\\node_modules\\@react-aria\\listbox\\node_modules\\@react-stately\\collections\\dist\\packages\\@react-stately\\collections\\src\\Item.ts","C:\\Users\\13093\\codestuff\\portfolio\\node_modules\\@react-aria\\listbox\\node_modules\\@react-stately\\collections\\dist\\packages\\@react-stately\\collections\\src\\Section.ts","C:\\Users\\13093\\codestuff\\portfolio\\node_modules\\@react-aria\\listbox\\node_modules\\@react-stately\\collections\\dist\\packages\\@react-stately\\collections\\src\\useCollection.ts","C:\\Users\\13093\\codestuff\\portfolio\\node_modules\\@react-aria\\listbox\\node_modules\\@react-stately\\collections\\dist\\packages\\@react-stately\\collections\\src\\CollectionBuilder.ts","C:\\Users\\13093\\codestuff\\portfolio\\node_modules\\@react-aria\\listbox\\node_modules\\@react-stately\\collections\\dist\\packages\\@react-stately\\collections\\src\\getItemCount.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport type {PartialNode} from './types';\nexport {Item} from './Item';\nexport {Section} from './Section';\nexport {useCollection} from './useCollection';\nexport {getItemCount} from './getItemCount';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {ItemElement, ItemProps} from '@react-types/shared';\nimport {PartialNode} from './types';\nimport React, {ReactElement} from 'react';\n\nfunction Item<T>(props: ItemProps<T>): ReactElement { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return null;\n}\n\nItem.getCollectionNode = function* getCollectionNode<T>(props: ItemProps<T>, context: any): Generator<PartialNode<T>> {\n  let {childItems, title, children} = props;\n\n  let rendered = props.title || props.children;\n  let textValue = props.textValue || (typeof rendered === 'string' ? rendered : '') || props['aria-label'] || '';\n\n  // suppressTextValueWarning is used in components like Tabs, which don't have type to select support.\n  if (!textValue && !context?.suppressTextValueWarning) {\n    console.warn('<Item> with non-plain text contents is unsupported by type to select for accessibility. Please add a `textValue` prop.');\n  }\n\n  yield {\n    type: 'item',\n    props: props,\n    rendered,\n    textValue,\n    'aria-label': props['aria-label'],\n    hasChildNodes: hasChildItems(props),\n    *childNodes() {\n      if (childItems) {\n        for (let child of childItems) {\n          yield {\n            type: 'item',\n            value: child\n          };\n        }\n      } else if (title) {\n        let items: PartialNode<T>[] = [];\n        React.Children.forEach(children, child => {\n          items.push({\n            type: 'item',\n            element: child as ItemElement<T>\n          });\n        });\n\n        yield* items;\n      }\n    }\n  };\n};\n\nfunction hasChildItems<T>(props: ItemProps<T>) {\n  if (props.hasChildItems != null) {\n    return props.hasChildItems;\n  }\n\n  if (props.childItems) {\n    return true;\n  }\n\n  if (props.title && React.Children.count(props.children) > 0) {\n    return true;\n  }\n\n  return false;\n}\n\n// We don't want getCollectionNode to show up in the type definition\nlet _Item = Item as <T>(props: ItemProps<T>) => JSX.Element;\nexport {_Item as Item};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {PartialNode} from './types';\nimport React, {ReactElement} from 'react';\nimport {SectionProps} from '@react-types/shared';\n\nfunction Section<T>(props: SectionProps<T>): ReactElement { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return null;\n}\n\nSection.getCollectionNode = function* getCollectionNode<T>(props: SectionProps<T>): Generator<PartialNode<T>> {\n  let {children, title, items} = props;\n  yield {\n    type: 'section',\n    props: props,\n    hasChildNodes: true,\n    rendered: title,\n    'aria-label': props['aria-label'],\n    *childNodes() {\n      if (typeof children === 'function') {\n        if (!items) {\n          throw new Error('props.children was a function but props.items is missing');\n        }\n    \n        for (let item of items) {\n          yield {\n            type: 'item',\n            value: item,\n            renderer: children\n          };\n        }\n      } else {\n        let items: PartialNode<T>[] = [];\n        React.Children.forEach(children, child => {\n          items.push({\n            type: 'item',\n            element: child\n          });\n        });\n\n        yield* items;\n      }\n    }\n  };\n};\n\n// We don't want getCollectionNode to show up in the type definition\nlet _Section = Section as <T>(props: SectionProps<T>) => JSX.Element;\nexport {_Section as Section};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Collection, CollectionBase, Node} from '@react-types/shared';\nimport {CollectionBuilder} from './CollectionBuilder';\nimport {useMemo, useRef} from 'react';\n\ntype CollectionFactory<T, C extends Collection<Node<T>>> = (node: Iterable<Node<T>>, prev: C | null) => C;\n\nexport function useCollection<T extends object, C extends Collection<Node<T>> = Collection<Node<T>>>(props: CollectionBase<T>, factory: CollectionFactory<T, C>, context?: unknown, invalidators: Array<any> = []): C {\n  let builder = useMemo(() => new CollectionBuilder<T>(), []);\n\n  let prev = useRef<C>(null);\n  return useMemo(() => {\n    let nodes = builder.build(props, context);\n    prev.current = factory(nodes, prev.current);\n    return prev.current;\n  // Don't invalidate when any prop changes, just the two we care about.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [builder, props.children, props.items, context, ...invalidators]);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CollectionBase, CollectionElement, Node} from '@react-types/shared';\nimport {PartialNode} from './types';\nimport React, {Key, ReactElement} from 'react';\n\ninterface CollectionBuilderState {\n  renderer?: (value: any) => ReactElement\n}\n\nexport class CollectionBuilder<T extends object> {\n  private context?: unknown;\n  private cache: WeakMap<T, Node<T>> = new WeakMap();\n\n  build(props: CollectionBase<T>, context?: unknown) {\n    this.context = context;\n    return iterable(() => this.iterateCollection(props));\n  }\n\n  private *iterateCollection(props: CollectionBase<T>) {\n    let {children, items} = props;\n\n    if (typeof children === 'function') {\n      if (!items) {\n        throw new Error('props.children was a function but props.items is missing');\n      }\n\n      for (let item of props.items) {\n        yield* this.getFullNode({\n          value: item\n        }, {renderer: children});\n      }\n    } else {\n      let items: CollectionElement<T>[] = [];\n      React.Children.forEach(children, child => {\n        items.push(child);\n      });\n\n      let index = 0;\n      for (let item of items) {\n        let nodes = this.getFullNode({\n          element: item,\n          index: index\n        }, {});\n\n        for (let node of nodes) {\n          index++;\n          yield node;\n        }\n      }\n    }\n  }\n\n  private getKey(item: CollectionElement<T>, partialNode: PartialNode<T>, state: CollectionBuilderState, parentKey?: Key): Key {\n    if (item.key != null) {\n      return item.key;\n    }\n\n    if (partialNode.type === 'cell' && partialNode.key != null) {\n      return `${parentKey}${partialNode.key}`;\n    }\n\n    let v = partialNode.value as any;\n    if (v != null) {\n      let key = v.key ?? v.id;\n      if (key == null) {\n        throw new Error('No key found for item');\n      }\n\n      return key;\n    }\n\n    return parentKey ? `${parentKey}.${partialNode.index}` : `$.${partialNode.index}`;\n  }\n\n  private getChildState(state: CollectionBuilderState, partialNode: PartialNode<T>) {\n    return {\n      renderer: partialNode.renderer || state.renderer\n    };\n  }\n\n  private *getFullNode(partialNode: PartialNode<T>, state: CollectionBuilderState, parentKey?: Key, parentNode?: Node<T>): Generator<Node<T>> {\n    // If there's a value instead of an element on the node, and a parent renderer function is available,\n    // use it to render an element for the value.\n    let element = partialNode.element;\n    if (!element && partialNode.value && state && state.renderer) {\n      let cached = this.cache.get(partialNode.value);\n      if (cached && (!cached.shouldInvalidate || !cached.shouldInvalidate(this.context))) {\n        cached.index = partialNode.index;\n        cached.parentKey = parentNode ? parentNode.key : null;\n        yield cached;\n        return;\n      }\n\n      element = state.renderer(partialNode.value);\n    }\n\n    // If there's an element with a getCollectionNode function on its type, then it's a supported component.\n    // Call this function to get a partial node, and recursively build a full node from there.\n    if (React.isValidElement(element)) {\n      let type = element.type as any;\n      if (typeof type !== 'function' && typeof type.getCollectionNode !== 'function') {\n        let name = typeof element.type === 'function' ? element.type.name : element.type;\n        throw new Error(`Unknown element <${name}> in collection.`);\n      }\n\n      let childNodes = type.getCollectionNode(element.props, this.context) as Generator<PartialNode<T>, void, Node<T>[]>;\n      let index = partialNode.index;\n      let result = childNodes.next();\n      while (!result.done && result.value) {\n        let childNode = result.value;\n\n        partialNode.index = index;\n\n        let nodeKey = childNode.key;\n        if (!nodeKey) {\n          nodeKey = childNode.element ? null : this.getKey(element as CollectionElement<T>, partialNode, state, parentKey);\n        }\n\n        let nodes = this.getFullNode({\n          ...childNode,\n          key: nodeKey,\n          index,\n          wrapper: compose(partialNode.wrapper, childNode.wrapper)\n        }, this.getChildState(state, childNode), parentKey ? `${parentKey}${element.key}` : element.key, parentNode);\n\n        let children = [...nodes];\n        for (let node of children) {\n          // Cache the node based on its value\n          node.value = childNode.value || partialNode.value;\n          if (node.value) {\n            this.cache.set(node.value, node);\n          }\n\n          // The partial node may have specified a type for the child in order to specify a constraint.\n          // Verify that the full node that was built recursively matches this type.\n          if (partialNode.type && node.type !== partialNode.type) {\n            throw new Error(`Unsupported type <${capitalize(node.type)}> in <${capitalize(parentNode.type)}>. Only <${capitalize(partialNode.type)}> is supported.`);\n          }\n\n          index++;\n          yield node;\n        }\n\n        result = childNodes.next(children);\n      }\n\n      return;\n    }\n\n    // Ignore invalid elements\n    if (partialNode.key == null) {\n      return;\n    }\n\n    // Create full node\n    let builder = this;\n    let node: Node<T> = {\n      type: partialNode.type,\n      props: partialNode.props,\n      key: partialNode.key,\n      parentKey: parentNode ? parentNode.key : null,\n      value: partialNode.value,\n      level: parentNode ? parentNode.level + 1 : 0,\n      index: partialNode.index,\n      rendered: partialNode.rendered,\n      textValue: partialNode.textValue,\n      'aria-label': partialNode['aria-label'],\n      wrapper: partialNode.wrapper,\n      shouldInvalidate: partialNode.shouldInvalidate,\n      hasChildNodes: partialNode.hasChildNodes,\n      childNodes: iterable(function *() {\n        if (!partialNode.hasChildNodes) {\n          return;\n        }\n\n        let index = 0;\n        for (let child of partialNode.childNodes()) {\n          // Ensure child keys are globally unique by prepending the parent node's key\n          if (child.key != null) {\n            // TODO: Remove this line entirely and enforce that users always provide unique keys.\n            // Currently this line will have issues when a parent has a key `a` and a child with key `bc`\n            // but another parent has key `ab` and its child has a key `c`. The combined keys would result in both\n            // children having a key of `abc`.\n            child.key = `${node.key}${child.key}`;\n          }\n\n          child.index = index;\n          let nodes = builder.getFullNode(child, builder.getChildState(state, child), node.key, node);\n          for (let node of nodes) {\n            index++;\n            yield node;\n          }\n        }\n      })\n    };\n\n    yield node;\n  }\n}\n\n// Wraps an iterator function as an iterable object, and caches the results.\nfunction iterable<T>(iterator: () => IterableIterator<Node<T>>): Iterable<Node<T>> {\n  let cache = [];\n  let iterable = null;\n  return {\n    *[Symbol.iterator]() {\n      for (let item of cache) {\n        yield item;\n      }\n\n      if (!iterable) {\n        iterable = iterator();\n      }\n\n      for (let item of iterable) {\n        cache.push(item);\n        yield item;\n      }\n    }\n  };\n}\n\ntype Wrapper = (element: ReactElement) => ReactElement;\nfunction compose(outer: Wrapper | void, inner: Wrapper | void): Wrapper {\n  if (outer && inner) {\n    return (element) => outer(inner(element));\n  }\n\n  if (outer) {\n    return outer;\n  }\n\n  if (inner) {\n    return inner;\n  }\n}\n\nfunction capitalize(str: string) {\n  return str[0].toUpperCase() + str.slice(1);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Node} from '@react-types/shared';\n\nconst cache = new WeakMap<Iterable<unknown>, number>();\n\nexport function getItemCount<T>(collection: Iterable<Node<T>>): number {\n  let count = cache.get(collection);\n  if (count != null) {\n    return count;\n  }\n\n  count = 0;\n  for (let item of collection) {\n    if (item.type === 'section') {\n      count += getItemCount(item.childNodes);\n    } else {\n      count++;\n    }\n  }\n\n  cache.set(collection, count);\n  return count;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}