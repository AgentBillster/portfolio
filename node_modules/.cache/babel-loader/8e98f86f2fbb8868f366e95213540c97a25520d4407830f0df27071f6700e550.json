{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport { getHeaderTitle, Header, SafeAreaProviderCompat, Screen } from '@react-navigation/elements';\nimport * as React from 'react';\nimport { Platform, StyleSheet } from 'react-native';\nimport { SafeAreaInsetsContext } from 'react-native-safe-area-context';\nimport BottomTabBarHeightCallbackContext from '../utils/BottomTabBarHeightCallbackContext';\nimport BottomTabBarHeightContext from '../utils/BottomTabBarHeightContext';\nimport BottomTabBar, { getTabBarHeight } from './BottomTabBar';\nimport { MaybeScreen, MaybeScreenContainer } from './ScreenFallback';\nexport default function BottomTabView(props) {\n  const {\n    tabBar = props => /*#__PURE__*/React.createElement(BottomTabBar, props),\n    state,\n    navigation,\n    descriptors,\n    safeAreaInsets,\n    detachInactiveScreens = Platform.OS === 'web' || Platform.OS === 'android' || Platform.OS === 'ios',\n    sceneContainerStyle\n  } = props;\n  const focusedRouteKey = state.routes[state.index].key;\n  const [loaded, setLoaded] = React.useState([focusedRouteKey]);\n  if (!loaded.includes(focusedRouteKey)) {\n    setLoaded([...loaded, focusedRouteKey]);\n  }\n  const dimensions = SafeAreaProviderCompat.initialMetrics.frame;\n  const [tabBarHeight, setTabBarHeight] = React.useState(() => getTabBarHeight({\n    state,\n    descriptors,\n    dimensions,\n    layout: {\n      width: dimensions.width,\n      height: 0\n    },\n    insets: {\n      ...SafeAreaProviderCompat.initialMetrics.insets,\n      ...props.safeAreaInsets\n    },\n    style: descriptors[state.routes[state.index].key].options.tabBarStyle\n  }));\n  const renderTabBar = () => {\n    return /*#__PURE__*/React.createElement(SafeAreaInsetsContext.Consumer, null, insets => tabBar({\n      state: state,\n      descriptors: descriptors,\n      navigation: navigation,\n      insets: {\n        top: (safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.top) ?? (insets === null || insets === void 0 ? void 0 : insets.top) ?? 0,\n        right: (safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.right) ?? (insets === null || insets === void 0 ? void 0 : insets.right) ?? 0,\n        bottom: (safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.bottom) ?? (insets === null || insets === void 0 ? void 0 : insets.bottom) ?? 0,\n        left: (safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.left) ?? (insets === null || insets === void 0 ? void 0 : insets.left) ?? 0\n      }\n    }));\n  };\n  const {\n    routes\n  } = state;\n  return /*#__PURE__*/React.createElement(SafeAreaProviderCompat, null, /*#__PURE__*/React.createElement(MaybeScreenContainer, {\n    enabled: detachInactiveScreens,\n    hasTwoStates: true,\n    style: styles.container\n  }, routes.map((route, index) => {\n    const descriptor = descriptors[route.key];\n    const {\n      lazy = true,\n      unmountOnBlur\n    } = descriptor.options;\n    const isFocused = state.index === index;\n    if (unmountOnBlur && !isFocused) {\n      return null;\n    }\n    if (lazy && !loaded.includes(route.key) && !isFocused) {\n      // Don't render a lazy screen if we've never navigated to it\n      return null;\n    }\n    const {\n      freezeOnBlur,\n      header = _ref => {\n        let {\n          layout,\n          options\n        } = _ref;\n        return /*#__PURE__*/React.createElement(Header, _extends({}, options, {\n          layout: layout,\n          title: getHeaderTitle(options, route.name)\n        }));\n      },\n      headerShown,\n      headerStatusBarHeight,\n      headerTransparent\n    } = descriptor.options;\n    return /*#__PURE__*/React.createElement(MaybeScreen, {\n      key: route.key,\n      style: [StyleSheet.absoluteFill, {\n        zIndex: isFocused ? 0 : -1\n      }],\n      visible: isFocused,\n      enabled: detachInactiveScreens,\n      freezeOnBlur: freezeOnBlur\n    }, /*#__PURE__*/React.createElement(BottomTabBarHeightContext.Provider, {\n      value: tabBarHeight\n    }, /*#__PURE__*/React.createElement(Screen, {\n      focused: isFocused,\n      route: descriptor.route,\n      navigation: descriptor.navigation,\n      headerShown: headerShown,\n      headerStatusBarHeight: headerStatusBarHeight,\n      headerTransparent: headerTransparent,\n      header: header({\n        layout: dimensions,\n        route: descriptor.route,\n        navigation: descriptor.navigation,\n        options: descriptor.options\n      }),\n      style: sceneContainerStyle\n    }, descriptor.render())));\n  })), /*#__PURE__*/React.createElement(BottomTabBarHeightCallbackContext.Provider, {\n    value: setTabBarHeight\n  }, renderTabBar()));\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden'\n  }\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;AAAA,SACEA,cAAc,EACdC,MAAM,EACNC,sBAAsB,EACtBC,MAAM,QACD,4BAA4B;AAKnC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,EAAEC,UAAU,QAAQ,cAAc;AACnD,SAASC,qBAAqB,QAAQ,gCAAgC;AAUtE,OAAOC,iCAAiC,MAAM,4CAA4C;AAC1F,OAAOC,yBAAyB,MAAM,oCAAoC;AAC1E,OAAOC,YAAY,IAAIC,eAAe,QAAQ,gBAAgB;AAC9D,SAASC,WAAW,EAAEC,oBAAoB,QAAQ,kBAAkB;AAQpE,eAAe,SAASC,aAAa,CAACC,KAAY,EAAE;EAClD,MAAM;IACJC,MAAM,GAAID,KAAwB,iBAAKX,oBAACM,YAAY,EAAKK,KAAK,CAAI;IAClEE,KAAK;IACLC,UAAU;IACVC,WAAW;IACXC,cAAc;IACdC,qBAAqB,GAAGhB,QAAQ,CAACiB,EAAE,KAAK,KAAK,IAC3CjB,QAAQ,CAACiB,EAAE,KAAK,SAAS,IACzBjB,QAAQ,CAACiB,EAAE,KAAK,KAAK;IACvBC;EACF,CAAC,GAAGR,KAAK;EAET,MAAMS,eAAe,GAAGP,KAAK,CAACQ,MAAM,CAACR,KAAK,CAACS,KAAK,CAAC,CAACC,GAAG;EACrD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGzB,KAAK,CAAC0B,QAAQ,CAAC,CAACN,eAAe,CAAC,CAAC;EAE7D,IAAI,CAACI,MAAM,CAACG,QAAQ,CAACP,eAAe,CAAC,EAAE;IACrCK,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAEJ,eAAe,CAAC,CAAC;EACzC;EAEA,MAAMQ,UAAU,GAAG9B,sBAAsB,CAAC+B,cAAc,CAACC,KAAK;EAC9D,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGhC,KAAK,CAAC0B,QAAQ,CAAC,MACrDnB,eAAe,CAAC;IACdM,KAAK;IACLE,WAAW;IACXa,UAAU;IACVK,MAAM,EAAE;MAAEC,KAAK,EAAEN,UAAU,CAACM,KAAK;MAAEC,MAAM,EAAE;IAAE,CAAC;IAC9CC,MAAM,EAAE;MACN,GAAGtC,sBAAsB,CAAC+B,cAAc,CAACO,MAAM;MAC/C,GAAGzB,KAAK,CAACK;IACX,CAAC;IACDqB,KAAK,EAAEtB,WAAW,CAACF,KAAK,CAACQ,MAAM,CAACR,KAAK,CAACS,KAAK,CAAC,CAACC,GAAG,CAAC,CAACe,OAAO,CAACC;EAC5D,CAAC,CAAC,CACH;EAED,MAAMC,YAAY,GAAG,MAAM;IACzB,oBACExC,oBAACG,qBAAqB,CAACsC,QAAQ,QAC3BL,MAAM,IACNxB,MAAM,CAAC;MACLC,KAAK,EAAEA,KAAK;MACZE,WAAW,EAAEA,WAAW;MACxBD,UAAU,EAAEA,UAAU;MACtBsB,MAAM,EAAE;QACNM,GAAG,EAAE,eAAc,aAAd1B,cAAc,uBAAdA,cAAc,CAAE0B,GAAG,MAAIN,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEM,GAAG,KAAI,CAAC;QAC5CC,KAAK,EAAE,eAAc,aAAd3B,cAAc,uBAAdA,cAAc,CAAE2B,KAAK,MAAIP,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEO,KAAK,KAAI,CAAC;QAClDC,MAAM,EAAE,eAAc,aAAd5B,cAAc,uBAAdA,cAAc,CAAE4B,MAAM,MAAIR,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEQ,MAAM,KAAI,CAAC;QACrDC,IAAI,EAAE,eAAc,aAAd7B,cAAc,uBAAdA,cAAc,CAAE6B,IAAI,MAAIT,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAES,IAAI,KAAI;MAChD;IACF,CAAC,CAAC,CAE2B;EAErC,CAAC;EAED,MAAM;IAAExB;EAAO,CAAC,GAAGR,KAAK;EAExB,oBACEb,oBAACF,sBAAsB,qBACrBE,oBAACS,oBAAoB;IACnBqC,OAAO,EAAE7B,qBAAsB;IAC/B8B,YAAY;IACZV,KAAK,EAAEW,MAAM,CAACC;EAAU,GAEvB5B,MAAM,CAAC6B,GAAG,CAAC,CAACC,KAAK,EAAE7B,KAAK,KAAK;IAC5B,MAAM8B,UAAU,GAAGrC,WAAW,CAACoC,KAAK,CAAC5B,GAAG,CAAC;IACzC,MAAM;MAAE8B,IAAI,GAAG,IAAI;MAAEC;IAAc,CAAC,GAAGF,UAAU,CAACd,OAAO;IACzD,MAAMiB,SAAS,GAAG1C,KAAK,CAACS,KAAK,KAAKA,KAAK;IAEvC,IAAIgC,aAAa,IAAI,CAACC,SAAS,EAAE;MAC/B,OAAO,IAAI;IACb;IAEA,IAAIF,IAAI,IAAI,CAAC7B,MAAM,CAACG,QAAQ,CAACwB,KAAK,CAAC5B,GAAG,CAAC,IAAI,CAACgC,SAAS,EAAE;MACrD;MACA,OAAO,IAAI;IACb;IAEA,MAAM;MACJC,YAAY;MACZC,MAAM,GAAGC;QAAA,IAAC;UAAEzB,MAAM;UAAEK;QAA8B,CAAC;QAAA,oBACjDtC,oBAACH,MAAM,eACDyC,OAAO;UACXL,MAAM,EAAEA,MAAO;UACf0B,KAAK,EAAE/D,cAAc,CAAC0C,OAAO,EAAEa,KAAK,CAACS,IAAI;QAAE,GAC3C;MAAA,CACH;MACDC,WAAW;MACXC,qBAAqB;MACrBC;IACF,CAAC,GAAGX,UAAU,CAACd,OAAO;IAEtB,oBACEtC,oBAACQ,WAAW;MACVe,GAAG,EAAE4B,KAAK,CAAC5B,GAAI;MACfc,KAAK,EAAE,CAACnC,UAAU,CAAC8D,YAAY,EAAE;QAAEC,MAAM,EAAEV,SAAS,GAAG,CAAC,GAAG,CAAC;MAAE,CAAC,CAAE;MACjEW,OAAO,EAAEX,SAAU;MACnBT,OAAO,EAAE7B,qBAAsB;MAC/BuC,YAAY,EAAEA;IAAa,gBAE3BxD,oBAACK,yBAAyB,CAAC8D,QAAQ;MAACC,KAAK,EAAErC;IAAa,gBACtD/B,oBAACD,MAAM;MACLsE,OAAO,EAAEd,SAAU;MACnBJ,KAAK,EAAEC,UAAU,CAACD,KAAM;MACxBrC,UAAU,EAAEsC,UAAU,CAACtC,UAAW;MAClC+C,WAAW,EAAEA,WAAY;MACzBC,qBAAqB,EAAEA,qBAAsB;MAC7CC,iBAAiB,EAAEA,iBAAkB;MACrCN,MAAM,EAAEA,MAAM,CAAC;QACbxB,MAAM,EAAEL,UAAU;QAClBuB,KAAK,EAAEC,UAAU,CAACD,KAAK;QACvBrC,UAAU,EACRsC,UAAU,CAACtC,UAAoD;QACjEwB,OAAO,EAAEc,UAAU,CAACd;MACtB,CAAC,CAAE;MACHD,KAAK,EAAElB;IAAoB,GAE1BiC,UAAU,CAACkB,MAAM,EAAE,CACb,CAC0B,CACzB;EAElB,CAAC,CAAC,CACmB,eACvBtE,oBAACI,iCAAiC,CAAC+D,QAAQ;IAACC,KAAK,EAAEpC;EAAgB,GAChEQ,YAAY,EAAE,CAC4B,CACtB;AAE7B;AAEA,MAAMQ,MAAM,GAAG9C,UAAU,CAACqE,MAAM,CAAC;EAC/BtB,SAAS,EAAE;IACTuB,IAAI,EAAE,CAAC;IACPC,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC","names":["getHeaderTitle","Header","SafeAreaProviderCompat","Screen","React","Platform","StyleSheet","SafeAreaInsetsContext","BottomTabBarHeightCallbackContext","BottomTabBarHeightContext","BottomTabBar","getTabBarHeight","MaybeScreen","MaybeScreenContainer","BottomTabView","props","tabBar","state","navigation","descriptors","safeAreaInsets","detachInactiveScreens","OS","sceneContainerStyle","focusedRouteKey","routes","index","key","loaded","setLoaded","useState","includes","dimensions","initialMetrics","frame","tabBarHeight","setTabBarHeight","layout","width","height","insets","style","options","tabBarStyle","renderTabBar","Consumer","top","right","bottom","left","enabled","hasTwoStates","styles","container","map","route","descriptor","lazy","unmountOnBlur","isFocused","freezeOnBlur","header","_ref","title","name","headerShown","headerStatusBarHeight","headerTransparent","absoluteFill","zIndex","visible","Provider","value","focused","render","create","flex","overflow"],"sources":["BottomTabView.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}