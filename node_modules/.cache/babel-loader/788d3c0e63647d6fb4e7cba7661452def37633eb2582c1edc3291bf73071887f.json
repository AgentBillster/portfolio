{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\13093\\\\codestuff\\\\portfolio\\\\src\\\\components\\\\AnimatedBackground.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Box, Pressable, Switch, Text, useColorMode } from \"native-base\";\nimport { View } from \"react-native\";\nimport { useSpring, animated } from \"@react-spring/web\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnimatedBackground = () => {\n  _s();\n  const {\n    colorMode,\n    toggleColorMode\n  } = useColorMode();\n  const [animatedStyle, api] = useSpring(() => ({\n    backgroundColor: colorMode === \"light\" ? \"#fff\" : \"#000\",\n    opacity: 1,\n    position: \"absolute\",\n    height: 500,\n    width: 500,\n    zIndex: 100\n  }));\n  const handleToggle = () => {\n    api.start({\n      from: {\n        backgroundColor: colorMode === \"light\" ? \"black\" : \"white\"\n      },\n      to: {\n        backgroundColor: colorMode === \"dark\" ? \"white\" : \"black\"\n      }\n    });\n    toggleColorMode();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Switch, {\n      position: \"fixed\",\n      zIndex: \"100\",\n      onValueChange: handleToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(animated.div, {\n      style: animatedStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(AnimatedBackground, \"P1dolIvVGhGbg0klMRS/XSOYXe4=\", false, function () {\n  return [useColorMode, useSpring];\n});\n_c = AnimatedBackground;\nexport default AnimatedBackground;\nvar _c;\n$RefreshReg$(_c, \"AnimatedBackground\");","map":{"version":3,"names":["React","useState","useEffect","Box","Pressable","Switch","Text","useColorMode","View","useSpring","animated","AnimatedBackground","colorMode","toggleColorMode","animatedStyle","api","backgroundColor","opacity","position","height","width","zIndex","handleToggle","start","from","to"],"sources":["C:/Users/13093/codestuff/portfolio/src/components/AnimatedBackground.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Box, Pressable, Switch, Text, useColorMode } from \"native-base\";\r\n\r\nimport { View } from \"react-native\";\r\nimport { useSpring, animated } from \"@react-spring/web\";\r\n\r\nconst AnimatedBackground = () => {\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n  const [animatedStyle, api] = useSpring(() => ({\r\n    backgroundColor: colorMode === \"light\" ? \"#fff\" : \"#000\",\r\n    opacity: 1,\r\n    position: \"absolute\",\r\n    height: 500,\r\n    width: 500,\r\n    zIndex: 100,\r\n  }));\r\n\r\n  const handleToggle = () => {\r\n    api.start({\r\n      from: {\r\n        backgroundColor: colorMode === \"light\" ? \"black\" : \"white\",\r\n      },\r\n      to: {\r\n        backgroundColor: colorMode === \"dark\" ? \"white\" : \"black\",\r\n      },\r\n    });\r\n    toggleColorMode();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Switch position={\"fixed\"} zIndex=\"100\" onValueChange={handleToggle} />\r\n      <animated.div style={animatedStyle} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AnimatedBackground;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,GAAG,EAAEC,SAAS,EAAEC,MAAM,EAAEC,IAAI,EAAEC,YAAY,QAAQ,aAAa;AAExE,SAASC,IAAI,QAAQ,cAAc;AACnC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,mBAAmB;AAAC;AAAA;AAExD,MAAMC,kBAAkB,GAAG,MAAM;EAAA;EAC/B,MAAM;IAAEC,SAAS;IAAEC;EAAgB,CAAC,GAAGN,YAAY,EAAE;EAErD,MAAM,CAACO,aAAa,EAAEC,GAAG,CAAC,GAAGN,SAAS,CAAC,OAAO;IAC5CO,eAAe,EAAEJ,SAAS,KAAK,OAAO,GAAG,MAAM,GAAG,MAAM;IACxDK,OAAO,EAAE,CAAC;IACVC,QAAQ,EAAE,UAAU;IACpBC,MAAM,EAAE,GAAG;IACXC,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE;EACV,CAAC,CAAC,CAAC;EAEH,MAAMC,YAAY,GAAG,MAAM;IACzBP,GAAG,CAACQ,KAAK,CAAC;MACRC,IAAI,EAAE;QACJR,eAAe,EAAEJ,SAAS,KAAK,OAAO,GAAG,OAAO,GAAG;MACrD,CAAC;MACDa,EAAE,EAAE;QACFT,eAAe,EAAEJ,SAAS,KAAK,MAAM,GAAG,OAAO,GAAG;MACpD;IACF,CAAC,CAAC;IACFC,eAAe,EAAE;EACnB,CAAC;EAED,oBACE;IAAA,wBACE,QAAC,MAAM;MAAC,QAAQ,EAAE,OAAQ;MAAC,MAAM,EAAC,KAAK;MAAC,aAAa,EAAES;IAAa;MAAA;MAAA;MAAA;IAAA,QAAG,eACvE,QAAC,QAAQ,CAAC,GAAG;MAAC,KAAK,EAAER;IAAc;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBACrC;AAEP,CAAC;AAAC,GA9BIH,kBAAkB;EAAA,QACiBJ,YAAY,EAEtBE,SAAS;AAAA;AAAA,KAHlCE,kBAAkB;AAgCxB,eAAeA,kBAAkB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}