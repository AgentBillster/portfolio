{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\13093\\\\codestuff\\\\portfolio\\\\src\\\\navigators\\\\AppNavigator.js\";\nimport { View, Text, TouchableOpacity } from \"react-native\";\nimport React from \"react\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport TabBarMinimal from \"../components/TabBarMinimal\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport ColorModeSwitch from \"../components/ColorModeSwitch\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tab = createBottomTabNavigator();\nconst linking = {\n  prefixes: [\"http://localhost:3000\", \"https://localhost:3000\", \"https://.*localhost:3000\"],\n  config: {\n    screens: {\n      Home: \"home/\",\n      works: \"works/\",\n      contact: \"contact/\"\n    }\n  }\n};\nconst AppNavigator = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ColorModeSwitch, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavigationContainer, {\n      linking: linking,\n      fallback: /*#__PURE__*/_jsxDEV(Text, {\n        children: \"WHAT DA FUQ MAN FALLLBAAAQQQQ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 19\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Tab.Navigator, {\n        screenOptions: {\n          headerShown: false\n        },\n        tabBar: props => /*#__PURE__*/_jsxDEV(TabBarMinimal, {\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 30\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Tab.Screen, {\n          name: \"home\",\n          component: HomeScreen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab.Screen, {\n          name: \"works\",\n          component: SettingsScreen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Tab.Screen, {\n          name: \"contact\",\n          component: ContactScreen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = AppNavigator;\nconst HomeScreen = () => {\n  return /*#__PURE__*/_jsxDEV(View, {\n    children: /*#__PURE__*/_jsxDEV(Text, {\n      children: \"HomeScreen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_c2 = HomeScreen;\nconst SettingsScreen = () => {\n  return /*#__PURE__*/_jsxDEV(View, {\n    children: /*#__PURE__*/_jsxDEV(Text, {\n      children: \"SettingsScreen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_c3 = SettingsScreen;\nconst ContactScreen = () => {\n  return /*#__PURE__*/_jsxDEV(View, {\n    children: /*#__PURE__*/_jsxDEV(Text, {\n      children: \"ContactScreen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_c4 = ContactScreen;\nexport default AppNavigator;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"AppNavigator\");\n$RefreshReg$(_c2, \"HomeScreen\");\n$RefreshReg$(_c3, \"SettingsScreen\");\n$RefreshReg$(_c4, \"ContactScreen\");","map":{"version":3,"names":["View","Text","TouchableOpacity","React","createBottomTabNavigator","TabBarMinimal","NavigationContainer","ColorModeSwitch","Tab","linking","prefixes","config","screens","Home","works","contact","AppNavigator","headerShown","props","HomeScreen","SettingsScreen","ContactScreen"],"sources":["C:/Users/13093/codestuff/portfolio/src/navigators/AppNavigator.js"],"sourcesContent":["import { View, Text, TouchableOpacity } from \"react-native\";\r\nimport React from \"react\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport TabBarMinimal from \"../components/TabBarMinimal\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport ColorModeSwitch from \"../components/ColorModeSwitch\";\r\n\r\nconst Tab = createBottomTabNavigator();\r\nconst linking = {\r\n  prefixes: [\r\n    \"http://localhost:3000\",\r\n    \"https://localhost:3000\",\r\n    \"https://.*localhost:3000\",\r\n  ],\r\n  config: {\r\n    screens: {\r\n      Home: \"home/\",\r\n      works: \"works/\",\r\n      contact: \"contact/\",\r\n    },\r\n  },\r\n};\r\n\r\nconst AppNavigator = () => {\r\n  return (\r\n    <>\r\n      <ColorModeSwitch />\r\n      <NavigationContainer\r\n        linking={linking}\r\n        fallback={<Text>WHAT DA FUQ MAN FALLLBAAAQQQQ...</Text>}\r\n      >\r\n        <Tab.Navigator\r\n          screenOptions={{\r\n            headerShown: false,\r\n          }}\r\n          tabBar={(props) => <TabBarMinimal {...props} />}\r\n        >\r\n          <Tab.Screen name=\"home\" component={HomeScreen} />\r\n          <Tab.Screen name=\"works\" component={SettingsScreen} />{\" \"}\r\n          <Tab.Screen name=\"contact\" component={ContactScreen} />\r\n        </Tab.Navigator>\r\n      </NavigationContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nconst HomeScreen = () => {\r\n  return (\r\n    <View>\r\n      <Text>HomeScreen</Text>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst SettingsScreen = () => {\r\n  return (\r\n    <View>\r\n      <Text>SettingsScreen</Text>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst ContactScreen = () => {\r\n  return (\r\n    <View>\r\n      <Text>ContactScreen</Text>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default AppNavigator;\r\n"],"mappings":";AAAA,SAASA,IAAI,EAAEC,IAAI,EAAEC,gBAAgB,QAAQ,cAAc;AAC3D,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,OAAOC,aAAa,MAAM,6BAA6B;AACvD,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,OAAOC,eAAe,MAAM,+BAA+B;AAAC;AAAA;AAE5D,MAAMC,GAAG,GAAGJ,wBAAwB,EAAE;AACtC,MAAMK,OAAO,GAAG;EACdC,QAAQ,EAAE,CACR,uBAAuB,EACvB,wBAAwB,EACxB,0BAA0B,CAC3B;EACDC,MAAM,EAAE;IACNC,OAAO,EAAE;MACPC,IAAI,EAAE,OAAO;MACbC,KAAK,EAAE,QAAQ;MACfC,OAAO,EAAE;IACX;EACF;AACF,CAAC;AAED,MAAMC,YAAY,GAAG,MAAM;EACzB,oBACE;IAAA,wBACE,QAAC,eAAe;MAAA;MAAA;MAAA;IAAA,QAAG,eACnB,QAAC,mBAAmB;MAClB,OAAO,EAAEP,OAAQ;MACjB,QAAQ,eAAE,QAAC,IAAI;QAAA,UAAC;MAAgC;QAAA;QAAA;QAAA;MAAA,QAAQ;MAAA,uBAExD,QAAC,GAAG,CAAC,SAAS;QACZ,aAAa,EAAE;UACbQ,WAAW,EAAE;QACf,CAAE;QACF,MAAM,EAAGC,KAAK,iBAAK,QAAC,aAAa;UAAA,GAAKA;QAAK;UAAA;UAAA;UAAA;QAAA,QAAK;QAAA,wBAEhD,QAAC,GAAG,CAAC,MAAM;UAAC,IAAI,EAAC,MAAM;UAAC,SAAS,EAAEC;QAAW;UAAA;UAAA;UAAA;QAAA,QAAG,eACjD,QAAC,GAAG,CAAC,MAAM;UAAC,IAAI,EAAC,OAAO;UAAC,SAAS,EAAEC;QAAe;UAAA;UAAA;UAAA;QAAA,QAAG,EAAC,GAAG,eAC1D,QAAC,GAAG,CAAC,MAAM;UAAC,IAAI,EAAC,SAAS;UAAC,SAAS,EAAEC;QAAc;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA;IACzC;MAAA;MAAA;MAAA;IAAA,QACI;EAAA,gBACrB;AAEP,CAAC;AAAC,KArBIL,YAAY;AAuBlB,MAAMG,UAAU,GAAG,MAAM;EACvB,oBACE,QAAC,IAAI;IAAA,uBACH,QAAC,IAAI;MAAA,UAAC;IAAU;MAAA;MAAA;MAAA;IAAA;EAAO;IAAA;IAAA;IAAA;EAAA,QAClB;AAEX,CAAC;AAAC,MANIA,UAAU;AAQhB,MAAMC,cAAc,GAAG,MAAM;EAC3B,oBACE,QAAC,IAAI;IAAA,uBACH,QAAC,IAAI;MAAA,UAAC;IAAc;MAAA;MAAA;MAAA;IAAA;EAAO;IAAA;IAAA;IAAA;EAAA,QACtB;AAEX,CAAC;AAAC,MANIA,cAAc;AAQpB,MAAMC,aAAa,GAAG,MAAM;EAC1B,oBACE,QAAC,IAAI;IAAA,uBACH,QAAC,IAAI;MAAA,UAAC;IAAa;MAAA;MAAA;MAAA;IAAA;EAAO;IAAA;IAAA;IAAA;EAAA,QACrB;AAEX,CAAC;AAAC,MANIA,aAAa;AAQnB,eAAeL,YAAY;AAAC;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}