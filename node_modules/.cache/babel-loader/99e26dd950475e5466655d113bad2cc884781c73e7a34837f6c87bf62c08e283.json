{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\13093\\\\codestuff\\\\portfolio\\\\src\\\\components\\\\TabBarMinimal.js\",\n  _s = $RefreshSig$();\nimport { Pressable, Text, View, Box, HStack, useColorMode } from \"native-base\";\nimport { useLinkTo } from \"@react-navigation/native\";\nimport { Dimensions } from \"react-native\";\nimport { useSpring, animated, useSpringValue } from \"@react-spring/web\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst width = Dimensions.get(\"window\").width;\nconst height = Dimensions.get(\"window\").height;\nconst barheight = height * 0.2;\nconst TabBarMinimal = _ref => {\n  _s();\n  let {\n    state,\n    descriptors,\n    navigation\n  } = _ref;\n  const linkTo = useLinkTo();\n  const {\n    colorMode,\n    toggleColorMode\n  } = useColorMode();\n  const colorvalue = useSpringValue();\n  const bg = useSpring({\n    background: colorMode === \"light\" ? \"white\" : \"#202023\"\n  });\n  const handleToggle = () => {\n    toggleColorMode();\n    // colorMode === \"light\" ? colorvalue.start(1) : colorvalue.start(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(animated.div, {\n    style: {\n      ...bg,\n      border: \"1px solid black\"\n    },\n    children: /*#__PURE__*/_jsxDEV(HStack, {\n      h: \"12%\",\n      space: width / state.routes.length / 2,\n      justifyContent: \"center\",\n      children: state.routes.map((route, index) => {\n        const {\n          options\n        } = descriptors[route.key];\n        const label = options.tabBarLabel !== undefined ? options.tabBarLabel : options.title !== undefined ? options.title : route.name;\n        const isFocused = state.index === index;\n        const onPress = () => {\n          const event = navigation.emit({\n            type: \"tabPress\",\n            target: route.key,\n            canPreventDefault: true\n          });\n\n          // linkTo('/profile/jane')\n          if (!isFocused && !event.defaultPrevented) {\n            console.log(\"the merge thing\");\n            navigation.navigate({\n              name: route.name,\n              merge: true\n            });\n          }\n        };\n        return /*#__PURE__*/_jsxDEV(Pressable, {\n          accessibilityRole: \"button\",\n          accessibilityState: isFocused ? {\n            selected: true\n          } : {},\n          accessibilityLabel: options.tabBarAccessibilityLabel,\n          onPress: onPress,\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"2xl\",\n            style: {\n              color: isFocused ? \"#673ab7\" : \"#222\"\n            },\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(TabBarMinimal, \"7mcFF5IgsgZdhDshApY8AlSFXzo=\", false, function () {\n  return [useLinkTo, useColorMode, useSpringValue, useSpring];\n});\n_c = TabBarMinimal;\nexport default TabBarMinimal;\nvar _c;\n$RefreshReg$(_c, \"TabBarMinimal\");","map":{"version":3,"names":["Pressable","Text","View","Box","HStack","useColorMode","useLinkTo","Dimensions","useSpring","animated","useSpringValue","width","get","height","barheight","TabBarMinimal","state","descriptors","navigation","linkTo","colorMode","toggleColorMode","colorvalue","bg","background","handleToggle","border","routes","length","map","route","index","options","key","label","tabBarLabel","undefined","title","name","isFocused","onPress","event","emit","type","target","canPreventDefault","defaultPrevented","console","log","navigate","merge","selected","tabBarAccessibilityLabel","color"],"sources":["C:/Users/13093/codestuff/portfolio/src/components/TabBarMinimal.js"],"sourcesContent":["import { Pressable, Text, View, Box, HStack, useColorMode } from \"native-base\";\r\nimport { useLinkTo } from \"@react-navigation/native\";\r\nimport { Dimensions } from \"react-native\";\r\nimport { useSpring, animated, useSpringValue } from \"@react-spring/web\";\r\n\r\nconst width = Dimensions.get(\"window\").width;\r\nconst height = Dimensions.get(\"window\").height;\r\n\r\nconst barheight = height * 0.2;\r\n\r\nconst TabBarMinimal = ({ state, descriptors, navigation }) => {\r\n  const linkTo = useLinkTo();\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n  const colorvalue = useSpringValue();\r\n\r\n  const bg = useSpring({\r\n    background: colorMode === \"light\" ? \"white\" : \"#202023\",\r\n  });\r\n\r\n  const handleToggle = () => {\r\n    toggleColorMode();\r\n    // colorMode === \"light\" ? colorvalue.start(1) : colorvalue.start(0);\r\n  };\r\n  return (\r\n    <animated.div\r\n      style={{\r\n        ...bg,\r\n        border: \"1px solid black\",\r\n      }}\r\n    >\r\n      <HStack\r\n        h={\"12%\"}\r\n        space={width / state.routes.length / 2}\r\n        justifyContent=\"center\"\r\n      >\r\n        {state.routes.map((route, index) => {\r\n          const { options } = descriptors[route.key];\r\n          const label =\r\n            options.tabBarLabel !== undefined\r\n              ? options.tabBarLabel\r\n              : options.title !== undefined\r\n              ? options.title\r\n              : route.name;\r\n\r\n          const isFocused = state.index === index;\r\n\r\n          const onPress = () => {\r\n            const event = navigation.emit({\r\n              type: \"tabPress\",\r\n              target: route.key,\r\n              canPreventDefault: true,\r\n            });\r\n\r\n            // linkTo('/profile/jane')\r\n            if (!isFocused && !event.defaultPrevented) {\r\n              console.log(\"the merge thing\");\r\n              navigation.navigate({ name: route.name, merge: true });\r\n            }\r\n          };\r\n\r\n          return (\r\n            <Pressable\r\n              accessibilityRole=\"button\"\r\n              accessibilityState={isFocused ? { selected: true } : {}}\r\n              accessibilityLabel={options.tabBarAccessibilityLabel}\r\n              onPress={onPress}\r\n            >\r\n              <Text\r\n                fontSize={\"2xl\"}\r\n                style={{ color: isFocused ? \"#673ab7\" : \"#222\" }}\r\n              >\r\n                {label}\r\n              </Text>\r\n            </Pressable>\r\n          );\r\n        })}\r\n      </HStack>\r\n    </animated.div>\r\n  );\r\n};\r\n\r\nexport default TabBarMinimal;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}