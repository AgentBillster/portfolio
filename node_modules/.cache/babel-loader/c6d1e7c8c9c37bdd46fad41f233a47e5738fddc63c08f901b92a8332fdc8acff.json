{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\13093\\\\codestuff\\\\portfolio\\\\src\\\\components\\\\TabBarMinimal.js\",\n  _s = $RefreshSig$();\nimport { useLinkTo } from \"@react-navigation/native\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TabBarMinimal = _ref => {\n  _s();\n  let {\n    state,\n    descriptors,\n    navigation\n  } = _ref;\n  const linkTo = useLinkTo();\n  return /*#__PURE__*/_jsxDEV(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    children: state.routes.map((route, index) => {\n      const {\n        options\n      } = descriptors[route.key];\n      const label = options.tabBarLabel !== undefined ? options.tabBarLabel : options.title !== undefined ? options.title : route.name;\n      const isFocused = state.index === index;\n      const onPress = () => {\n        const event = navigation.emit({\n          type: \"tabPress\",\n          target: route.key,\n          canPreventDefault: true\n        });\n        if (!isFocused && !event.defaultPrevented) {\n          // navigation.navigate({ name: route.name, merge: true });\n          linkTo(\"/profile/jane\", {\n            merge: true\n          });\n        }\n      };\n      const onLongPress = () => {\n        navigation.emit({\n          type: \"tabLongPress\",\n          target: route.key\n        });\n      };\n      return /*#__PURE__*/_jsxDEV(TouchableOpacity, {\n        accessibilityRole: \"button\",\n        accessibilityState: isFocused ? {\n          selected: true\n        } : {},\n        accessibilityLabel: options.tabBarAccessibilityLabel,\n        testID: options.tabBarTestID,\n        onPress: onPress,\n        onLongPress: onLongPress,\n        style: {\n          flex: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          style: {\n            color: isFocused ? \"#673ab7\" : \"#222\"\n          },\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_s(TabBarMinimal, \"UhKF6ghtic0nXVxz9uNvUN3Yt2I=\", false, function () {\n  return [useLinkTo];\n});\n_c = TabBarMinimal;\nexport default TabBarMinimal;\nvar _c;\n$RefreshReg$(_c, \"TabBarMinimal\");","map":{"version":3,"names":["useLinkTo","TabBarMinimal","state","descriptors","navigation","linkTo","flexDirection","routes","map","route","index","options","key","label","tabBarLabel","undefined","title","name","isFocused","onPress","event","emit","type","target","canPreventDefault","defaultPrevented","merge","onLongPress","selected","tabBarAccessibilityLabel","tabBarTestID","flex","color"],"sources":["C:/Users/13093/codestuff/portfolio/src/components/TabBarMinimal.js"],"sourcesContent":["import { useLinkTo } from \"@react-navigation/native\";\r\n\r\nconst TabBarMinimal = ({ state, descriptors, navigation }) => {\r\n  const linkTo = useLinkTo();\r\n\r\n  return (\r\n    <View style={{ flexDirection: \"row\" }}>\r\n      {state.routes.map((route, index) => {\r\n        const { options } = descriptors[route.key];\r\n        const label =\r\n          options.tabBarLabel !== undefined\r\n            ? options.tabBarLabel\r\n            : options.title !== undefined\r\n            ? options.title\r\n            : route.name;\r\n\r\n        const isFocused = state.index === index;\r\n\r\n        const onPress = () => {\r\n          const event = navigation.emit({\r\n            type: \"tabPress\",\r\n            target: route.key,\r\n            canPreventDefault: true,\r\n          });\r\n          if (!isFocused && !event.defaultPrevented) {\r\n            // navigation.navigate({ name: route.name, merge: true });\r\n            linkTo(\"/profile/jane\", { merge: true });\r\n          }\r\n        };\r\n\r\n        const onLongPress = () => {\r\n          navigation.emit({\r\n            type: \"tabLongPress\",\r\n            target: route.key,\r\n          });\r\n        };\r\n\r\n        return (\r\n          <TouchableOpacity\r\n            accessibilityRole=\"button\"\r\n            accessibilityState={isFocused ? { selected: true } : {}}\r\n            accessibilityLabel={options.tabBarAccessibilityLabel}\r\n            testID={options.tabBarTestID}\r\n            onPress={onPress}\r\n            onLongPress={onLongPress}\r\n            style={{ flex: 1 }}\r\n          >\r\n            <Text style={{ color: isFocused ? \"#673ab7\" : \"#222\" }}>\r\n              {label}\r\n            </Text>\r\n          </TouchableOpacity>\r\n        );\r\n      })}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default TabBarMinimal;\r\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,0BAA0B;AAAC;AAErD,MAAMC,aAAa,GAAG,QAAwC;EAAA;EAAA,IAAvC;IAAEC,KAAK;IAAEC,WAAW;IAAEC;EAAW,CAAC;EACvD,MAAMC,MAAM,GAAGL,SAAS,EAAE;EAE1B,oBACE,QAAC,IAAI;IAAC,KAAK,EAAE;MAAEM,aAAa,EAAE;IAAM,CAAE;IAAA,UACnCJ,KAAK,CAACK,MAAM,CAACC,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;MAClC,MAAM;QAAEC;MAAQ,CAAC,GAAGR,WAAW,CAACM,KAAK,CAACG,GAAG,CAAC;MAC1C,MAAMC,KAAK,GACTF,OAAO,CAACG,WAAW,KAAKC,SAAS,GAC7BJ,OAAO,CAACG,WAAW,GACnBH,OAAO,CAACK,KAAK,KAAKD,SAAS,GAC3BJ,OAAO,CAACK,KAAK,GACbP,KAAK,CAACQ,IAAI;MAEhB,MAAMC,SAAS,GAAGhB,KAAK,CAACQ,KAAK,KAAKA,KAAK;MAEvC,MAAMS,OAAO,GAAG,MAAM;QACpB,MAAMC,KAAK,GAAGhB,UAAU,CAACiB,IAAI,CAAC;UAC5BC,IAAI,EAAE,UAAU;UAChBC,MAAM,EAAEd,KAAK,CAACG,GAAG;UACjBY,iBAAiB,EAAE;QACrB,CAAC,CAAC;QACF,IAAI,CAACN,SAAS,IAAI,CAACE,KAAK,CAACK,gBAAgB,EAAE;UACzC;UACApB,MAAM,CAAC,eAAe,EAAE;YAAEqB,KAAK,EAAE;UAAK,CAAC,CAAC;QAC1C;MACF,CAAC;MAED,MAAMC,WAAW,GAAG,MAAM;QACxBvB,UAAU,CAACiB,IAAI,CAAC;UACdC,IAAI,EAAE,cAAc;UACpBC,MAAM,EAAEd,KAAK,CAACG;QAChB,CAAC,CAAC;MACJ,CAAC;MAED,oBACE,QAAC,gBAAgB;QACf,iBAAiB,EAAC,QAAQ;QAC1B,kBAAkB,EAAEM,SAAS,GAAG;UAAEU,QAAQ,EAAE;QAAK,CAAC,GAAG,CAAC,CAAE;QACxD,kBAAkB,EAAEjB,OAAO,CAACkB,wBAAyB;QACrD,MAAM,EAAElB,OAAO,CAACmB,YAAa;QAC7B,OAAO,EAAEX,OAAQ;QACjB,WAAW,EAAEQ,WAAY;QACzB,KAAK,EAAE;UAAEI,IAAI,EAAE;QAAE,CAAE;QAAA,uBAEnB,QAAC,IAAI;UAAC,KAAK,EAAE;YAAEC,KAAK,EAAEd,SAAS,GAAG,SAAS,GAAG;UAAO,CAAE;UAAA,UACpDL;QAAK;UAAA;UAAA;UAAA;QAAA;MACD;QAAA;QAAA;QAAA;MAAA,QACU;IAEvB,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QACG;AAEX,CAAC;AAAC,GArDIZ,aAAa;EAAA,QACFD,SAAS;AAAA;AAAA,KADpBC,aAAa;AAuDnB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}