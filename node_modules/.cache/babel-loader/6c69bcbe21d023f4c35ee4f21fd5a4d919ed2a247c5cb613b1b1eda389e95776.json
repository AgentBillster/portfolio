{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { memo, forwardRef } from 'react';\nimport Box from '../../primitives/Box';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport isNil from 'lodash.isnil';\nimport { default as Avatar } from './Avatar';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps'; // Todo: Try using HStack instead\n\nconst getAvatarGroupChildren = (children, space, max, _hiddenAvatarPlaceholder, _avatar, isVertical) => {\n  let childrenArray = React.Children.toArray(children);\n  let plusAvatars = 0;\n  if (!isNil(max) && max < childrenArray.length && max > 0) {\n    plusAvatars = childrenArray.length - max;\n    childrenArray = childrenArray.slice(0, max);\n  }\n  const spacingProps = {\n    ml: isVertical ? 0 : space,\n    mt: isVertical ? space : 0\n  };\n  return [plusAvatars > 0 ? /*#__PURE__*/React.createElement(Avatar, _extends({\n    key: \"avatar-group-wrapper\"\n  }, spacingProps, _avatar, _hiddenAvatarPlaceholder), '+ ' + plusAvatars) : null, React.Children.map(childrenArray.reverse(), (child, index) => {\n    return /*#__PURE__*/React.cloneElement(child, {\n      key: \"avatar-group-child-\".concat(index),\n      ..._avatar,\n      ...spacingProps,\n      ...child.props\n    }, child.props.children);\n  })];\n};\nconst AvatarGroup = (_ref, ref) => {\n  let {\n    children,\n    ...props\n  } = _ref;\n  const {\n    max,\n    _avatar,\n    _hiddenAvatarPlaceholder,\n    isVertical,\n    space,\n    ...resolvedProps\n  } = usePropsResolution('AvatarGroup', props); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(Box, _extends({}, resolvedProps, {\n    ref: ref\n  }), getAvatarGroupChildren(children, space, max, _hiddenAvatarPlaceholder, _avatar, isVertical));\n};\nexport default /*#__PURE__*/memo( /*#__PURE__*/forwardRef(AvatarGroup));","map":{"version":3,"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,UAAtB,QAAwC,OAAxC;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,SAASC,kBAAT,QAAmC,8BAAnC;AACA,OAAOC,KAAP,MAAkB,cAAlB;AAEA,SAASC,OAAO,IAAIC,MAApB,QAAkC,UAAlC;AACA,SAASC,qBAAT,QAAsC,sCAAtC,C,CAEA;;AAEA,MAAMC,sBAAsB,GAAG,CAC7BC,QAD6B,EAE7BC,KAF6B,EAG7BC,GAH6B,EAI7BC,wBAJ6B,EAK7BC,OAL6B,EAM7BC,UAN6B,KAO1B;EACH,IAAIC,aAAkB,GAAGhB,KAAK,CAACiB,QAAN,CAAeC,OAAf,CAAuBR,QAAvB,CAAzB;EACA,IAAIS,WAAmB,GAAG,CAA1B;EACA,IAAI,CAACd,KAAK,CAACO,GAAD,CAAN,IAAeA,GAAG,GAAGI,aAAa,CAACI,MAAnC,IAA6CR,GAAG,GAAG,CAAvD,EAA0D;IACxDO,WAAW,GAAGH,aAAa,CAACI,MAAd,GAAuBR,GAArC;IACAI,aAAa,GAAGA,aAAa,CAACK,KAAd,CAAoB,CAApB,EAAuBT,GAAvB,CAAhB;EACD;EACD,MAAMU,YAAY,GAAG;IACnBC,EAAE,EAAER,UAAU,GAAG,CAAH,GAAOJ,KADF;IAEnBa,EAAE,EAAET,UAAU,GAAGJ,KAAH,GAAW;EAFN,CAArB;EAIA,OAAO,CACLQ,WAAW,GAAG,CAAd,gBACEnB,oBAACO,MAAD;IACEkB,GAAG,EAAC;EADN,GAEMH,YAFN,EAGMR,OAHN,EAIMD,wBAJN,GAMG,OAAOM,WANV,CADF,GASI,IAVC,EAWLnB,KAAK,CAACiB,QAAN,CAAeS,GAAf,CAAmBV,aAAa,CAACW,OAAd,EAAnB,EAA4C,CAACC,KAAD,EAAaC,KAAb,KAA+B;IACzE,oBAAO7B,KAAK,CAAC8B,YAAN,CACLF,KADK,EAEL;MACEH,GAAG,+BAAwBI,KAAxB,CADL;MAEE,GAAGf,OAFL;MAGE,GAAGQ,YAHL;MAIE,GAAGM,KAAK,CAACG;IAJX,CAFK,EAQLH,KAAK,CAACG,KAAN,CAAYrB,QARP,CAAP;EAUD,CAXD,CAXK,CAAP;AAwBD,CA1CD;AA4CA,MAAMsB,WAAW,GAAG,OAA4CC,GAA5C,KAAyD;EAAA,IAAxD;IAAEvB,QAAF;IAAY,GAAGqB;EAAf,CAAD;EAClB,MAAM;IACJnB,GADI;IAEJE,OAFI;IAGJD,wBAHI;IAIJE,UAJI;IAKJJ,KALI;IAMJ,GAAGuB;EANC,IAOF9B,kBAAkB,CAAC,aAAD,EAAgB2B,KAAhB,CAPtB,CAD2E,CAU3E;;EACA,IAAIvB,qBAAqB,CAACuB,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;EACD,oBACE/B,oBAACG,GAAD,eAAS+B,aAAT;IAAwBD,GAAG,EAAEA;EAA7B,IACGxB,sBAAsB,CACrBC,QADqB,EAErBC,KAFqB,EAGrBC,GAHqB,EAIrBC,wBAJqB,EAKrBC,OALqB,EAMrBC,UANqB,CADzB,CADF;AAYD,CA1BD;AA4BA,4BAAed,IAAI,eAACC,UAAU,CAAC8B,WAAD,CAAX,CAAnB","names":["React","memo","forwardRef","Box","usePropsResolution","isNil","default","Avatar","useHasResponsiveProps","getAvatarGroupChildren","children","space","max","_hiddenAvatarPlaceholder","_avatar","isVertical","childrenArray","Children","toArray","plusAvatars","length","slice","spacingProps","ml","mt","key","map","reverse","child","index","cloneElement","props","AvatarGroup","ref","resolvedProps"],"sources":["C:\\Users\\13093\\codestuff\\portfolio\\node_modules\\native-base\\lib\\module\\components\\composites\\Avatar\\Group.tsx"],"sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Box from '../../primitives/Box';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport isNil from 'lodash.isnil';\nimport type { IAvatarGroupProps } from './types';\nimport { default as Avatar } from './Avatar';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\n// Todo: Try using HStack instead\n\nconst getAvatarGroupChildren = (\n  children?: JSX.Element[] | JSX.Element,\n  space?: number,\n  max?: number,\n  _hiddenAvatarPlaceholder?: Object,\n  _avatar?: any,\n  isVertical?: Boolean\n) => {\n  let childrenArray: any = React.Children.toArray(children);\n  let plusAvatars: number = 0;\n  if (!isNil(max) && max < childrenArray.length && max > 0) {\n    plusAvatars = childrenArray.length - max;\n    childrenArray = childrenArray.slice(0, max);\n  }\n  const spacingProps = {\n    ml: isVertical ? 0 : space,\n    mt: isVertical ? space : 0,\n  };\n  return [\n    plusAvatars > 0 ? (\n      <Avatar\n        key=\"avatar-group-wrapper\"\n        {...spacingProps}\n        {..._avatar}\n        {..._hiddenAvatarPlaceholder}\n      >\n        {'+ ' + plusAvatars}\n      </Avatar>\n    ) : null,\n    React.Children.map(childrenArray.reverse(), (child: any, index: number) => {\n      return React.cloneElement(\n        child,\n        {\n          key: `avatar-group-child-${index}`,\n          ..._avatar,\n          ...spacingProps,\n          ...child.props,\n        },\n        child.props.children\n      );\n    }),\n  ];\n};\n\nconst AvatarGroup = ({ children, ...props }: IAvatarGroupProps, ref: any) => {\n  const {\n    max,\n    _avatar,\n    _hiddenAvatarPlaceholder,\n    isVertical,\n    space,\n    ...resolvedProps\n  } = usePropsResolution('AvatarGroup', props);\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Box {...resolvedProps} ref={ref}>\n      {getAvatarGroupChildren(\n        children,\n        space,\n        max,\n        _hiddenAvatarPlaceholder,\n        _avatar,\n        isVertical\n      )}\n    </Box>\n  );\n};\n\nexport default memo(forwardRef(AvatarGroup));\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}