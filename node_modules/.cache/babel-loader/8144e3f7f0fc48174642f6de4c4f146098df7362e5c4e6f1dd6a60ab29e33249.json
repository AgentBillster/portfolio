{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\13093\\\\codestuff\\\\portfolio\\\\src\\\\screens\\\\HomeScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useRef } from \"react\";\nimport { Box, Center, Container, Divider, Text, VStack } from \"native-base\";\nimport { ScrollView, Dimensions } from \"react-native\";\nimport { useSpring, animated, to } from \"@react-spring/web\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst width = Dimensions.get(\"window\").width;\nconst height = Dimensions.get(\"window\").height;\nconst itemHeight = height / 5;\nconst HomeScreen = () => {\n  _s();\n  const scrollRef = useRef(null);\n  const handleScroll = event => {\n    const {\n      contentOffset\n    } = event.nativeEvent;\n    const scrollPosition = contentOffset.y;\n\n    // Get the current list of items\n    const items = scrollRef.current.getNode().children[0].children;\n\n    // Iterate through each item\n    for (let i = 0; i < items.length; i++) {\n      // Get the position of the item\n      const itemPosition = items[i].offsetTop;\n\n      // Calculate the item's position in relation to the screen\n      const itemScreenPosition = itemPosition - scrollPosition;\n\n      // Only animate the item if it is below 75% of the screen\n      if (itemScreenPosition > height * 0.75) {\n        // Use the to function to animate the opacity\n        items[i].style.opacity = to([itemScreenPosition], [1, 0], {\n          clamp: true\n        });\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ScrollView, {\n    ref: scrollRef,\n    scrollEventThrottle: 16,\n    showsVerticalScrollIndicator: false,\n    onScroll: handleScroll,\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      w: \"600\",\n      children: [...Array(6).keys()].map((item, index) => /*#__PURE__*/_jsxDEV(animated.div, {\n        style: {\n          height: itemHeight,\n          color: \"black\"\n        },\n        children: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(HomeScreen, \"rUl6RJdP9XfufN21BrtKqIOri0o=\");\n_c = HomeScreen;\nexport default HomeScreen;\nvar _c;\n$RefreshReg$(_c, \"HomeScreen\");","map":{"version":3,"names":["React","useRef","Box","Center","Container","Divider","Text","VStack","ScrollView","Dimensions","useSpring","animated","to","width","get","height","itemHeight","HomeScreen","scrollRef","handleScroll","event","contentOffset","nativeEvent","scrollPosition","y","items","current","getNode","children","i","length","itemPosition","offsetTop","itemScreenPosition","style","opacity","clamp","Array","keys","map","item","index","color"],"sources":["C:/Users/13093/codestuff/portfolio/src/screens/HomeScreen.js"],"sourcesContent":["import React, { useRef } from \"react\";\r\nimport { Box, Center, Container, Divider, Text, VStack } from \"native-base\";\r\nimport { ScrollView, Dimensions } from \"react-native\";\r\nimport { useSpring, animated, to } from \"@react-spring/web\";\r\n\r\nconst width = Dimensions.get(\"window\").width;\r\nconst height = Dimensions.get(\"window\").height;\r\n\r\nconst itemHeight = height / 5;\r\n\r\nconst HomeScreen = () => {\r\n  const scrollRef = useRef(null);\r\n\r\n  const handleScroll = (event) => {\r\n    const { contentOffset } = event.nativeEvent;\r\n    const scrollPosition = contentOffset.y;\r\n\r\n    // Get the current list of items\r\n    const items = scrollRef.current.getNode().children[0].children;\r\n\r\n    // Iterate through each item\r\n    for (let i = 0; i < items.length; i++) {\r\n      // Get the position of the item\r\n      const itemPosition = items[i].offsetTop;\r\n\r\n      // Calculate the item's position in relation to the screen\r\n      const itemScreenPosition = itemPosition - scrollPosition;\r\n\r\n      // Only animate the item if it is below 75% of the screen\r\n      if (itemScreenPosition > height * 0.75) {\r\n        // Use the to function to animate the opacity\r\n        items[i].style.opacity = to([itemScreenPosition], [1, 0], {\r\n          clamp: true,\r\n        });\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <ScrollView\r\n      ref={scrollRef}\r\n      scrollEventThrottle={16}\r\n      showsVerticalScrollIndicator={false}\r\n      onScroll={handleScroll}\r\n    >\r\n      <VStack w=\"600\">\r\n        {[...Array(6).keys()].map((item, index) => (\r\n          <animated.div\r\n            style={{\r\n              height: itemHeight,\r\n              color: \"black\",\r\n            }}\r\n          >\r\n            Lorem Ipsum is simply dummy text of the printing and typesetting\r\n            industry. Lorem Ipsum has been the industry's standard dummy text\r\n          </animated.div>\r\n        ))}\r\n      </VStack>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,SAASC,GAAG,EAAEC,MAAM,EAAEC,SAAS,EAAEC,OAAO,EAAEC,IAAI,EAAEC,MAAM,QAAQ,aAAa;AAC3E,SAASC,UAAU,EAAEC,UAAU,QAAQ,cAAc;AACrD,SAASC,SAAS,EAAEC,QAAQ,EAAEC,EAAE,QAAQ,mBAAmB;AAAC;AAE5D,MAAMC,KAAK,GAAGJ,UAAU,CAACK,GAAG,CAAC,QAAQ,CAAC,CAACD,KAAK;AAC5C,MAAME,MAAM,GAAGN,UAAU,CAACK,GAAG,CAAC,QAAQ,CAAC,CAACC,MAAM;AAE9C,MAAMC,UAAU,GAAGD,MAAM,GAAG,CAAC;AAE7B,MAAME,UAAU,GAAG,MAAM;EAAA;EACvB,MAAMC,SAAS,GAAGjB,MAAM,CAAC,IAAI,CAAC;EAE9B,MAAMkB,YAAY,GAAIC,KAAK,IAAK;IAC9B,MAAM;MAAEC;IAAc,CAAC,GAAGD,KAAK,CAACE,WAAW;IAC3C,MAAMC,cAAc,GAAGF,aAAa,CAACG,CAAC;;IAEtC;IACA,MAAMC,KAAK,GAAGP,SAAS,CAACQ,OAAO,CAACC,OAAO,EAAE,CAACC,QAAQ,CAAC,CAAC,CAAC,CAACA,QAAQ;;IAE9D;IACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,KAAK,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;MACrC;MACA,MAAME,YAAY,GAAGN,KAAK,CAACI,CAAC,CAAC,CAACG,SAAS;;MAEvC;MACA,MAAMC,kBAAkB,GAAGF,YAAY,GAAGR,cAAc;;MAExD;MACA,IAAIU,kBAAkB,GAAGlB,MAAM,GAAG,IAAI,EAAE;QACtC;QACAU,KAAK,CAACI,CAAC,CAAC,CAACK,KAAK,CAACC,OAAO,GAAGvB,EAAE,CAAC,CAACqB,kBAAkB,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;UACxDG,KAAK,EAAE;QACT,CAAC,CAAC;MACJ;IACF;EACF,CAAC;EACD,oBACE,QAAC,UAAU;IACT,GAAG,EAAElB,SAAU;IACf,mBAAmB,EAAE,EAAG;IACxB,4BAA4B,EAAE,KAAM;IACpC,QAAQ,EAAEC,YAAa;IAAA,uBAEvB,QAAC,MAAM;MAAC,CAAC,EAAC,KAAK;MAAA,UACZ,CAAC,GAAGkB,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,EAAE,CAAC,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACpC,QAAC,QAAQ,CAAC,GAAG;QACX,KAAK,EAAE;UACL1B,MAAM,EAAEC,UAAU;UAClB0B,KAAK,EAAE;QACT,CAAE;QAAA,UACH;MAGD;QAAA;QAAA;QAAA;MAAA,QACD;IAAC;MAAA;MAAA;MAAA;IAAA;EACK;IAAA;IAAA;IAAA;EAAA,QACE;AAEjB,CAAC;AAAC,GAjDIzB,UAAU;AAAA,KAAVA,UAAU;AAmDhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}