{"ast":null,"code":"import { useEffect, useRef } from 'react';\nimport { initialUpdaterRun } from '../animation';\nimport { makeMutable, startMapper, stopMapper } from '../core';\nexport function useDerivedValue(processor, dependencies) {\n  var _a;\n  const initRef = useRef(null);\n  const inputs = Object.values((_a = processor._closure) !== null && _a !== void 0 ? _a : {});\n  // build dependencies\n  if (dependencies === undefined) {\n    dependencies = [...inputs, processor.__workletHash];\n  } else {\n    dependencies.push(processor.__workletHash);\n  }\n  if (initRef.current === null) {\n    initRef.current = makeMutable(initialUpdaterRun(processor));\n  }\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const sharedValue = initRef.current;\n  useEffect(() => {\n    const fun = () => {\n      'worklet';\n\n      sharedValue.value = processor();\n    };\n    const mapperId = startMapper(fun, inputs, [sharedValue]);\n    return () => {\n      stopMapper(mapperId);\n    };\n  }, dependencies);\n  useEffect(() => {\n    return () => {\n      initRef.current = null;\n    };\n  }, []);\n  return sharedValue;\n}","map":{"version":3,"names":["useEffect","useRef","initialUpdaterRun","makeMutable","startMapper","stopMapper","useDerivedValue","processor","dependencies","_a","initRef","inputs","Object","values","_closure","undefined","__workletHash","push","current","sharedValue","fun","value","mapperId"],"sources":["C:/Users/13093/codestuff/portfolio/node_modules/react-native-reanimated/lib/reanimated2/hook/useDerivedValue.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\nimport { initialUpdaterRun } from '../animation';\nimport { makeMutable, startMapper, stopMapper } from '../core';\nexport function useDerivedValue(processor, dependencies) {\n    var _a;\n    const initRef = useRef(null);\n    const inputs = Object.values((_a = processor._closure) !== null && _a !== void 0 ? _a : {});\n    // build dependencies\n    if (dependencies === undefined) {\n        dependencies = [...inputs, processor.__workletHash];\n    }\n    else {\n        dependencies.push(processor.__workletHash);\n    }\n    if (initRef.current === null) {\n        initRef.current = makeMutable(initialUpdaterRun(processor));\n    }\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const sharedValue = initRef.current;\n    useEffect(() => {\n        const fun = () => {\n            'worklet';\n            sharedValue.value = processor();\n        };\n        const mapperId = startMapper(fun, inputs, [sharedValue]);\n        return () => {\n            stopMapper(mapperId);\n        };\n    }, dependencies);\n    useEffect(() => {\n        return () => {\n            initRef.current = null;\n        };\n    }, []);\n    return sharedValue;\n}\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,SAASC,iBAAiB,QAAQ,cAAc;AAChD,SAASC,WAAW,EAAEC,WAAW,EAAEC,UAAU,QAAQ,SAAS;AAC9D,OAAO,SAASC,eAAe,CAACC,SAAS,EAAEC,YAAY,EAAE;EACrD,IAAIC,EAAE;EACN,MAAMC,OAAO,GAAGT,MAAM,CAAC,IAAI,CAAC;EAC5B,MAAMU,MAAM,GAAGC,MAAM,CAACC,MAAM,CAAC,CAACJ,EAAE,GAAGF,SAAS,CAACO,QAAQ,MAAM,IAAI,IAAIL,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,CAAC,CAAC,CAAC;EAC3F;EACA,IAAID,YAAY,KAAKO,SAAS,EAAE;IAC5BP,YAAY,GAAG,CAAC,GAAGG,MAAM,EAAEJ,SAAS,CAACS,aAAa,CAAC;EACvD,CAAC,MACI;IACDR,YAAY,CAACS,IAAI,CAACV,SAAS,CAACS,aAAa,CAAC;EAC9C;EACA,IAAIN,OAAO,CAACQ,OAAO,KAAK,IAAI,EAAE;IAC1BR,OAAO,CAACQ,OAAO,GAAGf,WAAW,CAACD,iBAAiB,CAACK,SAAS,CAAC,CAAC;EAC/D;EACA;EACA,MAAMY,WAAW,GAAGT,OAAO,CAACQ,OAAO;EACnClB,SAAS,CAAC,MAAM;IACZ,MAAMoB,GAAG,GAAG,MAAM;MACd,SAAS;;MACTD,WAAW,CAACE,KAAK,GAAGd,SAAS,EAAE;IACnC,CAAC;IACD,MAAMe,QAAQ,GAAGlB,WAAW,CAACgB,GAAG,EAAET,MAAM,EAAE,CAACQ,WAAW,CAAC,CAAC;IACxD,OAAO,MAAM;MACTd,UAAU,CAACiB,QAAQ,CAAC;IACxB,CAAC;EACL,CAAC,EAAEd,YAAY,CAAC;EAChBR,SAAS,CAAC,MAAM;IACZ,OAAO,MAAM;MACTU,OAAO,CAACQ,OAAO,GAAG,IAAI;IAC1B,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EACN,OAAOC,WAAW;AACtB"},"metadata":{},"sourceType":"module","externalDependencies":[]}