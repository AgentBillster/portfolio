{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\13093\\\\codestuff\\\\portfolio\\\\src\\\\screens\\\\HomeScreen.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Box, Center, Container, Divider, Text, VStack, ScrollView } from \"native-base\";\nimport { useSpring, animated, useSpringValue } from \"react-spring\";\nimport { Dimensions } from \"react-native\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst width = Dimensions.get(\"window\").width;\nconst height = Dimensions.get(\"window\").height;\nconst itemHeight = height / 5;\nconst HomeScreen = () => {\n  _s();\n  const [isVisible, setIsVisible] = useState(false);\n  const [itemHeight, setItemHeight] = useState(0);\n  const opacity = useSpring({\n    opacity: isVisible ? 1 : 0\n  });\n  const handleScroll = event => {\n    // Get the current scroll position\n    const scrollPosition = event.nativeEvent.contentOffset.y;\n\n    // Calculate the threshold for when the item should start animating\n    const threshold = 0.75 * itemHeight;\n\n    // Check if the scroll position is greater than the threshold\n    if (scrollPosition > threshold) {\n      setIsVisible(true);\n    } else {\n      setIsVisible(false);\n    }\n  };\n  useEffect(() => {\n    // Get the height of the item to calculate the threshold\n    const item = document.getElementById(\"item\");\n    setItemHeight(item.clientHeight);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ScrollView, {\n    scrollEventThrottle: 16,\n    showsVerticalScrollIndicator: false,\n    onScroll: handleScroll,\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      w: \"600\",\n      children: [...Array(6).keys()].map((item, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(animated.div, {\n          id: \"item\",\n          style: {\n            height: itemHeight,\n            color: \"black\",\n            opacity: opacity.opacity\n          },\n          children: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, void 0, false))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(HomeScreen, \"ds5vnQbF8/NppTh18kVkP7osIrk=\", false, function () {\n  return [useSpring];\n});\n_c = HomeScreen;\nexport default HomeScreen;\nvar _c;\n$RefreshReg$(_c, \"HomeScreen\");","map":{"version":3,"names":["React","Box","Center","Container","Divider","Text","VStack","ScrollView","useSpring","animated","useSpringValue","Dimensions","width","get","height","itemHeight","HomeScreen","isVisible","setIsVisible","useState","setItemHeight","opacity","handleScroll","event","scrollPosition","nativeEvent","contentOffset","y","threshold","useEffect","item","document","getElementById","clientHeight","Array","keys","map","index","color"],"sources":["C:/Users/13093/codestuff/portfolio/src/screens/HomeScreen.js"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n  Box,\r\n  Center,\r\n  Container,\r\n  Divider,\r\n  Text,\r\n  VStack,\r\n  ScrollView,\r\n} from \"native-base\";\r\nimport { useSpring, animated, useSpringValue } from \"react-spring\";\r\nimport { Dimensions } from \"react-native\";\r\n\r\nconst width = Dimensions.get(\"window\").width;\r\nconst height = Dimensions.get(\"window\").height;\r\n\r\nconst itemHeight = height / 5;\r\n\r\nconst HomeScreen = () => {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  const [itemHeight, setItemHeight] = useState(0);\r\n  const opacity = useSpring({\r\n    opacity: isVisible ? 1 : 0,\r\n  });\r\n\r\n  const handleScroll = (event) => {\r\n    // Get the current scroll position\r\n    const scrollPosition = event.nativeEvent.contentOffset.y;\r\n\r\n    // Calculate the threshold for when the item should start animating\r\n    const threshold = 0.75 * itemHeight;\r\n\r\n    // Check if the scroll position is greater than the threshold\r\n    if (scrollPosition > threshold) {\r\n      setIsVisible(true);\r\n    } else {\r\n      setIsVisible(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Get the height of the item to calculate the threshold\r\n    const item = document.getElementById(\"item\");\r\n    setItemHeight(item.clientHeight);\r\n  }, []);\r\n\r\n  return (\r\n    <ScrollView\r\n      scrollEventThrottle={16}\r\n      showsVerticalScrollIndicator={false}\r\n      onScroll={handleScroll}\r\n    >\r\n      <VStack w=\"600\">\r\n        {[...Array(6).keys()].map((item, index) => (\r\n          <>\r\n            <animated.div\r\n              id=\"item\"\r\n              style={{\r\n                height: itemHeight,\r\n                color: \"black\",\r\n                opacity: opacity.opacity,\r\n              }}\r\n            >\r\n              Lorem Ipsum is simply dummy text of the printing and typesetting\r\n              industry. Lorem Ipsum has been the industry's standard dummy text\r\n            </animated.div>\r\n          </>\r\n        ))}\r\n      </VStack>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,GAAG,EACHC,MAAM,EACNC,SAAS,EACTC,OAAO,EACPC,IAAI,EACJC,MAAM,EACNC,UAAU,QACL,aAAa;AACpB,SAASC,SAAS,EAAEC,QAAQ,EAAEC,cAAc,QAAQ,cAAc;AAClE,SAASC,UAAU,QAAQ,cAAc;AAAC;AAAA;AAE1C,MAAMC,KAAK,GAAGD,UAAU,CAACE,GAAG,CAAC,QAAQ,CAAC,CAACD,KAAK;AAC5C,MAAME,MAAM,GAAGH,UAAU,CAACE,GAAG,CAAC,QAAQ,CAAC,CAACC,MAAM;AAE9C,MAAMC,UAAU,GAAGD,MAAM,GAAG,CAAC;AAE7B,MAAME,UAAU,GAAG,MAAM;EAAA;EACvB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGC,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACJ,UAAU,EAAEK,aAAa,CAAC,GAAGD,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAME,OAAO,GAAGb,SAAS,CAAC;IACxBa,OAAO,EAAEJ,SAAS,GAAG,CAAC,GAAG;EAC3B,CAAC,CAAC;EAEF,MAAMK,YAAY,GAAIC,KAAK,IAAK;IAC9B;IACA,MAAMC,cAAc,GAAGD,KAAK,CAACE,WAAW,CAACC,aAAa,CAACC,CAAC;;IAExD;IACA,MAAMC,SAAS,GAAG,IAAI,GAAGb,UAAU;;IAEnC;IACA,IAAIS,cAAc,GAAGI,SAAS,EAAE;MAC9BV,YAAY,CAAC,IAAI,CAAC;IACpB,CAAC,MAAM;MACLA,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAEDW,SAAS,CAAC,MAAM;IACd;IACA,MAAMC,IAAI,GAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;IAC5CZ,aAAa,CAACU,IAAI,CAACG,YAAY,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE,QAAC,UAAU;IACT,mBAAmB,EAAE,EAAG;IACxB,4BAA4B,EAAE,KAAM;IACpC,QAAQ,EAAEX,YAAa;IAAA,uBAEvB,QAAC,MAAM;MAAC,CAAC,EAAC,KAAK;MAAA,UACZ,CAAC,GAAGY,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,EAAE,CAAC,CAACC,GAAG,CAAC,CAACN,IAAI,EAAEO,KAAK,kBACpC;QAAA,uBACE,QAAC,QAAQ,CAAC,GAAG;UACX,EAAE,EAAC,MAAM;UACT,KAAK,EAAE;YACLvB,MAAM,EAAEC,UAAU;YAClBuB,KAAK,EAAE,OAAO;YACdjB,OAAO,EAAEA,OAAO,CAACA;UACnB,CAAE;UAAA,UACH;QAGD;UAAA;UAAA;UAAA;QAAA;MAAe,iBAElB;IAAC;MAAA;MAAA;MAAA;IAAA;EACK;IAAA;IAAA;IAAA;EAAA,QACE;AAEjB,CAAC;AAAC,GArDIL,UAAU;EAAA,QAGER,SAAS;AAAA;AAAA,KAHrBQ,UAAU;AAuDhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}