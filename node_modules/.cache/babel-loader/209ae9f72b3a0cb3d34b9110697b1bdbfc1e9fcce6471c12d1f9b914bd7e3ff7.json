{"ast":null,"code":"import { withTiming, withSpring } from '../../animation';\nimport { BaseAnimationBuilder } from './BaseAnimationBuilder';\nexport class ComplexAnimationBuilder extends BaseAnimationBuilder {\n  static easing(easingFunction) {\n    const instance = this.createInstance();\n    return instance.easing(easingFunction);\n  }\n  easing(easingFunction) {\n    this.easingV = easingFunction;\n    return this;\n  }\n  static rotate(degree) {\n    const instance = this.createInstance();\n    return instance.rotate(degree);\n  }\n  rotate(degree) {\n    this.rotateV = degree;\n    return this;\n  }\n  static springify() {\n    const instance = this.createInstance();\n    return instance.springify();\n  }\n  springify() {\n    this.type = withSpring;\n    return this;\n  }\n  static damping(damping) {\n    const instance = this.createInstance();\n    return instance.damping(damping);\n  }\n  damping(damping) {\n    this.dampingV = damping;\n    return this;\n  }\n  static mass(mass) {\n    const instance = this.createInstance();\n    return instance.mass(mass);\n  }\n  mass(mass) {\n    this.massV = mass;\n    return this;\n  }\n  static stiffness(stiffness) {\n    const instance = this.createInstance();\n    return instance.stiffness(stiffness);\n  }\n  stiffness(stiffness) {\n    this.stiffnessV = stiffness;\n    return this;\n  }\n  static overshootClamping(overshootClamping) {\n    const instance = this.createInstance();\n    return instance.overshootClamping(overshootClamping);\n  }\n  overshootClamping(overshootClamping) {\n    this.overshootClampingV = overshootClamping;\n    return this;\n  }\n  static restDisplacementThreshold(restDisplacementThreshold) {\n    const instance = this.createInstance();\n    return instance.restDisplacementThreshold(restDisplacementThreshold);\n  }\n  restDisplacementThreshold(restDisplacementThreshold) {\n    this.restDisplacementThresholdV = restDisplacementThreshold;\n    return this;\n  }\n  static restSpeedThreshold(restSpeedThreshold) {\n    const instance = this.createInstance();\n    return instance.restSpeedThreshold(restSpeedThreshold);\n  }\n  restSpeedThreshold(restSpeedThreshold) {\n    this.restSpeedThresholdV = restSpeedThreshold;\n    return this;\n  }\n  static withInitialValues(values) {\n    const instance = this.createInstance();\n    return instance.withInitialValues(values);\n  }\n  withInitialValues(values) {\n    this.initialValues = values;\n    return this;\n  }\n  getAnimationAndConfig() {\n    const duration = this.durationV;\n    const easing = this.easingV;\n    const rotate = this.rotateV;\n    const type = this.type ? this.type : withTiming;\n    const damping = this.dampingV;\n    const mass = this.massV;\n    const stiffness = this.stiffnessV;\n    const overshootClamping = this.overshootClampingV;\n    const restDisplacementThreshold = this.restDisplacementThresholdV;\n    const restSpeedThreshold = this.restSpeedThresholdV;\n    const animation = type;\n    const config = {};\n    if (type === withTiming) {\n      if (easing) {\n        config.easing = easing;\n      }\n      if (duration) {\n        config.duration = duration;\n      }\n      if (rotate) {\n        config.rotate = rotate;\n      }\n    } else {\n      if (damping) {\n        config.damping = damping;\n      }\n      if (mass) {\n        config.mass = mass;\n      }\n      if (stiffness) {\n        config.stiffness = stiffness;\n      }\n      if (overshootClamping) {\n        config.overshootClamping = overshootClamping;\n      }\n      if (restDisplacementThreshold) {\n        config.restDisplacementThreshold = restDisplacementThreshold;\n      }\n      if (restSpeedThreshold) {\n        config.restSpeedThreshold = restSpeedThreshold;\n      }\n      if (rotate) {\n        config.rotate = rotate;\n      }\n    }\n    return [animation, config];\n  }\n}","map":{"version":3,"names":["withTiming","withSpring","BaseAnimationBuilder","ComplexAnimationBuilder","easing","easingFunction","instance","createInstance","easingV","rotate","degree","rotateV","springify","type","damping","dampingV","mass","massV","stiffness","stiffnessV","overshootClamping","overshootClampingV","restDisplacementThreshold","restDisplacementThresholdV","restSpeedThreshold","restSpeedThresholdV","withInitialValues","values","initialValues","getAnimationAndConfig","duration","durationV","animation","config"],"sources":["C:/Users/13093/codestuff/portfolio/node_modules/react-native-reanimated/lib/reanimated2/layoutReanimation/animationBuilder/ComplexAnimationBuilder.js"],"sourcesContent":["import { withTiming, withSpring } from '../../animation';\nimport { BaseAnimationBuilder } from './BaseAnimationBuilder';\nexport class ComplexAnimationBuilder extends BaseAnimationBuilder {\n    static easing(easingFunction) {\n        const instance = this.createInstance();\n        return instance.easing(easingFunction);\n    }\n    easing(easingFunction) {\n        this.easingV = easingFunction;\n        return this;\n    }\n    static rotate(degree) {\n        const instance = this.createInstance();\n        return instance.rotate(degree);\n    }\n    rotate(degree) {\n        this.rotateV = degree;\n        return this;\n    }\n    static springify() {\n        const instance = this.createInstance();\n        return instance.springify();\n    }\n    springify() {\n        this.type = withSpring;\n        return this;\n    }\n    static damping(damping) {\n        const instance = this.createInstance();\n        return instance.damping(damping);\n    }\n    damping(damping) {\n        this.dampingV = damping;\n        return this;\n    }\n    static mass(mass) {\n        const instance = this.createInstance();\n        return instance.mass(mass);\n    }\n    mass(mass) {\n        this.massV = mass;\n        return this;\n    }\n    static stiffness(stiffness) {\n        const instance = this.createInstance();\n        return instance.stiffness(stiffness);\n    }\n    stiffness(stiffness) {\n        this.stiffnessV = stiffness;\n        return this;\n    }\n    static overshootClamping(overshootClamping) {\n        const instance = this.createInstance();\n        return instance.overshootClamping(overshootClamping);\n    }\n    overshootClamping(overshootClamping) {\n        this.overshootClampingV = overshootClamping;\n        return this;\n    }\n    static restDisplacementThreshold(restDisplacementThreshold) {\n        const instance = this.createInstance();\n        return instance.restDisplacementThreshold(restDisplacementThreshold);\n    }\n    restDisplacementThreshold(restDisplacementThreshold) {\n        this.restDisplacementThresholdV = restDisplacementThreshold;\n        return this;\n    }\n    static restSpeedThreshold(restSpeedThreshold) {\n        const instance = this.createInstance();\n        return instance.restSpeedThreshold(restSpeedThreshold);\n    }\n    restSpeedThreshold(restSpeedThreshold) {\n        this.restSpeedThresholdV = restSpeedThreshold;\n        return this;\n    }\n    static withInitialValues(values) {\n        const instance = this.createInstance();\n        return instance.withInitialValues(values);\n    }\n    withInitialValues(values) {\n        this.initialValues = values;\n        return this;\n    }\n    getAnimationAndConfig() {\n        const duration = this.durationV;\n        const easing = this.easingV;\n        const rotate = this.rotateV;\n        const type = this.type ? this.type : withTiming;\n        const damping = this.dampingV;\n        const mass = this.massV;\n        const stiffness = this.stiffnessV;\n        const overshootClamping = this.overshootClampingV;\n        const restDisplacementThreshold = this.restDisplacementThresholdV;\n        const restSpeedThreshold = this.restSpeedThresholdV;\n        const animation = type;\n        const config = {};\n        if (type === withTiming) {\n            if (easing) {\n                config.easing = easing;\n            }\n            if (duration) {\n                config.duration = duration;\n            }\n            if (rotate) {\n                config.rotate = rotate;\n            }\n        }\n        else {\n            if (damping) {\n                config.damping = damping;\n            }\n            if (mass) {\n                config.mass = mass;\n            }\n            if (stiffness) {\n                config.stiffness = stiffness;\n            }\n            if (overshootClamping) {\n                config.overshootClamping = overshootClamping;\n            }\n            if (restDisplacementThreshold) {\n                config.restDisplacementThreshold = restDisplacementThreshold;\n            }\n            if (restSpeedThreshold) {\n                config.restSpeedThreshold = restSpeedThreshold;\n            }\n            if (rotate) {\n                config.rotate = rotate;\n            }\n        }\n        return [animation, config];\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}