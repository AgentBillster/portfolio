{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\13093\\\\codestuff\\\\portfolio\\\\src\\\\navigators\\\\AppNavigator.js\",\n  _s = $RefreshSig$();\nimport { View, Text, TouchableOpacity } from \"react-native\";\nimport React from \"react\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport TabBarMinimal from \"../components/TabBarMinimal\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport HomeScreen from \"../screens/HomeScreen\";\nimport WorkScreen from \"../screens/WorkScreen\";\nimport ContactScreen from \"../screens/ContactScreen\";\nimport { Box, Container, Pressable, Switch, useColorMode } from \"native-base\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tab = createBottomTabNavigator();\nconst linking = {\n  prefixes: [\"http://localhost:3000\", \"https://localhost:3000\", \"https://.*localhost:3000\"],\n  config: {\n    screens: {\n      Home: \"home/\",\n      works: \"works/\",\n      contact: \"contact/\"\n    }\n  }\n};\nconst AppNavigator = () => {\n  _s();\n  const {\n    colorMode,\n    toggleColorMode\n  } = useColorMode();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Pressable, {\n      w: \"10\",\n      h: \"10\",\n      bg: \"gray.300\",\n      position: \"absolute\",\n      top: 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavigationContainer, {\n      theme: {\n        colors: {\n          background: \"white\"\n        }\n      },\n      linking: linking,\n      children: /*#__PURE__*/_jsxDEV(Tab.Navigator, {\n        sceneContainerStyle: {\n          alignItems: \"center\"\n        },\n        screenOptions: {\n          headerShown: false\n        },\n        tabBar: props => /*#__PURE__*/_jsxDEV(TabBarMinimal, {\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 30\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Tab.Screen, {\n          name: \"home\",\n          component: HomeScreen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab.Screen, {\n          name: \"works\",\n          component: WorkScreen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab.Screen, {\n          name: \"contact\",\n          component: ContactScreen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(AppNavigator, \"uURyIwMgIfFLStF4nJMrxbb6o/4=\", false, function () {\n  return [useColorMode];\n});\n_c = AppNavigator;\nexport default AppNavigator;\nvar _c;\n$RefreshReg$(_c, \"AppNavigator\");","map":{"version":3,"names":["View","Text","TouchableOpacity","React","createBottomTabNavigator","TabBarMinimal","NavigationContainer","HomeScreen","WorkScreen","ContactScreen","Box","Container","Pressable","Switch","useColorMode","Tab","linking","prefixes","config","screens","Home","works","contact","AppNavigator","colorMode","toggleColorMode","colors","background","alignItems","headerShown","props"],"sources":["C:/Users/13093/codestuff/portfolio/src/navigators/AppNavigator.js"],"sourcesContent":["import { View, Text, TouchableOpacity } from \"react-native\";\r\nimport React from \"react\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport TabBarMinimal from \"../components/TabBarMinimal\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport HomeScreen from \"../screens/HomeScreen\";\r\nimport WorkScreen from \"../screens/WorkScreen\";\r\nimport ContactScreen from \"../screens/ContactScreen\";\r\nimport { Box, Container, Pressable, Switch, useColorMode } from \"native-base\";\r\n\r\nconst Tab = createBottomTabNavigator();\r\nconst linking = {\r\n  prefixes: [\r\n    \"http://localhost:3000\",\r\n    \"https://localhost:3000\",\r\n    \"https://.*localhost:3000\",\r\n  ],\r\n  config: {\r\n    screens: {\r\n      Home: \"home/\",\r\n      works: \"works/\",\r\n      contact: \"contact/\",\r\n    },\r\n  },\r\n};\r\n\r\nconst AppNavigator = () => {\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n  return (\r\n    <>\r\n      <Pressable w=\"10\" h=\"10\" bg={\"gray.300\"} position=\"absolute\" top={0} />\r\n      <NavigationContainer\r\n        theme={{ colors: { background: \"white\" } }}\r\n        linking={linking}\r\n      >\r\n        <Tab.Navigator\r\n          sceneContainerStyle={{\r\n            alignItems: \"center\",\r\n          }}\r\n          screenOptions={{\r\n            headerShown: false,\r\n          }}\r\n          tabBar={(props) => <TabBarMinimal {...props} />}\r\n        >\r\n          <Tab.Screen name=\"home\" component={HomeScreen} />\r\n          <Tab.Screen name=\"works\" component={WorkScreen} />\r\n          <Tab.Screen name=\"contact\" component={ContactScreen} />\r\n        </Tab.Navigator>\r\n      </NavigationContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppNavigator;\r\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,IAAI,EAAEC,gBAAgB,QAAQ,cAAc;AAC3D,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,OAAOC,aAAa,MAAM,6BAA6B;AACvD,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,OAAOC,UAAU,MAAM,uBAAuB;AAC9C,OAAOC,UAAU,MAAM,uBAAuB;AAC9C,OAAOC,aAAa,MAAM,0BAA0B;AACpD,SAASC,GAAG,EAAEC,SAAS,EAAEC,SAAS,EAAEC,MAAM,EAAEC,YAAY,QAAQ,aAAa;AAAC;AAAA;AAE9E,MAAMC,GAAG,GAAGX,wBAAwB,EAAE;AACtC,MAAMY,OAAO,GAAG;EACdC,QAAQ,EAAE,CACR,uBAAuB,EACvB,wBAAwB,EACxB,0BAA0B,CAC3B;EACDC,MAAM,EAAE;IACNC,OAAO,EAAE;MACPC,IAAI,EAAE,OAAO;MACbC,KAAK,EAAE,QAAQ;MACfC,OAAO,EAAE;IACX;EACF;AACF,CAAC;AAED,MAAMC,YAAY,GAAG,MAAM;EAAA;EACzB,MAAM;IAAEC,SAAS;IAAEC;EAAgB,CAAC,GAAGX,YAAY,EAAE;EAErD,oBACE;IAAA,wBACE,QAAC,SAAS;MAAC,CAAC,EAAC,IAAI;MAAC,CAAC,EAAC,IAAI;MAAC,EAAE,EAAE,UAAW;MAAC,QAAQ,EAAC,UAAU;MAAC,GAAG,EAAE;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG,eACvE,QAAC,mBAAmB;MAClB,KAAK,EAAE;QAAEY,MAAM,EAAE;UAAEC,UAAU,EAAE;QAAQ;MAAE,CAAE;MAC3C,OAAO,EAAEX,OAAQ;MAAA,uBAEjB,QAAC,GAAG,CAAC,SAAS;QACZ,mBAAmB,EAAE;UACnBY,UAAU,EAAE;QACd,CAAE;QACF,aAAa,EAAE;UACbC,WAAW,EAAE;QACf,CAAE;QACF,MAAM,EAAGC,KAAK,iBAAK,QAAC,aAAa;UAAA,GAAKA;QAAK;UAAA;UAAA;UAAA;QAAA,QAAK;QAAA,wBAEhD,QAAC,GAAG,CAAC,MAAM;UAAC,IAAI,EAAC,MAAM;UAAC,SAAS,EAAEvB;QAAW;UAAA;UAAA;UAAA;QAAA,QAAG,eACjD,QAAC,GAAG,CAAC,MAAM;UAAC,IAAI,EAAC,OAAO;UAAC,SAAS,EAAEC;QAAW;UAAA;UAAA;UAAA;QAAA,QAAG,eAClD,QAAC,GAAG,CAAC,MAAM;UAAC,IAAI,EAAC,SAAS;UAAC,SAAS,EAAEC;QAAc;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA;IACzC;MAAA;MAAA;MAAA;IAAA,QACI;EAAA,gBACrB;AAEP,CAAC;AAAC,GA1BIc,YAAY;EAAA,QACuBT,YAAY;AAAA;AAAA,KAD/CS,YAAY;AA4BlB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}