{"ast":null,"code":"/* global _WORKLET */\nimport { isColor, convertToRGBA, rgbaArrayToRGBAColor, toGammaSpace, toLinearSpace } from '../Colors';\nimport NativeReanimatedModule from '../NativeReanimated';\nlet IN_STYLE_UPDATER = false;\nexport function initialUpdaterRun(updater) {\n  IN_STYLE_UPDATER = true;\n  const result = updater();\n  IN_STYLE_UPDATER = false;\n  return result;\n}\nfunction recognizePrefixSuffix(value) {\n  'worklet';\n\n  var _a;\n  if (typeof value === 'string') {\n    const match = value.match(/([A-Za-z]*)(-?\\d*\\.?\\d*)([eE][-+]?[0-9]+)?([A-Za-z%]*)/);\n    if (!match) {\n      throw Error(\"Couldn't parse animation value. Check if there isn't any typo.\");\n    }\n    const prefix = match[1];\n    const suffix = match[4];\n    // number with scientific notation\n    const number = match[2] + ((_a = match[3]) !== null && _a !== void 0 ? _a : '');\n    return {\n      prefix,\n      suffix,\n      strippedValue: parseFloat(number)\n    };\n  } else {\n    return {\n      strippedValue: value\n    };\n  }\n}\nfunction decorateAnimation(animation) {\n  'worklet';\n\n  if (animation.isHigherOrder) {\n    return;\n  }\n  const baseOnStart = animation.onStart;\n  const baseOnFrame = animation.onFrame;\n  const animationCopy = Object.assign({}, animation);\n  delete animationCopy.callback;\n  const prefNumberSuffOnStart = (animation, value, timestamp, previousAnimation) => {\n    var _a, _b, _c, _d;\n    // recognize prefix, suffix, and updates stripped value on animation start\n    const {\n      prefix,\n      suffix,\n      strippedValue\n    } = recognizePrefixSuffix(value);\n    animation.__prefix = prefix;\n    animation.__suffix = suffix;\n    animation.strippedCurrent = strippedValue;\n    const {\n      strippedValue: strippedToValue\n    } = recognizePrefixSuffix(animation.toValue);\n    animation.current = strippedValue;\n    animation.startValue = strippedValue;\n    animation.toValue = strippedToValue;\n    if (previousAnimation && previousAnimation !== animation) {\n      const {\n        prefix: paPrefix,\n        suffix: paSuffix,\n        strippedValue: paStrippedValue\n      } = recognizePrefixSuffix(previousAnimation.current);\n      previousAnimation.current = paStrippedValue;\n      previousAnimation.__prefix = paPrefix;\n      previousAnimation.__suffix = paSuffix;\n    }\n    baseOnStart(animation, strippedValue, timestamp, previousAnimation);\n    animation.current = ((_a = animation.__prefix) !== null && _a !== void 0 ? _a : '') + animation.current + ((_b = animation.__suffix) !== null && _b !== void 0 ? _b : '');\n    if (previousAnimation && previousAnimation !== animation) {\n      previousAnimation.current = ((_c = previousAnimation.__prefix) !== null && _c !== void 0 ? _c : '') + previousAnimation.current + ((_d = previousAnimation.__suffix) !== null && _d !== void 0 ? _d : '');\n    }\n  };\n  const prefNumberSuffOnFrame = (animation, timestamp) => {\n    var _a, _b;\n    animation.current = animation.strippedCurrent;\n    const res = baseOnFrame(animation, timestamp);\n    animation.strippedCurrent = animation.current;\n    animation.current = ((_a = animation.__prefix) !== null && _a !== void 0 ? _a : '') + animation.current + ((_b = animation.__suffix) !== null && _b !== void 0 ? _b : '');\n    return res;\n  };\n  const tab = ['R', 'G', 'B', 'A'];\n  const colorOnStart = (animation, value, timestamp, previousAnimation) => {\n    let RGBAValue;\n    let RGBACurrent;\n    let RGBAToValue;\n    const res = [];\n    if (isColor(value)) {\n      RGBACurrent = toLinearSpace(convertToRGBA(animation.current));\n      RGBAValue = toLinearSpace(convertToRGBA(value));\n      if (animation.toValue) {\n        RGBAToValue = toLinearSpace(convertToRGBA(animation.toValue));\n      }\n    }\n    tab.forEach((i, index) => {\n      animation[i] = Object.assign({}, animationCopy);\n      animation[i].current = RGBACurrent[index];\n      animation[i].toValue = RGBAToValue ? RGBAToValue[index] : undefined;\n      animation[i].onStart(animation[i], RGBAValue[index], timestamp, previousAnimation ? previousAnimation[i] : undefined);\n      res.push(animation[i].current);\n    });\n    animation.current = rgbaArrayToRGBAColor(toGammaSpace(res));\n  };\n  const colorOnFrame = (animation, timestamp) => {\n    const RGBACurrent = toLinearSpace(convertToRGBA(animation.current));\n    const res = [];\n    let finished = true;\n    tab.forEach((i, index) => {\n      animation[i].current = RGBACurrent[index];\n      // @ts-ignore: disable-next-line\n      finished &= animation[i].onFrame(animation[i], timestamp);\n      res.push(animation[i].current);\n    });\n    animation.current = rgbaArrayToRGBAColor(toGammaSpace(res));\n    return finished;\n  };\n  const arrayOnStart = (animation, value, timestamp, previousAnimation) => {\n    value.forEach((v, i) => {\n      animation[i] = Object.assign({}, animationCopy);\n      animation[i].current = v;\n      animation[i].toValue = animation.toValue[i];\n      animation[i].onStart(animation[i], v, timestamp, previousAnimation ? previousAnimation[i] : undefined);\n    });\n    animation.current = value;\n  };\n  const arrayOnFrame = (animation, timestamp) => {\n    let finished = true;\n    animation.current.forEach((v, i) => {\n      // @ts-ignore: disable-next-line\n      finished &= animation[i].onFrame(animation[i], timestamp);\n      animation.current[i] = animation[i].current;\n    });\n    return finished;\n  };\n  animation.onStart = (animation, value, timestamp, previousAnimation) => {\n    if (isColor(value)) {\n      colorOnStart(animation, value, timestamp, previousAnimation);\n      animation.onFrame = colorOnFrame;\n      return;\n    } else if (Array.isArray(value)) {\n      arrayOnStart(animation, value, timestamp, previousAnimation);\n      animation.onFrame = arrayOnFrame;\n      return;\n    } else if (typeof value === 'string') {\n      prefNumberSuffOnStart(animation, value, timestamp, previousAnimation);\n      animation.onFrame = prefNumberSuffOnFrame;\n      return;\n    }\n    baseOnStart(animation, value, timestamp, previousAnimation);\n  };\n}\nexport function defineAnimation(starting, factory) {\n  'worklet';\n\n  if (IN_STYLE_UPDATER) {\n    return starting;\n  }\n  const create = () => {\n    'worklet';\n\n    const animation = factory();\n    decorateAnimation(animation);\n    return animation;\n  };\n  if (_WORKLET || !NativeReanimatedModule.native) {\n    return create();\n  }\n  // @ts-ignore: eslint-disable-line\n  return create;\n}\nexport function cancelAnimation(sharedValue) {\n  'worklet';\n\n  // setting the current value cancels the animation if one is currently running\n  sharedValue.value = sharedValue.value; // eslint-disable-line no-self-assign\n}\n// TODO it should work only if there was no animation before.\nexport function withStartValue(startValue, animation) {\n  'worklet';\n\n  return defineAnimation(startValue, () => {\n    'worklet';\n\n    if (!_WORKLET && typeof animation === 'function') {\n      animation = animation();\n    }\n    animation.current = startValue;\n    return animation;\n  });\n}","map":{"version":3,"names":["isColor","convertToRGBA","rgbaArrayToRGBAColor","toGammaSpace","toLinearSpace","NativeReanimatedModule","IN_STYLE_UPDATER","initialUpdaterRun","updater","result","recognizePrefixSuffix","value","_a","match","Error","prefix","suffix","number","strippedValue","parseFloat","decorateAnimation","animation","isHigherOrder","baseOnStart","onStart","baseOnFrame","onFrame","animationCopy","Object","assign","callback","prefNumberSuffOnStart","timestamp","previousAnimation","_b","_c","_d","__prefix","__suffix","strippedCurrent","strippedToValue","toValue","current","startValue","paPrefix","paSuffix","paStrippedValue","prefNumberSuffOnFrame","res","tab","colorOnStart","RGBAValue","RGBACurrent","RGBAToValue","forEach","i","index","undefined","push","colorOnFrame","finished","arrayOnStart","v","arrayOnFrame","Array","isArray","defineAnimation","starting","factory","create","_WORKLET","native","cancelAnimation","sharedValue","withStartValue"],"sources":["C:/Users/13093/codestuff/portfolio/node_modules/react-native-reanimated/lib/reanimated2/animation/util.js"],"sourcesContent":["/* global _WORKLET */\nimport { isColor, convertToRGBA, rgbaArrayToRGBAColor, toGammaSpace, toLinearSpace, } from '../Colors';\nimport NativeReanimatedModule from '../NativeReanimated';\nlet IN_STYLE_UPDATER = false;\nexport function initialUpdaterRun(updater) {\n    IN_STYLE_UPDATER = true;\n    const result = updater();\n    IN_STYLE_UPDATER = false;\n    return result;\n}\nfunction recognizePrefixSuffix(value) {\n    'worklet';\n    var _a;\n    if (typeof value === 'string') {\n        const match = value.match(/([A-Za-z]*)(-?\\d*\\.?\\d*)([eE][-+]?[0-9]+)?([A-Za-z%]*)/);\n        if (!match) {\n            throw Error(\"Couldn't parse animation value. Check if there isn't any typo.\");\n        }\n        const prefix = match[1];\n        const suffix = match[4];\n        // number with scientific notation\n        const number = match[2] + ((_a = match[3]) !== null && _a !== void 0 ? _a : '');\n        return { prefix, suffix, strippedValue: parseFloat(number) };\n    }\n    else {\n        return { strippedValue: value };\n    }\n}\nfunction decorateAnimation(animation) {\n    'worklet';\n    if (animation.isHigherOrder) {\n        return;\n    }\n    const baseOnStart = animation.onStart;\n    const baseOnFrame = animation.onFrame;\n    const animationCopy = Object.assign({}, animation);\n    delete animationCopy.callback;\n    const prefNumberSuffOnStart = (animation, value, timestamp, previousAnimation) => {\n        var _a, _b, _c, _d;\n        // recognize prefix, suffix, and updates stripped value on animation start\n        const { prefix, suffix, strippedValue } = recognizePrefixSuffix(value);\n        animation.__prefix = prefix;\n        animation.__suffix = suffix;\n        animation.strippedCurrent = strippedValue;\n        const { strippedValue: strippedToValue } = recognizePrefixSuffix(animation.toValue);\n        animation.current = strippedValue;\n        animation.startValue = strippedValue;\n        animation.toValue = strippedToValue;\n        if (previousAnimation && previousAnimation !== animation) {\n            const { prefix: paPrefix, suffix: paSuffix, strippedValue: paStrippedValue, } = recognizePrefixSuffix(previousAnimation.current);\n            previousAnimation.current = paStrippedValue;\n            previousAnimation.__prefix = paPrefix;\n            previousAnimation.__suffix = paSuffix;\n        }\n        baseOnStart(animation, strippedValue, timestamp, previousAnimation);\n        animation.current =\n            ((_a = animation.__prefix) !== null && _a !== void 0 ? _a : '') +\n                animation.current +\n                ((_b = animation.__suffix) !== null && _b !== void 0 ? _b : '');\n        if (previousAnimation && previousAnimation !== animation) {\n            previousAnimation.current =\n                ((_c = previousAnimation.__prefix) !== null && _c !== void 0 ? _c : '') +\n                    previousAnimation.current +\n                    ((_d = previousAnimation.__suffix) !== null && _d !== void 0 ? _d : '');\n        }\n    };\n    const prefNumberSuffOnFrame = (animation, timestamp) => {\n        var _a, _b;\n        animation.current = animation.strippedCurrent;\n        const res = baseOnFrame(animation, timestamp);\n        animation.strippedCurrent = animation.current;\n        animation.current =\n            ((_a = animation.__prefix) !== null && _a !== void 0 ? _a : '') +\n                animation.current +\n                ((_b = animation.__suffix) !== null && _b !== void 0 ? _b : '');\n        return res;\n    };\n    const tab = ['R', 'G', 'B', 'A'];\n    const colorOnStart = (animation, value, timestamp, previousAnimation) => {\n        let RGBAValue;\n        let RGBACurrent;\n        let RGBAToValue;\n        const res = [];\n        if (isColor(value)) {\n            RGBACurrent = toLinearSpace(convertToRGBA(animation.current));\n            RGBAValue = toLinearSpace(convertToRGBA(value));\n            if (animation.toValue) {\n                RGBAToValue = toLinearSpace(convertToRGBA(animation.toValue));\n            }\n        }\n        tab.forEach((i, index) => {\n            animation[i] = Object.assign({}, animationCopy);\n            animation[i].current = RGBACurrent[index];\n            animation[i].toValue = RGBAToValue ? RGBAToValue[index] : undefined;\n            animation[i].onStart(animation[i], RGBAValue[index], timestamp, previousAnimation ? previousAnimation[i] : undefined);\n            res.push(animation[i].current);\n        });\n        animation.current = rgbaArrayToRGBAColor(toGammaSpace(res));\n    };\n    const colorOnFrame = (animation, timestamp) => {\n        const RGBACurrent = toLinearSpace(convertToRGBA(animation.current));\n        const res = [];\n        let finished = true;\n        tab.forEach((i, index) => {\n            animation[i].current = RGBACurrent[index];\n            // @ts-ignore: disable-next-line\n            finished &= animation[i].onFrame(animation[i], timestamp);\n            res.push(animation[i].current);\n        });\n        animation.current = rgbaArrayToRGBAColor(toGammaSpace(res));\n        return finished;\n    };\n    const arrayOnStart = (animation, value, timestamp, previousAnimation) => {\n        value.forEach((v, i) => {\n            animation[i] = Object.assign({}, animationCopy);\n            animation[i].current = v;\n            animation[i].toValue = animation.toValue[i];\n            animation[i].onStart(animation[i], v, timestamp, previousAnimation ? previousAnimation[i] : undefined);\n        });\n        animation.current = value;\n    };\n    const arrayOnFrame = (animation, timestamp) => {\n        let finished = true;\n        animation.current.forEach((v, i) => {\n            // @ts-ignore: disable-next-line\n            finished &= animation[i].onFrame(animation[i], timestamp);\n            animation.current[i] = animation[i].current;\n        });\n        return finished;\n    };\n    animation.onStart = (animation, value, timestamp, previousAnimation) => {\n        if (isColor(value)) {\n            colorOnStart(animation, value, timestamp, previousAnimation);\n            animation.onFrame = colorOnFrame;\n            return;\n        }\n        else if (Array.isArray(value)) {\n            arrayOnStart(animation, value, timestamp, previousAnimation);\n            animation.onFrame = arrayOnFrame;\n            return;\n        }\n        else if (typeof value === 'string') {\n            prefNumberSuffOnStart(animation, value, timestamp, previousAnimation);\n            animation.onFrame = prefNumberSuffOnFrame;\n            return;\n        }\n        baseOnStart(animation, value, timestamp, previousAnimation);\n    };\n}\nexport function defineAnimation(starting, factory) {\n    'worklet';\n    if (IN_STYLE_UPDATER) {\n        return starting;\n    }\n    const create = () => {\n        'worklet';\n        const animation = factory();\n        decorateAnimation(animation);\n        return animation;\n    };\n    if (_WORKLET || !NativeReanimatedModule.native) {\n        return create();\n    }\n    // @ts-ignore: eslint-disable-line\n    return create;\n}\nexport function cancelAnimation(sharedValue) {\n    'worklet';\n    // setting the current value cancels the animation if one is currently running\n    sharedValue.value = sharedValue.value; // eslint-disable-line no-self-assign\n}\n// TODO it should work only if there was no animation before.\nexport function withStartValue(startValue, animation) {\n    'worklet';\n    return defineAnimation(startValue, () => {\n        'worklet';\n        if (!_WORKLET && typeof animation === 'function') {\n            animation = animation();\n        }\n        animation.current = startValue;\n        return animation;\n    });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}