{"ast":null,"code":"import { Platform, findNodeHandle } from 'react-native';\nimport ReanimatedModule from '../../ReanimatedModule';\nimport AnimatedNode from './AnimatedNode';\nimport InternalAnimatedValue from './AnimatedValue';\nimport { createAnimatedAlways } from './AnimatedAlways';\nimport invariant from 'invariant';\nimport createEventObjectProxyPolyfill from './createEventObjectProxyPolyfill';\nfunction sanitizeArgMapping(argMapping) {\n  // Find animated values in `argMapping` and create an array representing their\n  // key path inside the `nativeEvent` object. Ex.: ['contentOffset', 'x'].\n  const eventMappings = [];\n  const alwaysNodes = [];\n  const getNode = node => {\n    if (Platform.OS === 'web' || Platform.OS === 'windows' || Platform.OS === 'macos') {\n      return node;\n    }\n    return node.__nodeID;\n  };\n  const traverse = (value, path) => {\n    if (value instanceof InternalAnimatedValue) {\n      eventMappings.push(path.concat(getNode(value)));\n    } else if (typeof value === 'object' && value.__val) {\n      eventMappings.push(path.concat(getNode(value.__val)));\n    } else if (typeof value === 'function') {\n      const node = new InternalAnimatedValue(0);\n      alwaysNodes.push(createAnimatedAlways(value(node)));\n      eventMappings.push(path.concat(getNode(node)));\n    } else if (typeof value === 'object') {\n      for (const key in value) {\n        traverse(value[key], path.concat(key));\n      }\n    }\n  };\n  invariant(argMapping[0] && argMapping[0].nativeEvent, 'Native driven events only support animated values contained inside `nativeEvent`.');\n\n  // Assume that the event containing `nativeEvent` is always the first argument.\n  const ev = argMapping[0].nativeEvent;\n  if (typeof ev === 'object') {\n    traverse(ev, []);\n  } else if (typeof ev === 'function') {\n    const proxyHandler = {\n      get: function (target, name) {\n        if (name === '__isProxy') {\n          return true;\n        }\n        if (!target[name] && name !== '__val') {\n          target[name] = new Proxy({}, proxyHandler);\n        }\n        return target[name];\n      },\n      set: function (target, prop, value) {\n        if (prop === '__val') {\n          target[prop] = value;\n          return true;\n        }\n        return false;\n      }\n    };\n    const proxy = typeof Proxy === 'function' ? new Proxy({}, proxyHandler) : createEventObjectProxyPolyfill();\n    alwaysNodes.push(createAnimatedAlways(ev(proxy)));\n    traverse(proxy, []);\n  }\n  return {\n    eventMappings,\n    alwaysNodes\n  };\n}\nexport default class AnimatedEvent extends AnimatedNode {\n  constructor(argMapping) {\n    let _config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const {\n      eventMappings,\n      alwaysNodes\n    } = sanitizeArgMapping(argMapping);\n    super({\n      type: 'event',\n      argMapping: eventMappings\n    });\n    this._alwaysNodes = alwaysNodes;\n  }\n  toString() {\n    return `AnimatedEvent, id: ${this.__nodeID}`;\n  }\n\n  // The below field is a temporary workaround to make AnimatedEvent object be recognized\n  // as Animated.event event callback and therefore filtered out from being send over the\n  // bridge which was causing the object to be frozen in JS.\n  __isNative = true;\n  attachEvent(viewRef, eventName) {\n    for (let i = 0; i < this._alwaysNodes.length; i++) {\n      this._alwaysNodes[i].__attach();\n    }\n    this.__attach();\n    const viewTag = findNodeHandle(viewRef);\n    ReanimatedModule.attachEvent(viewTag, eventName, this.__nodeID);\n  }\n  __onEvaluate() {\n    return 0;\n  }\n  detachEvent(viewRef, eventName) {\n    for (let i = 0; i < this._alwaysNodes.length; i++) {\n      this._alwaysNodes[i].isNativelyInitialized() && this._alwaysNodes[i].__detach();\n    }\n    const viewTag = findNodeHandle(viewRef);\n    ReanimatedModule.detachEvent(viewTag, eventName, this.__nodeID);\n    this.__detach();\n  }\n}\nexport function createAnimatedEvent(argMapping, config) {\n  return new AnimatedEvent(argMapping, config);\n}","map":{"version":3,"names":["Platform","findNodeHandle","ReanimatedModule","AnimatedNode","InternalAnimatedValue","createAnimatedAlways","invariant","createEventObjectProxyPolyfill","sanitizeArgMapping","argMapping","eventMappings","alwaysNodes","getNode","node","OS","__nodeID","traverse","value","path","push","concat","__val","key","nativeEvent","ev","proxyHandler","get","target","name","Proxy","set","prop","proxy","AnimatedEvent","constructor","_config","type","_alwaysNodes","toString","__isNative","attachEvent","viewRef","eventName","i","length","__attach","viewTag","__onEvaluate","detachEvent","isNativelyInitialized","__detach","createAnimatedEvent","config"],"sources":["C:/Users/13093/codestuff/portfolio/node_modules/react-native-reanimated/lib/reanimated1/core/AnimatedEvent.js"],"sourcesContent":["import { Platform, findNodeHandle } from 'react-native';\nimport ReanimatedModule from '../../ReanimatedModule';\n\nimport AnimatedNode from './AnimatedNode';\nimport InternalAnimatedValue from './AnimatedValue';\nimport { createAnimatedAlways } from './AnimatedAlways';\n\nimport invariant from 'invariant';\nimport createEventObjectProxyPolyfill from './createEventObjectProxyPolyfill';\n\nfunction sanitizeArgMapping(argMapping) {\n  // Find animated values in `argMapping` and create an array representing their\n  // key path inside the `nativeEvent` object. Ex.: ['contentOffset', 'x'].\n  const eventMappings = [];\n  const alwaysNodes = [];\n\n  const getNode = (node) => {\n    if (\n      Platform.OS === 'web' ||\n      Platform.OS === 'windows' ||\n      Platform.OS === 'macos'\n    ) {\n      return node;\n    }\n    return node.__nodeID;\n  };\n\n  const traverse = (value, path) => {\n    if (value instanceof InternalAnimatedValue) {\n      eventMappings.push(path.concat(getNode(value)));\n    } else if (typeof value === 'object' && value.__val) {\n      eventMappings.push(path.concat(getNode(value.__val)));\n    } else if (typeof value === 'function') {\n      const node = new InternalAnimatedValue(0);\n      alwaysNodes.push(createAnimatedAlways(value(node)));\n      eventMappings.push(path.concat(getNode(node)));\n    } else if (typeof value === 'object') {\n      for (const key in value) {\n        traverse(value[key], path.concat(key));\n      }\n    }\n  };\n\n  invariant(\n    argMapping[0] && argMapping[0].nativeEvent,\n    'Native driven events only support animated values contained inside `nativeEvent`.'\n  );\n\n  // Assume that the event containing `nativeEvent` is always the first argument.\n  const ev = argMapping[0].nativeEvent;\n  if (typeof ev === 'object') {\n    traverse(ev, []);\n  } else if (typeof ev === 'function') {\n    const proxyHandler = {\n      get: function (target, name) {\n        if (name === '__isProxy') {\n          return true;\n        }\n        if (!target[name] && name !== '__val') {\n          target[name] = new Proxy({}, proxyHandler);\n        }\n        return target[name];\n      },\n      set: function (target, prop, value) {\n        if (prop === '__val') {\n          target[prop] = value;\n          return true;\n        }\n        return false;\n      },\n    };\n\n    const proxy =\n      typeof Proxy === 'function'\n        ? new Proxy({}, proxyHandler)\n        : createEventObjectProxyPolyfill();\n    alwaysNodes.push(createAnimatedAlways(ev(proxy)));\n    traverse(proxy, []);\n  }\n\n  return { eventMappings, alwaysNodes };\n}\n\nexport default class AnimatedEvent extends AnimatedNode {\n  constructor(argMapping, _config = {}) {\n    const { eventMappings, alwaysNodes } = sanitizeArgMapping(argMapping);\n    super({ type: 'event', argMapping: eventMappings });\n    this._alwaysNodes = alwaysNodes;\n  }\n\n  toString() {\n    return `AnimatedEvent, id: ${this.__nodeID}`;\n  }\n\n  // The below field is a temporary workaround to make AnimatedEvent object be recognized\n  // as Animated.event event callback and therefore filtered out from being send over the\n  // bridge which was causing the object to be frozen in JS.\n  __isNative = true;\n\n  attachEvent(viewRef, eventName) {\n    for (let i = 0; i < this._alwaysNodes.length; i++) {\n      this._alwaysNodes[i].__attach();\n    }\n    this.__attach();\n    const viewTag = findNodeHandle(viewRef);\n    ReanimatedModule.attachEvent(viewTag, eventName, this.__nodeID);\n  }\n\n  __onEvaluate() {\n    return 0;\n  }\n\n  detachEvent(viewRef, eventName) {\n    for (let i = 0; i < this._alwaysNodes.length; i++) {\n      this._alwaysNodes[i].isNativelyInitialized() &&\n        this._alwaysNodes[i].__detach();\n    }\n    const viewTag = findNodeHandle(viewRef);\n    ReanimatedModule.detachEvent(viewTag, eventName, this.__nodeID);\n    this.__detach();\n  }\n}\n\nexport function createAnimatedEvent(argMapping, config) {\n  return new AnimatedEvent(argMapping, config);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}