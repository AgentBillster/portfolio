{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport Animated from 'react-native-reanimated';\nimport { useMotify } from './use-motify';\nconst {\n  createAnimatedComponent\n} = Animated;\nexport default function motify(ComponentWithoutAnimation) {\n  const Component = createAnimatedComponent(ComponentWithoutAnimation);\n  const withAnimations = () => {\n    const Motified = forwardRef(function Moti(_ref, ref) {\n      let {\n        animate,\n        style,\n        from,\n        transition,\n        delay,\n        state,\n        stylePriority,\n        onDidAnimate,\n        exit,\n        animateInitialState,\n        exitTransition,\n        ...props\n      } = _ref;\n      const animated = useMotify({\n        animate,\n        from,\n        transition,\n        delay,\n        state,\n        stylePriority,\n        onDidAnimate,\n        exit,\n        exitTransition,\n        animateInitialState\n      });\n      return React.createElement(Component, Object.assign({}, props, {\n        style: style ? [style, animated.style] : animated.style,\n        ref: ref\n      }));\n    });\n    Motified.displayName = `Moti.${ComponentWithoutAnimation.displayName || ComponentWithoutAnimation.name || 'NoName'}`;\n    return Motified;\n  };\n  return withAnimations;\n}","map":{"version":3,"mappings":"AAAA,OAAOA,KAAK,IAAIC,UAAU,QAA0C,OAAO;AAE3E,OAAOC,QAIN,MAAM,yBAAyB;AAGhC,SAASC,SAAS,QAAQ,cAAc;AAExC,MAAM;EAAEC;AAAuB,CAAE,GAAGF,QAAQ;AAwB5C,eAAc,SAAUG,MAAM,CAM5BC,yBAA+C;EAC/C,MAAMC,SAAS,GAAGH,uBAAuB,CACvCE,yBAAqD,CACtD;EAED,MAAME,cAAc,GAAG,MAAK;IAC1B,MAAMC,QAAQ,GAAGR,UAAU,CAQzB,SAASS,IAAI,OAebC,GAAG;MAAA,IAdH;QACEC,OAAO;QACPC,KAAK;QACLC,IAAI;QACJC,UAAU;QACVC,KAAK;QACLC,KAAK;QACLC,aAAa;QACbC,YAAY;QACZC,IAAI;QACJC,mBAAmB;QACnBC,cAAc;QACd,GAAGC;MAAK,CACT;MAGD,MAAMC,QAAQ,GAAGrB,SAAS,CAAC;QACzBS,OAAO;QACPE,IAAI;QACJC,UAAU;QACVC,KAAK;QACLC,KAAK;QACLC,aAAa;QACbC,YAAY;QACZC,IAAI;QACJE,cAAc;QACdD;OACD,CAAC;MAEF,OACErB,oBAACO,SAAS,oBACHgB,KAAa;QAClBV,KAAK,EAAEA,KAAK,GAAG,CAACA,KAAK,EAAEW,QAAQ,CAACX,KAAK,CAAC,GAAGW,QAAQ,CAACX,KAAK;QACvDF,GAAG,EAAEA;MAAU,GACf;IAEN,CAAC,CAAC;IAEFF,QAAQ,CAACgB,WAAW,GAAG,QACrBnB,yBAAyB,CAACmB,WAAW,IACrCnB,yBAAyB,CAACoB,IAAI,IAC9B,QACF,EAAE;IAEF,OAAOjB,QAAQ;EACjB,CAAC;EAED,OAAOD,cAAc;AACvB","names":["React","forwardRef","Animated","useMotify","createAnimatedComponent","motify","ComponentWithoutAnimation","Component","withAnimations","Motified","Moti","ref","animate","style","from","transition","delay","state","stylePriority","onDidAnimate","exit","animateInitialState","exitTransition","props","animated","displayName","name"],"sources":["C:\\Users\\13093\\codestuff\\portfolio\\node_modules\\moti\\src\\core\\motify.tsx"],"sourcesContent":["import React, { forwardRef, ComponentType, FunctionComponent } from 'react'\nimport type { ImageStyle, TextStyle, ViewStyle } from 'react-native'\nimport Animated, {\n  BaseAnimationBuilder,\n  EntryExitAnimationFunction,\n  LayoutAnimationFunction,\n} from 'react-native-reanimated'\n\nimport type { MotiProps } from './types'\nimport { useMotify } from './use-motify'\n\nconst { createAnimatedComponent } = Animated\n\n// copied from reanimated\n// if we use Animated.AnimateProps\n// then we get this TypeScript error:\n// Exported variable 'View' has or is using name 'AnimatedNode' from external module \"react-native-reanimated\" but cannot be named.\ntype AnimatedProps<Props> = {\n  animatedProps?: Partial<Props>\n  layout?:\n    | BaseAnimationBuilder\n    | LayoutAnimationFunction\n    | typeof BaseAnimationBuilder\n  entering?:\n    | BaseAnimationBuilder\n    | typeof BaseAnimationBuilder\n    | EntryExitAnimationFunction\n    | Keyframe\n  exiting?:\n    | BaseAnimationBuilder\n    | typeof BaseAnimationBuilder\n    | EntryExitAnimationFunction\n    | Keyframe\n}\n\nexport default function motify<\n  Style,\n  Props extends { style?: Style },\n  Ref,\n  ExtraProps,\n  Animate = ViewStyle | ImageStyle | TextStyle\n>(ComponentWithoutAnimation: ComponentType<Props>) {\n  const Component = createAnimatedComponent(\n    ComponentWithoutAnimation as FunctionComponent<Props>\n  )\n\n  const withAnimations = () => {\n    const Motified = forwardRef<\n      Ref,\n      Props &\n        AnimatedProps<Props> &\n        MotiProps<Animate> &\n        ExtraProps & {\n          children?: React.ReactNode\n        }\n    >(function Moti(\n      {\n        animate,\n        style,\n        from,\n        transition,\n        delay,\n        state,\n        stylePriority,\n        onDidAnimate,\n        exit,\n        animateInitialState,\n        exitTransition,\n        ...props\n      },\n      ref\n    ) {\n      const animated = useMotify({\n        animate,\n        from,\n        transition,\n        delay,\n        state,\n        stylePriority,\n        onDidAnimate,\n        exit,\n        exitTransition,\n        animateInitialState,\n      })\n\n      return (\n        <Component\n          {...(props as any)} // TODO\n          style={style ? [style, animated.style] : animated.style}\n          ref={ref as any} // TODO\n        />\n      )\n    })\n\n    Motified.displayName = `Moti.${\n      ComponentWithoutAnimation.displayName ||\n      ComponentWithoutAnimation.name ||\n      'NoName'\n    }`\n\n    return Motified\n  }\n\n  return withAnimations\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}