{"ast":null,"code":"import invariant from 'invariant';\nimport { val } from '../val';\nimport AnimatedNode from './AnimatedNode';\nimport InternalAnimatedValue from './InternalAnimatedValue';\nclass AnimatedBlock extends AnimatedNode {\n  _array;\n  constructor(array) {\n    invariant(array.every(el => el instanceof AnimatedNode), `Reanimated: Animated.block node argument should be an array with elements of type AnimatedNode. One or more of them are not AnimatedNodes`);\n    super({\n      type: 'block',\n      block: array\n    }, array);\n    this._array = array;\n  }\n  toString() {\n    return `AnimatedBlock, id: ${this.__nodeID}`;\n  }\n  __onEvaluate() {\n    let result;\n    this._array.forEach(node => {\n      result = val(node);\n    });\n    return result;\n  }\n}\nexport function createAnimatedBlock(items) {\n  return adapt(items);\n}\nfunction nodify(v) {\n  if (typeof v === 'object' && v?.__isProxy) {\n    if (!v.__val) {\n      v.__val = new InternalAnimatedValue(0);\n    }\n    return v.__val;\n  }\n  // TODO: cache some typical static values (e.g. 0, 1, -1)\n  return v instanceof AnimatedNode ? v : InternalAnimatedValue.valueForConstant(v);\n}\nexport function adapt(v) {\n  return Array.isArray(v) ? new AnimatedBlock(v.map(node => adapt(node))) : nodify(v);\n}","map":{"version":3,"names":["invariant","val","AnimatedNode","InternalAnimatedValue","AnimatedBlock","_array","constructor","array","every","el","type","block","toString","__nodeID","__onEvaluate","result","forEach","node","createAnimatedBlock","items","adapt","nodify","v","__isProxy","__val","valueForConstant","Array","isArray","map"],"sources":["C:/Users/13093/codestuff/portfolio/node_modules/react-native-reanimated/lib/reanimated1/core/AnimatedBlock.js"],"sourcesContent":["import invariant from 'invariant';\nimport { val } from '../val';\nimport AnimatedNode from './AnimatedNode';\nimport InternalAnimatedValue from './InternalAnimatedValue';\n\nclass AnimatedBlock extends AnimatedNode {\n  _array;\n\n  constructor(array) {\n    invariant(\n      array.every((el) => el instanceof AnimatedNode),\n      `Reanimated: Animated.block node argument should be an array with elements of type AnimatedNode. One or more of them are not AnimatedNodes`\n    );\n    super({ type: 'block', block: array }, array);\n    this._array = array;\n  }\n\n  toString() {\n    return `AnimatedBlock, id: ${this.__nodeID}`;\n  }\n\n  __onEvaluate() {\n    let result;\n    this._array.forEach((node) => {\n      result = val(node);\n    });\n    return result;\n  }\n}\n\nexport function createAnimatedBlock(items) {\n  return adapt(items);\n}\n\nfunction nodify(v) {\n  if (typeof v === 'object' && v?.__isProxy) {\n    if (!v.__val) {\n      v.__val = new InternalAnimatedValue(0);\n    }\n    return v.__val;\n  }\n  // TODO: cache some typical static values (e.g. 0, 1, -1)\n  return v instanceof AnimatedNode\n    ? v\n    : InternalAnimatedValue.valueForConstant(v);\n}\n\nexport function adapt(v) {\n  return Array.isArray(v)\n    ? new AnimatedBlock(v.map((node) => adapt(node)))\n    : nodify(v);\n}\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,WAAW;AACjC,SAASC,GAAG,QAAQ,QAAQ;AAC5B,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,qBAAqB,MAAM,yBAAyB;AAE3D,MAAMC,aAAa,SAASF,YAAY,CAAC;EACvCG,MAAM;EAENC,WAAW,CAACC,KAAK,EAAE;IACjBP,SAAS,CACPO,KAAK,CAACC,KAAK,CAAEC,EAAE,IAAKA,EAAE,YAAYP,YAAY,CAAC,EAC9C,2IAA0I,CAC5I;IACD,KAAK,CAAC;MAAEQ,IAAI,EAAE,OAAO;MAAEC,KAAK,EAAEJ;IAAM,CAAC,EAAEA,KAAK,CAAC;IAC7C,IAAI,CAACF,MAAM,GAAGE,KAAK;EACrB;EAEAK,QAAQ,GAAG;IACT,OAAQ,sBAAqB,IAAI,CAACC,QAAS,EAAC;EAC9C;EAEAC,YAAY,GAAG;IACb,IAAIC,MAAM;IACV,IAAI,CAACV,MAAM,CAACW,OAAO,CAAEC,IAAI,IAAK;MAC5BF,MAAM,GAAGd,GAAG,CAACgB,IAAI,CAAC;IACpB,CAAC,CAAC;IACF,OAAOF,MAAM;EACf;AACF;AAEA,OAAO,SAASG,mBAAmB,CAACC,KAAK,EAAE;EACzC,OAAOC,KAAK,CAACD,KAAK,CAAC;AACrB;AAEA,SAASE,MAAM,CAACC,CAAC,EAAE;EACjB,IAAI,OAAOA,CAAC,KAAK,QAAQ,IAAIA,CAAC,EAAEC,SAAS,EAAE;IACzC,IAAI,CAACD,CAAC,CAACE,KAAK,EAAE;MACZF,CAAC,CAACE,KAAK,GAAG,IAAIrB,qBAAqB,CAAC,CAAC,CAAC;IACxC;IACA,OAAOmB,CAAC,CAACE,KAAK;EAChB;EACA;EACA,OAAOF,CAAC,YAAYpB,YAAY,GAC5BoB,CAAC,GACDnB,qBAAqB,CAACsB,gBAAgB,CAACH,CAAC,CAAC;AAC/C;AAEA,OAAO,SAASF,KAAK,CAACE,CAAC,EAAE;EACvB,OAAOI,KAAK,CAACC,OAAO,CAACL,CAAC,CAAC,GACnB,IAAIlB,aAAa,CAACkB,CAAC,CAACM,GAAG,CAAEX,IAAI,IAAKG,KAAK,CAACH,IAAI,CAAC,CAAC,CAAC,GAC/CI,MAAM,CAACC,CAAC,CAAC;AACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}