{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\13093\\\\codestuff\\\\portfolio\\\\src\\\\components\\\\AnimatedBackground.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Box, Pressable, Switch, Text, useColorMode } from \"native-base\";\nimport { View } from \"react-native\";\nimport { useSpring, animated, useSpringValue } from \"@react-spring/web\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnimatedBackground = () => {\n  _s();\n  const {\n    colorMode,\n    toggleColorMode\n  } = useColorMode();\n  const colorvalue = useSpringValue(0);\n  const handleToggle = () => {\n    toggleColorMode();\n    colorMode === \"light\" ? colorvalue.start(1) : colorvalue.start(0);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Switch, {\n      position: \"fixed\",\n      zIndex: \"100\",\n      onValueChange: () => {\n        handleToggle();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(animated.div, {\n      style: {\n        backgroundColor: colorvalue.to([0, 1], [\"white\", \"black\"]),\n        height: 200,\n        width: 200\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(AnimatedBackground, \"Nh9vVgwW7Cl3Ec9TTolTGlgZIlo=\", false, function () {\n  return [useColorMode, useSpringValue];\n});\n_c = AnimatedBackground;\nexport default AnimatedBackground;\nvar _c;\n$RefreshReg$(_c, \"AnimatedBackground\");","map":{"version":3,"names":["React","useState","useEffect","Box","Pressable","Switch","Text","useColorMode","View","useSpring","animated","useSpringValue","AnimatedBackground","colorMode","toggleColorMode","colorvalue","handleToggle","start","backgroundColor","to","height","width"],"sources":["C:/Users/13093/codestuff/portfolio/src/components/AnimatedBackground.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Box, Pressable, Switch, Text, useColorMode } from \"native-base\";\r\n\r\nimport { View } from \"react-native\";\r\nimport { useSpring, animated, useSpringValue } from \"@react-spring/web\";\r\n\r\nconst AnimatedBackground = () => {\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n  const colorvalue = useSpringValue(0);\r\n\r\n  const handleToggle = () => {\r\n    toggleColorMode();\r\n    colorMode === \"light\" ? colorvalue.start(1) : colorvalue.start(0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Switch\r\n        position={\"fixed\"}\r\n        zIndex=\"100\"\r\n        onValueChange={() => {\r\n          handleToggle();\r\n        }}\r\n      />\r\n      <animated.div\r\n        style={{\r\n          backgroundColor: colorvalue.to([0, 1], [\"white\", \"black\"]),\r\n          height: 200,\r\n          width: 200,\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AnimatedBackground;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,GAAG,EAAEC,SAAS,EAAEC,MAAM,EAAEC,IAAI,EAAEC,YAAY,QAAQ,aAAa;AAExE,SAASC,IAAI,QAAQ,cAAc;AACnC,SAASC,SAAS,EAAEC,QAAQ,EAAEC,cAAc,QAAQ,mBAAmB;AAAC;AAAA;AAExE,MAAMC,kBAAkB,GAAG,MAAM;EAAA;EAC/B,MAAM;IAAEC,SAAS;IAAEC;EAAgB,CAAC,GAAGP,YAAY,EAAE;EAErD,MAAMQ,UAAU,GAAGJ,cAAc,CAAC,CAAC,CAAC;EAEpC,MAAMK,YAAY,GAAG,MAAM;IACzBF,eAAe,EAAE;IACjBD,SAAS,KAAK,OAAO,GAAGE,UAAU,CAACE,KAAK,CAAC,CAAC,CAAC,GAAGF,UAAU,CAACE,KAAK,CAAC,CAAC,CAAC;EACnE,CAAC;EAED,oBACE;IAAA,wBACE,QAAC,MAAM;MACL,QAAQ,EAAE,OAAQ;MAClB,MAAM,EAAC,KAAK;MACZ,aAAa,EAAE,MAAM;QACnBD,YAAY,EAAE;MAChB;IAAE;MAAA;MAAA;MAAA;IAAA,QACF,eACF,QAAC,QAAQ,CAAC,GAAG;MACX,KAAK,EAAE;QACLE,eAAe,EAAEH,UAAU,CAACI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QAC1DC,MAAM,EAAE,GAAG;QACXC,KAAK,EAAE;MACT;IAAE;MAAA;MAAA;MAAA;IAAA,QACF;EAAA,gBACD;AAEP,CAAC;AAAC,GA5BIT,kBAAkB;EAAA,QACiBL,YAAY,EAEhCI,cAAc;AAAA;AAAA,KAH7BC,kBAAkB;AA8BxB,eAAeA,kBAAkB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}